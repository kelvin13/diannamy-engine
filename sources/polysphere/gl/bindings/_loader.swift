/*
    THIS FILE IS GENERATED. ALL MODIFICATIONS MAY BE LOST!

    Copyright 2017, Kelvin Ma (“taylorswift”), kelvin13ma@gmail.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
extension OpenGL
{
fileprivate static 
let ss0:String = "Available in extension '3DFX_tbuffer'", 
    ss1:String = "Available in extension 'AMD_debug_output'", 
    ss2:String = "Available in extension 'AMD_draw_buffers_blend'", 
    ss3:String = "Available in extension 'AMD_gpu_shader_int64'", 
    ss4:String = "Available in extension 'AMD_interleaved_elements'", 
    ss5:String = "Available in extension 'AMD_multi_draw_indirect'", 
    ss6:String = "Available in extension 'AMD_name_gen_delete'", 
    ss7:String = "Available in extension 'AMD_occlusion_query_event'", 
    ss8:String = "Available in extension 'AMD_performance_monitor'", 
    ss9:String = "Available in extension 'AMD_sample_positions'", 
    ss10:String = "Available in extension 'AMD_sparse_texture'", 
    ss11:String = "Available in extension 'AMD_stencil_operation_extended'", 
    ss12:String = "Available in extension 'AMD_vertex_shader_tessellator'", 
    ss13:String = "Available in extension 'ANGLE_framebuffer_blit'", 
    ss14:String = "Available in extension 'ANGLE_framebuffer_multisample'", 
    ss15:String = "Available in extension 'ANGLE_instanced_arrays'", 
    ss16:String = "Available in extension 'ANGLE_translated_shader_source'", 
    ss17:String = "Available in extension 'APPLE_copy_texture_levels'", 
    ss18:String = "Available in extension 'APPLE_element_array'", 
    ss19:String = "Available in extension 'APPLE_fence'", 
    ss20:String = "Available in extension 'APPLE_flush_buffer_range'", 
    ss21:String = "Available in extension 'APPLE_framebuffer_multisample'", 
    ss22:String = "Available in extension 'APPLE_object_purgeable'", 
    ss23:String = "Available in extension 'APPLE_sync'", 
    ss24:String = "Available in extension 'APPLE_texture_range'", 
    ss25:String = "Available in extension 'APPLE_vertex_array_object'", 
    ss26:String = "Available in extension 'APPLE_vertex_array_range'", 
    ss27:String = "Available in extension 'APPLE_vertex_program_evaluators'", 
    ss28:String = "Available in extension 'ARB_ES2_compatibility'", 
    ss29:String = "Available in extension 'ARB_ES3_1_compatibility'", 
    ss30:String = "Available in extension 'ARB_ES3_2_compatibility'", 
    ss31:String = "Available in extension 'ARB_base_instance'", 
    ss32:String = "Available in extension 'ARB_bindless_texture'", 
    ss33:String = "Available in extension 'ARB_blend_func_extended'", 
    ss34:String = "Available in extension 'ARB_buffer_storage'", 
    ss35:String = "Available in extension 'ARB_cl_event'", 
    ss36:String = "Available in extension 'ARB_clear_buffer_object'", 
    ss37:String = "Available in extension 'ARB_clear_texture'", 
    ss38:String = "Available in extension 'ARB_clip_control'", 
    ss39:String = "Available in extension 'ARB_color_buffer_float'", 
    ss40:String = "Available in extension 'ARB_compute_shader'", 
    ss41:String = "Available in extension 'ARB_compute_variable_group_size'", 
    ss42:String = "Available in extension 'ARB_copy_buffer'", 
    ss43:String = "Available in extension 'ARB_copy_image'", 
    ss44:String = "Available in extension 'ARB_debug_output'", 
    ss45:String = "Available in extension 'ARB_direct_state_access'", 
    ss46:String = "Available in extension 'ARB_draw_buffers'", 
    ss47:String = "Available in extension 'ARB_draw_buffers_blend'", 
    ss48:String = "Available in extension 'ARB_draw_elements_base_vertex'", 
    ss49:String = "Available in extension 'ARB_draw_indirect'", 
    ss50:String = "Available in extension 'ARB_draw_instanced'", 
    ss51:String = "Available in extension 'ARB_fragment_program'", 
    ss52:String = "Available in extension 'ARB_framebuffer_no_attachments'", 
    ss53:String = "Available in extension 'ARB_framebuffer_object'", 
    ss54:String = "Available in extension 'ARB_geometry_shader4'", 
    ss55:String = "Available in extension 'ARB_get_program_binary'", 
    ss56:String = "Available in extension 'ARB_get_texture_sub_image'", 
    ss57:String = "Available in extension 'ARB_gpu_shader_fp64'", 
    ss58:String = "Available in extension 'ARB_gpu_shader_int64'", 
    ss59:String = "Available in extension 'ARB_imaging'", 
    ss60:String = "Available in extension 'ARB_indirect_parameters'", 
    ss61:String = "Available in extension 'ARB_instanced_arrays'", 
    ss62:String = "Available in extension 'ARB_internalformat_query'", 
    ss63:String = "Available in extension 'ARB_internalformat_query2'", 
    ss64:String = "Available in extension 'ARB_invalidate_subdata'", 
    ss65:String = "Available in extension 'ARB_map_buffer_range'", 
    ss66:String = "Available in extension 'ARB_matrix_palette'", 
    ss67:String = "Available in extension 'ARB_multi_bind'", 
    ss68:String = "Available in extension 'ARB_multi_draw_indirect'", 
    ss69:String = "Available in extension 'ARB_multisample'", 
    ss70:String = "Available in extension 'ARB_multitexture'", 
    ss71:String = "Available in extension 'ARB_occlusion_query'", 
    ss72:String = "Available in extension 'ARB_parallel_shader_compile'", 
    ss73:String = "Available in extension 'ARB_point_parameters'", 
    ss74:String = "Available in extension 'ARB_program_interface_query'", 
    ss75:String = "Available in extension 'ARB_provoking_vertex'", 
    ss76:String = "Available in extension 'ARB_robustness'", 
    ss77:String = "Available in extension 'ARB_sample_locations'", 
    ss78:String = "Available in extension 'ARB_sample_shading'", 
    ss79:String = "Available in extension 'ARB_sampler_objects'", 
    ss80:String = "Available in extension 'ARB_separate_shader_objects'", 
    ss81:String = "Available in extension 'ARB_shader_atomic_counters'", 
    ss82:String = "Available in extension 'ARB_shader_image_load_store'", 
    ss83:String = "Available in extension 'ARB_shader_objects'", 
    ss84:String = "Available in extension 'ARB_shader_storage_buffer_object'", 
    ss85:String = "Available in extension 'ARB_shader_subroutine'", 
    ss86:String = "Available in extension 'ARB_shading_language_include'", 
    ss87:String = "Available in extension 'ARB_sparse_buffer'", 
    ss88:String = "Available in extension 'ARB_sparse_texture'", 
    ss89:String = "Available in extension 'ARB_sync'", 
    ss90:String = "Available in extension 'ARB_tessellation_shader'", 
    ss91:String = "Available in extension 'ARB_texture_barrier'", 
    ss92:String = "Available in extension 'ARB_texture_buffer_object'", 
    ss93:String = "Available in extension 'ARB_texture_buffer_range'", 
    ss94:String = "Available in extension 'ARB_texture_compression'", 
    ss95:String = "Available in extension 'ARB_texture_multisample'", 
    ss96:String = "Available in extension 'ARB_texture_storage'", 
    ss97:String = "Available in extension 'ARB_texture_storage_multisample'", 
    ss98:String = "Available in extension 'ARB_texture_view'", 
    ss99:String = "Available in extension 'ARB_timer_query'", 
    ss100:String = "Available in extension 'ARB_transform_feedback2'", 
    ss101:String = "Available in extension 'ARB_transform_feedback3'", 
    ss102:String = "Available in extension 'ARB_transform_feedback_instanced'", 
    ss103:String = "Available in extension 'ARB_transpose_matrix'", 
    ss104:String = "Available in extension 'ARB_uniform_buffer_object'", 
    ss105:String = "Available in extension 'ARB_vertex_array_object'", 
    ss106:String = "Available in extension 'ARB_vertex_attrib_64bit'", 
    ss107:String = "Available in extension 'ARB_vertex_attrib_binding'", 
    ss108:String = "Available in extension 'ARB_vertex_blend'", 
    ss109:String = "Available in extension 'ARB_vertex_buffer_object'", 
    ss110:String = "Available in extension 'ARB_vertex_program'", 
    ss111:String = "Available in extension 'ARB_vertex_shader'", 
    ss112:String = "Available in extension 'ARB_vertex_type_2_10_10_10_rev'", 
    ss113:String = "Available in extension 'ARB_viewport_array'", 
    ss114:String = "Available in extension 'ARB_window_pos'", 
    ss115:String = "Available in extension 'ATI_draw_buffers'", 
    ss116:String = "Available in extension 'ATI_element_array'", 
    ss117:String = "Available in extension 'ATI_envmap_bumpmap'", 
    ss118:String = "Available in extension 'ATI_fragment_shader'", 
    ss119:String = "Available in extension 'ATI_map_object_buffer'", 
    ss120:String = "Available in extension 'ATI_pn_triangles'", 
    ss121:String = "Available in extension 'ATI_separate_stencil'", 
    ss122:String = "Available in extension 'ATI_vertex_array_object'", 
    ss123:String = "Available in extension 'ATI_vertex_attrib_array_object'", 
    ss124:String = "Available in extension 'ATI_vertex_streams'", 
    ss125:String = "Available in extension 'EXT_base_instance'", 
    ss126:String = "Available in extension 'EXT_bindable_uniform'", 
    ss127:String = "Available in extension 'EXT_blend_color'", 
    ss128:String = "Available in extension 'EXT_blend_equation_separate'", 
    ss129:String = "Available in extension 'EXT_blend_func_extended'", 
    ss130:String = "Available in extension 'EXT_blend_func_separate'", 
    ss131:String = "Available in extension 'EXT_blend_minmax'", 
    ss132:String = "Available in extension 'EXT_buffer_storage'", 
    ss133:String = "Available in extension 'EXT_color_subtable'", 
    ss134:String = "Available in extension 'EXT_compiled_vertex_array'", 
    ss135:String = "Available in extension 'EXT_convolution'", 
    ss136:String = "Available in extension 'EXT_coordinate_frame'", 
    ss137:String = "Available in extension 'EXT_copy_image'", 
    ss138:String = "Available in extension 'EXT_copy_texture'", 
    ss139:String = "Available in extension 'EXT_cull_vertex'", 
    ss140:String = "Available in extension 'EXT_debug_label'", 
    ss141:String = "Available in extension 'EXT_debug_marker'", 
    ss142:String = "Available in extension 'EXT_depth_bounds_test'", 
    ss143:String = "Available in extension 'EXT_direct_state_access'", 
    ss144:String = "Available in extension 'EXT_discard_framebuffer'", 
    ss145:String = "Available in extension 'EXT_disjoint_timer_query'", 
    ss146:String = "Available in extension 'EXT_draw_buffers'", 
    ss147:String = "Available in extension 'EXT_draw_buffers2'", 
    ss148:String = "Available in extension 'EXT_draw_buffers_indexed'", 
    ss149:String = "Available in extension 'EXT_draw_elements_base_vertex'", 
    ss150:String = "Available in extension 'EXT_draw_instanced'", 
    ss151:String = "Available in extension 'EXT_draw_range_elements'", 
    ss152:String = "Available in extension 'EXT_fog_coord'", 
    ss153:String = "Available in extension 'EXT_framebuffer_blit'", 
    ss154:String = "Available in extension 'EXT_framebuffer_multisample'", 
    ss155:String = "Available in extension 'EXT_framebuffer_object'", 
    ss156:String = "Available in extension 'EXT_geometry_shader'", 
    ss157:String = "Available in extension 'EXT_geometry_shader4'", 
    ss158:String = "Available in extension 'EXT_gpu_program_parameters'", 
    ss159:String = "Available in extension 'EXT_gpu_shader4'", 
    ss160:String = "Available in extension 'EXT_histogram'", 
    ss161:String = "Available in extension 'EXT_index_func'", 
    ss162:String = "Available in extension 'EXT_index_material'", 
    ss163:String = "Available in extension 'EXT_instanced_arrays'", 
    ss164:String = "Available in extension 'EXT_light_texture'", 
    ss165:String = "Available in extension 'EXT_map_buffer_range'", 
    ss166:String = "Available in extension 'EXT_multi_draw_arrays'", 
    ss167:String = "Available in extension 'EXT_multi_draw_indirect'", 
    ss168:String = "Available in extension 'EXT_multisample'", 
    ss169:String = "Available in extension 'EXT_multisampled_render_to_texture'", 
    ss170:String = "Available in extension 'EXT_multiview_draw_buffers'", 
    ss171:String = "Available in extension 'EXT_occlusion_query_boolean'", 
    ss172:String = "Available in extension 'EXT_paletted_texture'", 
    ss173:String = "Available in extension 'EXT_pixel_transform'", 
    ss174:String = "Available in extension 'EXT_point_parameters'", 
    ss175:String = "Available in extension 'EXT_polygon_offset'", 
    ss176:String = "Available in extension 'EXT_polygon_offset_clamp'", 
    ss177:String = "Available in extension 'EXT_primitive_bounding_box'", 
    ss178:String = "Available in extension 'EXT_provoking_vertex'", 
    ss179:String = "Available in extension 'EXT_raster_multisample'", 
    ss180:String = "Available in extension 'EXT_robustness'", 
    ss181:String = "Available in extension 'EXT_secondary_color'", 
    ss182:String = "Available in extension 'EXT_separate_shader_objects'", 
    ss183:String = "Available in extension 'EXT_shader_image_load_store'", 
    ss184:String = "Available in extension 'EXT_sparse_texture'", 
    ss185:String = "Available in extension 'EXT_stencil_clear_tag'", 
    ss186:String = "Available in extension 'EXT_stencil_two_side'", 
    ss187:String = "Available in extension 'EXT_subtexture'", 
    ss188:String = "Available in extension 'EXT_tessellation_shader'", 
    ss189:String = "Available in extension 'EXT_texture3D'", 
    ss190:String = "Available in extension 'EXT_texture_array'", 
    ss191:String = "Available in extension 'EXT_texture_border_clamp'", 
    ss192:String = "Available in extension 'EXT_texture_buffer'", 
    ss193:String = "Available in extension 'EXT_texture_buffer_object'", 
    ss194:String = "Available in extension 'EXT_texture_filter_minmax'", 
    ss195:String = "Available in extension 'EXT_texture_integer'", 
    ss196:String = "Available in extension 'EXT_texture_object'", 
    ss197:String = "Available in extension 'EXT_texture_perturb_normal'", 
    ss198:String = "Available in extension 'EXT_texture_storage'", 
    ss199:String = "Available in extension 'EXT_texture_view'", 
    ss200:String = "Available in extension 'EXT_timer_query'", 
    ss201:String = "Available in extension 'EXT_transform_feedback'", 
    ss202:String = "Available in extension 'EXT_vertex_array'", 
    ss203:String = "Available in extension 'EXT_vertex_attrib_64bit'", 
    ss204:String = "Available in extension 'EXT_vertex_shader'", 
    ss205:String = "Available in extension 'EXT_vertex_weighting'", 
    ss206:String = "Available in extension 'EXT_x11_sync_object'", 
    ss207:String = "Available in extension 'GREMEDY_frame_terminator'", 
    ss208:String = "Available in extension 'GREMEDY_string_marker'", 
    ss209:String = "Available in extension 'HP_image_transform'", 
    ss210:String = "Available in extension 'IBM_multimode_draw_arrays'", 
    ss211:String = "Available in extension 'IBM_static_data'", 
    ss212:String = "Available in extension 'IBM_vertex_array_lists'", 
    ss213:String = "Available in extension 'IMG_multisampled_render_to_texture'", 
    ss214:String = "Available in extension 'IMG_user_clip_plane'", 
    ss215:String = "Available in extension 'INGR_blend_func_separate'", 
    ss216:String = "Available in extension 'INTEL_framebuffer_CMAA'", 
    ss217:String = "Available in extension 'INTEL_map_texture'", 
    ss218:String = "Available in extension 'INTEL_parallel_arrays'", 
    ss219:String = "Available in extension 'INTEL_performance_query'", 
    ss220:String = "Available in extension 'KHR_blend_equation_advanced'", 
    ss221:String = "Available in extension 'KHR_debug'", 
    ss222:String = "Available in extension 'KHR_robustness'", 
    ss223:String = "Available in extension 'MESA_resize_buffers'", 
    ss224:String = "Available in extension 'MESA_window_pos'", 
    ss225:String = "Available in extension 'NVX_conditional_render'", 
    ss226:String = "Available in extension 'NV_bindless_multi_draw_indirect'", 
    ss227:String = "Available in extension 'NV_bindless_multi_draw_indirect_count'", 
    ss228:String = "Available in extension 'NV_bindless_texture'", 
    ss229:String = "Available in extension 'NV_blend_equation_advanced'", 
    ss230:String = "Available in extension 'NV_command_list'", 
    ss231:String = "Available in extension 'NV_conditional_render'", 
    ss232:String = "Available in extension 'NV_conservative_raster'", 
    ss233:String = "Available in extension 'NV_conservative_raster_dilate'", 
    ss234:String = "Available in extension 'NV_copy_buffer'", 
    ss235:String = "Available in extension 'NV_copy_image'", 
    ss236:String = "Available in extension 'NV_coverage_sample'", 
    ss237:String = "Available in extension 'NV_depth_buffer_float'", 
    ss238:String = "Available in extension 'NV_draw_buffers'", 
    ss239:String = "Available in extension 'NV_draw_instanced'", 
    ss240:String = "Available in extension 'NV_draw_texture'", 
    ss241:String = "Available in extension 'NV_evaluators'", 
    ss242:String = "Available in extension 'NV_explicit_multisample'", 
    ss243:String = "Available in extension 'NV_fence'", 
    ss244:String = "Available in extension 'NV_fragment_coverage_to_color'", 
    ss245:String = "Available in extension 'NV_fragment_program'", 
    ss246:String = "Available in extension 'NV_framebuffer_blit'", 
    ss247:String = "Available in extension 'NV_framebuffer_mixed_samples'", 
    ss248:String = "Available in extension 'NV_framebuffer_multisample'", 
    ss249:String = "Available in extension 'NV_framebuffer_multisample_coverage'", 
    ss250:String = "Available in extension 'NV_geometry_program4'", 
    ss251:String = "Available in extension 'NV_gpu_program4'", 
    ss252:String = "Available in extension 'NV_gpu_program5'", 
    ss253:String = "Available in extension 'NV_gpu_shader5'", 
    ss254:String = "Available in extension 'NV_half_float'", 
    ss255:String = "Available in extension 'NV_instanced_arrays'", 
    ss256:String = "Available in extension 'NV_internalformat_sample_query'", 
    ss257:String = "Available in extension 'NV_non_square_matrices'", 
    ss258:String = "Available in extension 'NV_occlusion_query'", 
    ss259:String = "Available in extension 'NV_parameter_buffer_object'", 
    ss260:String = "Available in extension 'NV_path_rendering'", 
    ss261:String = "Available in extension 'NV_pixel_data_range'", 
    ss262:String = "Available in extension 'NV_point_sprite'", 
    ss263:String = "Available in extension 'NV_polygon_mode'", 
    ss264:String = "Available in extension 'NV_present_video'", 
    ss265:String = "Available in extension 'NV_primitive_restart'", 
    ss266:String = "Available in extension 'NV_read_buffer'", 
    ss267:String = "Available in extension 'NV_register_combiners'", 
    ss268:String = "Available in extension 'NV_register_combiners2'", 
    ss269:String = "Available in extension 'NV_sample_locations'", 
    ss270:String = "Available in extension 'NV_shader_buffer_load'", 
    ss271:String = "Available in extension 'NV_texture_barrier'", 
    ss272:String = "Available in extension 'NV_texture_multisample'", 
    ss273:String = "Available in extension 'NV_transform_feedback'", 
    ss274:String = "Available in extension 'NV_transform_feedback2'", 
    ss275:String = "Available in extension 'NV_vdpau_interop'", 
    ss276:String = "Available in extension 'NV_vertex_array_range'", 
    ss277:String = "Available in extension 'NV_vertex_attrib_integer_64bit'", 
    ss278:String = "Available in extension 'NV_vertex_buffer_unified_memory'", 
    ss279:String = "Available in extension 'NV_vertex_program'", 
    ss280:String = "Available in extension 'NV_vertex_program4'", 
    ss281:String = "Available in extension 'NV_video_capture'", 
    ss282:String = "Available in extension 'NV_viewport_array'", 
    ss283:String = "Available in extension 'OES_EGL_image'", 
    ss284:String = "Available in extension 'OES_blend_equation_separate'", 
    ss285:String = "Available in extension 'OES_blend_func_separate'", 
    ss286:String = "Available in extension 'OES_blend_subtract'", 
    ss287:String = "Available in extension 'OES_byte_coordinates'", 
    ss288:String = "Available in extension 'OES_copy_image'", 
    ss289:String = "Available in extension 'OES_draw_buffers_indexed'", 
    ss290:String = "Available in extension 'OES_draw_elements_base_vertex'", 
    ss291:String = "Available in extension 'OES_draw_texture'", 
    ss292:String = "Available in extension 'OES_fixed_point'", 
    ss293:String = "Available in extension 'OES_framebuffer_object'", 
    ss294:String = "Available in extension 'OES_geometry_shader'", 
    ss295:String = "Available in extension 'OES_get_program_binary'", 
    ss296:String = "Available in extension 'OES_mapbuffer'", 
    ss297:String = "Available in extension 'OES_matrix_palette'", 
    ss298:String = "Available in extension 'OES_point_size_array'", 
    ss299:String = "Available in extension 'OES_primitive_bounding_box'", 
    ss300:String = "Available in extension 'OES_query_matrix'", 
    ss301:String = "Available in extension 'OES_sample_shading'", 
    ss302:String = "Available in extension 'OES_single_precision'", 
    ss303:String = "Available in extension 'OES_tessellation_shader'", 
    ss304:String = "Available in extension 'OES_texture_3D'", 
    ss305:String = "Available in extension 'OES_texture_border_clamp'", 
    ss306:String = "Available in extension 'OES_texture_buffer'", 
    ss307:String = "Available in extension 'OES_texture_cube_map'", 
    ss308:String = "Available in extension 'OES_texture_storage_multisample_2d_array'", 
    ss309:String = "Available in extension 'OES_texture_view'", 
    ss310:String = "Available in extension 'OES_vertex_array_object'", 
    ss311:String = "Available in extension 'OVR_multiview'", 
    ss312:String = "Available in extension 'OVR_multiview_multisampled_render_to_texture'", 
    ss313:String = "Available in extension 'PGI_misc_hints'", 
    ss314:String = "Available in extension 'QCOM_alpha_test'", 
    ss315:String = "Available in extension 'QCOM_driver_control'", 
    ss316:String = "Available in extension 'QCOM_extended_get'", 
    ss317:String = "Available in extension 'QCOM_extended_get2'", 
    ss318:String = "Available in extension 'QCOM_tiled_rendering'", 
    ss319:String = "Available in extension 'SGIS_detail_texture'", 
    ss320:String = "Available in extension 'SGIS_fog_function'", 
    ss321:String = "Available in extension 'SGIS_multisample'", 
    ss322:String = "Available in extension 'SGIS_pixel_texture'", 
    ss323:String = "Available in extension 'SGIS_point_parameters'", 
    ss324:String = "Available in extension 'SGIS_sharpen_texture'", 
    ss325:String = "Available in extension 'SGIS_texture4D'", 
    ss326:String = "Available in extension 'SGIS_texture_color_mask'", 
    ss327:String = "Available in extension 'SGIS_texture_filter4'", 
    ss328:String = "Available in extension 'SGIX_async'", 
    ss329:String = "Available in extension 'SGIX_flush_raster'", 
    ss330:String = "Available in extension 'SGIX_fragment_lighting'", 
    ss331:String = "Available in extension 'SGIX_framezoom'", 
    ss332:String = "Available in extension 'SGIX_igloo_interface'", 
    ss333:String = "Available in extension 'SGIX_instruments'", 
    ss334:String = "Available in extension 'SGIX_list_priority'", 
    ss335:String = "Available in extension 'SGIX_pixel_texture'", 
    ss336:String = "Available in extension 'SGIX_polynomial_ffd'", 
    ss337:String = "Available in extension 'SGIX_reference_plane'", 
    ss338:String = "Available in extension 'SGIX_sprite'", 
    ss339:String = "Available in extension 'SGIX_tag_sample_buffer'", 
    ss340:String = "Available in extension 'SGI_color_table'", 
    ss341:String = "Available in extension 'SUNX_constant_data'", 
    ss342:String = "Available in extension 'SUN_global_alpha'", 
    ss343:String = "Available in extension 'SUN_mesh_array'", 
    ss344:String = "Available in extension 'SUN_triangle_list'", 
    ss345:String = "Available in extension 'SUN_vertex'", 
    ss346:String = "Available since OpenGL 1.0", 
    ss347:String = "Available since OpenGL 1.1", 
    ss348:String = "Available since OpenGL 1.2", 
    ss349:String = "Available since OpenGL 1.3", 
    ss350:String = "Available since OpenGL 1.4", 
    ss351:String = "Available since OpenGL 1.5", 
    ss352:String = "Available since OpenGL 2.0", 
    ss353:String = "Available since OpenGL 2.1", 
    ss354:String = "Available since OpenGL 3.0", 
    ss355:String = "Available since OpenGL 3.1", 
    ss356:String = "Available since OpenGL 3.2", 
    ss357:String = "Available since OpenGL 3.3", 
    ss358:String = "Available since OpenGL 4.0", 
    ss359:String = "Available since OpenGL 4.1", 
    ss360:String = "Available since OpenGL 4.2", 
    ss361:String = "Available since OpenGL 4.3", 
    ss362:String = "Available since OpenGL 4.4", 
    ss363:String = "Available since OpenGL 4.5", 
    ss364:String = "Available since OpenGL ES 1.0", 
    ss365:String = "Available since OpenGL ES 2.0", 
    ss366:String = "Available since OpenGL ES 3.0", 
    ss367:String = "Available since OpenGL ES 3.1", 
    ss368:String = "Available since OpenGL ES 3.2", 
    ss369:String = "Unavailable since OpenGL 3.2"

// OpenGL function loaders; functions are loaded lazily and replace
// themselves with their loaded versions on first call
static 
var glAccum:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glAccum
static 
var glAccumxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glAccumxOES
static 
var glActiveProgramEXT:@convention(c) (OpenGL.UInt) -> () = _load_glActiveProgramEXT
static 
var glActiveShaderProgram:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glActiveShaderProgram
static 
var glActiveShaderProgramEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glActiveShaderProgramEXT
static 
var glActiveStencilFaceEXT:@convention(c) (OpenGL.Enum) -> () = _load_glActiveStencilFaceEXT
static 
var glActiveTexture:@convention(c) (OpenGL.Enum) -> () = _load_glActiveTexture
static 
var glActiveTextureARB:@convention(c) (OpenGL.Enum) -> () = _load_glActiveTextureARB
static 
var glActiveVaryingNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glActiveVaryingNV
static 
var glAlphaFragmentOp1ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glAlphaFragmentOp1ATI
static 
var glAlphaFragmentOp2ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glAlphaFragmentOp2ATI
static 
var glAlphaFragmentOp3ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glAlphaFragmentOp3ATI
static 
var glAlphaFunc:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glAlphaFunc
static 
var glAlphaFuncQCOM:@convention(c) (OpenGL.Enum, OpenGL.ClampFloat) -> () = _load_glAlphaFuncQCOM
static 
var glAlphaFuncx:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glAlphaFuncx
static 
var glAlphaFuncxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glAlphaFuncxOES
static 
var glApplyFramebufferAttachmentCMAAINTEL:@convention(c) () -> () = _load_glApplyFramebufferAttachmentCMAAINTEL
static 
var glApplyTextureEXT:@convention(c) (OpenGL.Enum) -> () = _load_glApplyTextureEXT
static 
var glAreProgramsResidentNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool = _load_glAreProgramsResidentNV
static 
var glAreTexturesResident:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool = _load_glAreTexturesResident
static 
var glAreTexturesResidentEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool = _load_glAreTexturesResidentEXT
static 
var glArrayElement:@convention(c) (OpenGL.Int) -> () = _load_glArrayElement
static 
var glArrayElementEXT:@convention(c) (OpenGL.Int) -> () = _load_glArrayElementEXT
static 
var glArrayObjectATI:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.UInt, OpenGL.UInt) -> () = _load_glArrayObjectATI
static 
var glAsyncMarkerSGIX:@convention(c) (OpenGL.UInt) -> () = _load_glAsyncMarkerSGIX
static 
var glAttachObjectARB:@convention(c) (OpenGL.HandleARB, OpenGL.HandleARB) -> () = _load_glAttachObjectARB
static 
var glAttachShader:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glAttachShader
static 
var glBegin:@convention(c) (OpenGL.Enum) -> () = _load_glBegin
static 
var glBeginConditionalRender:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBeginConditionalRender
static 
var glBeginConditionalRenderNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBeginConditionalRenderNV
static 
var glBeginConditionalRenderNVX:@convention(c) (OpenGL.UInt) -> () = _load_glBeginConditionalRenderNVX
static 
var glBeginFragmentShaderATI:@convention(c) () -> () = _load_glBeginFragmentShaderATI
static 
var glBeginOcclusionQueryNV:@convention(c) (OpenGL.UInt) -> () = _load_glBeginOcclusionQueryNV
static 
var glBeginPerfMonitorAMD:@convention(c) (OpenGL.UInt) -> () = _load_glBeginPerfMonitorAMD
static 
var glBeginPerfQueryINTEL:@convention(c) (OpenGL.UInt) -> () = _load_glBeginPerfQueryINTEL
static 
var glBeginQuery:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBeginQuery
static 
var glBeginQueryARB:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBeginQueryARB
static 
var glBeginQueryEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBeginQueryEXT
static 
var glBeginQueryIndexed:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glBeginQueryIndexed
static 
var glBeginTransformFeedback:@convention(c) (OpenGL.Enum) -> () = _load_glBeginTransformFeedback
static 
var glBeginTransformFeedbackEXT:@convention(c) (OpenGL.Enum) -> () = _load_glBeginTransformFeedbackEXT
static 
var glBeginTransformFeedbackNV:@convention(c) (OpenGL.Enum) -> () = _load_glBeginTransformFeedbackNV
static 
var glBeginVertexShaderEXT:@convention(c) () -> () = _load_glBeginVertexShaderEXT
static 
var glBeginVideoCaptureNV:@convention(c) (OpenGL.UInt) -> () = _load_glBeginVideoCaptureNV
static 
var glBindAttribLocation:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glBindAttribLocation
static 
var glBindAttribLocationARB:@convention(c) (OpenGL.HandleARB, OpenGL.UInt, UnsafePointer<OpenGL.CharARB>?) -> () = _load_glBindAttribLocationARB
static 
var glBindBuffer:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindBuffer
static 
var glBindBufferARB:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindBufferARB
static 
var glBindBufferBase:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glBindBufferBase
static 
var glBindBufferBaseEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glBindBufferBaseEXT
static 
var glBindBufferBaseNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glBindBufferBaseNV
static 
var glBindBufferOffsetEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer) -> () = _load_glBindBufferOffsetEXT
static 
var glBindBufferOffsetNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer) -> () = _load_glBindBufferOffsetNV
static 
var glBindBufferRange:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glBindBufferRange
static 
var glBindBufferRangeEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glBindBufferRangeEXT
static 
var glBindBufferRangeNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glBindBufferRangeNV
static 
var glBindBuffersBase:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glBindBuffersBase
static 
var glBindBuffersRange:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.IntPointer>?, UnsafePointer<OpenGL.SizePointer>?) -> () = _load_glBindBuffersRange
static 
var glBindFragDataLocation:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glBindFragDataLocation
static 
var glBindFragDataLocationEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glBindFragDataLocationEXT
static 
var glBindFragDataLocationIndexed:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glBindFragDataLocationIndexed
static 
var glBindFragDataLocationIndexedEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> () = _load_glBindFragDataLocationIndexedEXT
static 
var glBindFragmentShaderATI:@convention(c) (OpenGL.UInt) -> () = _load_glBindFragmentShaderATI
static 
var glBindFramebuffer:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindFramebuffer
static 
var glBindFramebufferEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindFramebufferEXT
static 
var glBindFramebufferOES:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindFramebufferOES
static 
var glBindImageTexture:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Bool, OpenGL.Int, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBindImageTexture
static 
var glBindImageTextureEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Bool, OpenGL.Int, OpenGL.Enum, OpenGL.Int) -> () = _load_glBindImageTextureEXT
static 
var glBindImageTextures:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glBindImageTextures
static 
var glBindLightParameterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> OpenGL.UInt = _load_glBindLightParameterEXT
static 
var glBindMaterialParameterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> OpenGL.UInt = _load_glBindMaterialParameterEXT
static 
var glBindMultiTextureEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindMultiTextureEXT
static 
var glBindParameterEXT:@convention(c) (OpenGL.Enum) -> OpenGL.UInt = _load_glBindParameterEXT
static 
var glBindProgramARB:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindProgramARB
static 
var glBindProgramNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindProgramNV
static 
var glBindProgramPipeline:@convention(c) (OpenGL.UInt) -> () = _load_glBindProgramPipeline
static 
var glBindProgramPipelineEXT:@convention(c) (OpenGL.UInt) -> () = _load_glBindProgramPipelineEXT
static 
var glBindRenderbuffer:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindRenderbuffer
static 
var glBindRenderbufferEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindRenderbufferEXT
static 
var glBindRenderbufferOES:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindRenderbufferOES
static 
var glBindSampler:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glBindSampler
static 
var glBindSamplers:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glBindSamplers
static 
var glBindTexGenParameterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> OpenGL.UInt = _load_glBindTexGenParameterEXT
static 
var glBindTexture:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindTexture
static 
var glBindTextureEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindTextureEXT
static 
var glBindTextureUnit:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glBindTextureUnit
static 
var glBindTextureUnitParameterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> OpenGL.UInt = _load_glBindTextureUnitParameterEXT
static 
var glBindTextures:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glBindTextures
static 
var glBindTransformFeedback:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindTransformFeedback
static 
var glBindTransformFeedbackNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindTransformFeedbackNV
static 
var glBindVertexArray:@convention(c) (OpenGL.UInt) -> () = _load_glBindVertexArray
static 
var glBindVertexArrayAPPLE:@convention(c) (OpenGL.UInt) -> () = _load_glBindVertexArrayAPPLE
static 
var glBindVertexArrayOES:@convention(c) (OpenGL.UInt) -> () = _load_glBindVertexArrayOES
static 
var glBindVertexBuffer:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.Size) -> () = _load_glBindVertexBuffer
static 
var glBindVertexBuffers:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.IntPointer>?, UnsafePointer<OpenGL.Size>?) -> () = _load_glBindVertexBuffers
static 
var glBindVertexShaderEXT:@convention(c) (OpenGL.UInt) -> () = _load_glBindVertexShaderEXT
static 
var glBindVideoCaptureStreamBufferNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointerARB) -> () = _load_glBindVideoCaptureStreamBufferNV
static 
var glBindVideoCaptureStreamTextureNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glBindVideoCaptureStreamTextureNV
static 
var glBinormal3bEXT:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glBinormal3bEXT
static 
var glBinormal3bvEXT:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glBinormal3bvEXT
static 
var glBinormal3dEXT:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glBinormal3dEXT
static 
var glBinormal3dvEXT:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glBinormal3dvEXT
static 
var glBinormal3fEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glBinormal3fEXT
static 
var glBinormal3fvEXT:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glBinormal3fvEXT
static 
var glBinormal3iEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glBinormal3iEXT
static 
var glBinormal3ivEXT:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glBinormal3ivEXT
static 
var glBinormal3sEXT:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glBinormal3sEXT
static 
var glBinormal3svEXT:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glBinormal3svEXT
static 
var glBinormalPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glBinormalPointerEXT
static 
var glBitmap:@convention(c) (OpenGL.Size, OpenGL.Size, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, UnsafePointer<OpenGL.UByte>?) -> () = _load_glBitmap
static 
var glBitmapxOES:@convention(c) (OpenGL.Size, OpenGL.Size, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, UnsafePointer<OpenGL.UByte>?) -> () = _load_glBitmapxOES
static 
var glBlendBarrier:@convention(c) () -> () = _load_glBlendBarrier
static 
var glBlendBarrierKHR:@convention(c) () -> () = _load_glBlendBarrierKHR
static 
var glBlendBarrierNV:@convention(c) () -> () = _load_glBlendBarrierNV
static 
var glBlendColor:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glBlendColor
static 
var glBlendColorEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glBlendColorEXT
static 
var glBlendColorxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glBlendColorxOES
static 
var glBlendEquation:@convention(c) (OpenGL.Enum) -> () = _load_glBlendEquation
static 
var glBlendEquationEXT:@convention(c) (OpenGL.Enum) -> () = _load_glBlendEquationEXT
static 
var glBlendEquationIndexedAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBlendEquationIndexedAMD
static 
var glBlendEquationOES:@convention(c) (OpenGL.Enum) -> () = _load_glBlendEquationOES
static 
var glBlendEquationSeparate:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparate
static 
var glBlendEquationSeparateEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateEXT
static 
var glBlendEquationSeparateIndexedAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateIndexedAMD
static 
var glBlendEquationSeparateOES:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateOES
static 
var glBlendEquationSeparatei:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparatei
static 
var glBlendEquationSeparateiARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateiARB
static 
var glBlendEquationSeparateiEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateiEXT
static 
var glBlendEquationSeparateiOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendEquationSeparateiOES
static 
var glBlendEquationi:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBlendEquationi
static 
var glBlendEquationiARB:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBlendEquationiARB
static 
var glBlendEquationiEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBlendEquationiEXT
static 
var glBlendEquationiOES:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glBlendEquationiOES
static 
var glBlendFunc:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFunc
static 
var glBlendFuncIndexedAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncIndexedAMD
static 
var glBlendFuncSeparate:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparate
static 
var glBlendFuncSeparateEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateEXT
static 
var glBlendFuncSeparateINGR:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateINGR
static 
var glBlendFuncSeparateIndexedAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateIndexedAMD
static 
var glBlendFuncSeparateOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateOES
static 
var glBlendFuncSeparatei:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparatei
static 
var glBlendFuncSeparateiARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateiARB
static 
var glBlendFuncSeparateiEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateiEXT
static 
var glBlendFuncSeparateiOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFuncSeparateiOES
static 
var glBlendFunci:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFunci
static 
var glBlendFunciARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFunciARB
static 
var glBlendFunciEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFunciEXT
static 
var glBlendFunciOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glBlendFunciOES
static 
var glBlendParameteriNV:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glBlendParameteriNV
static 
var glBlitFramebuffer:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Bitfield, OpenGL.Enum) -> () = _load_glBlitFramebuffer
static 
var glBlitFramebufferANGLE:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Bitfield, OpenGL.Enum) -> () = _load_glBlitFramebufferANGLE
static 
var glBlitFramebufferEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Bitfield, OpenGL.Enum) -> () = _load_glBlitFramebufferEXT
static 
var glBlitFramebufferNV:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Bitfield, OpenGL.Enum) -> () = _load_glBlitFramebufferNV
static 
var glBlitNamedFramebuffer:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Bitfield, OpenGL.Enum) -> () = _load_glBlitNamedFramebuffer
static 
var glBufferAddressRangeNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.SizePointer) -> () = _load_glBufferAddressRangeNV
static 
var glBufferData:@convention(c) (OpenGL.Enum, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Enum) -> () = _load_glBufferData
static 
var glBufferDataARB:@convention(c) (OpenGL.Enum, OpenGL.SizePointerARB, UnsafeRawPointer?, OpenGL.Enum) -> () = _load_glBufferDataARB
static 
var glBufferPageCommitmentARB:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bool) -> () = _load_glBufferPageCommitmentARB
static 
var glBufferParameteriAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glBufferParameteriAPPLE
static 
var glBufferStorage:@convention(c) (OpenGL.Enum, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Bitfield) -> () = _load_glBufferStorage
static 
var glBufferStorageEXT:@convention(c) (OpenGL.Enum, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Bitfield) -> () = _load_glBufferStorageEXT
static 
var glBufferSubData:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeRawPointer?) -> () = _load_glBufferSubData
static 
var glBufferSubDataARB:@convention(c) (OpenGL.Enum, OpenGL.IntPointerARB, OpenGL.SizePointerARB, UnsafeRawPointer?) -> () = _load_glBufferSubDataARB
static 
var glCallCommandListNV:@convention(c) (OpenGL.UInt) -> () = _load_glCallCommandListNV
static 
var glCallList:@convention(c) (OpenGL.UInt) -> () = _load_glCallList
static 
var glCallLists:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glCallLists
static 
var glCheckFramebufferStatus:@convention(c) (OpenGL.Enum) -> OpenGL.Enum = _load_glCheckFramebufferStatus
static 
var glCheckFramebufferStatusEXT:@convention(c) (OpenGL.Enum) -> OpenGL.Enum = _load_glCheckFramebufferStatusEXT
static 
var glCheckFramebufferStatusOES:@convention(c) (OpenGL.Enum) -> OpenGL.Enum = _load_glCheckFramebufferStatusOES
static 
var glCheckNamedFramebufferStatus:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> OpenGL.Enum = _load_glCheckNamedFramebufferStatus
static 
var glCheckNamedFramebufferStatusEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> OpenGL.Enum = _load_glCheckNamedFramebufferStatusEXT
static 
var glClampColor:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glClampColor
static 
var glClampColorARB:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glClampColorARB
static 
var glClear:@convention(c) (OpenGL.Bitfield) -> () = _load_glClear
static 
var glClearAccum:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glClearAccum
static 
var glClearAccumxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glClearAccumxOES
static 
var glClearBufferData:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearBufferData
static 
var glClearBufferSubData:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearBufferSubData
static 
var glClearBufferfi:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Float, OpenGL.Int) -> () = _load_glClearBufferfi
static 
var glClearBufferfv:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glClearBufferfv
static 
var glClearBufferiv:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Int>?) -> () = _load_glClearBufferiv
static 
var glClearBufferuiv:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.UInt>?) -> () = _load_glClearBufferuiv
static 
var glClearColor:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glClearColor
static 
var glClearColorIiEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glClearColorIiEXT
static 
var glClearColorIuiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glClearColorIuiEXT
static 
var glClearColorx:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glClearColorx
static 
var glClearColorxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glClearColorxOES
static 
var glClearDepth:@convention(c) (OpenGL.Double) -> () = _load_glClearDepth
static 
var glClearDepthdNV:@convention(c) (OpenGL.Double) -> () = _load_glClearDepthdNV
static 
var glClearDepthf:@convention(c) (OpenGL.Float) -> () = _load_glClearDepthf
static 
var glClearDepthfOES:@convention(c) (OpenGL.ClampFloat) -> () = _load_glClearDepthfOES
static 
var glClearDepthx:@convention(c) (OpenGL.Fixed) -> () = _load_glClearDepthx
static 
var glClearDepthxOES:@convention(c) (OpenGL.Fixed) -> () = _load_glClearDepthxOES
static 
var glClearIndex:@convention(c) (OpenGL.Float) -> () = _load_glClearIndex
static 
var glClearNamedBufferData:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearNamedBufferData
static 
var glClearNamedBufferDataEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearNamedBufferDataEXT
static 
var glClearNamedBufferSubData:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearNamedBufferSubData
static 
var glClearNamedBufferSubDataEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.SizePointer, OpenGL.SizePointer, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearNamedBufferSubDataEXT
static 
var glClearNamedFramebufferfi:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Float, OpenGL.Int) -> () = _load_glClearNamedFramebufferfi
static 
var glClearNamedFramebufferfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glClearNamedFramebufferfv
static 
var glClearNamedFramebufferiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Int>?) -> () = _load_glClearNamedFramebufferiv
static 
var glClearNamedFramebufferuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.UInt>?) -> () = _load_glClearNamedFramebufferuiv
static 
var glClearStencil:@convention(c) (OpenGL.Int) -> () = _load_glClearStencil
static 
var glClearTexImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearTexImage
static 
var glClearTexSubImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glClearTexSubImage
static 
var glClientActiveTexture:@convention(c) (OpenGL.Enum) -> () = _load_glClientActiveTexture
static 
var glClientActiveTextureARB:@convention(c) (OpenGL.Enum) -> () = _load_glClientActiveTextureARB
static 
var glClientActiveVertexStreamATI:@convention(c) (OpenGL.Enum) -> () = _load_glClientActiveVertexStreamATI
static 
var glClientAttribDefaultEXT:@convention(c) (OpenGL.Bitfield) -> () = _load_glClientAttribDefaultEXT
static 
var glClientWaitSync:@convention(c) (OpenGL.Sync, OpenGL.Bitfield, OpenGL.UInt64) -> OpenGL.Enum = _load_glClientWaitSync
static 
var glClientWaitSyncAPPLE:@convention(c) (OpenGL.Sync, OpenGL.Bitfield, OpenGL.UInt64) -> OpenGL.Enum = _load_glClientWaitSyncAPPLE
static 
var glClipControl:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glClipControl
static 
var glClipPlane:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glClipPlane
static 
var glClipPlanef:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glClipPlanef
static 
var glClipPlanefIMG:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glClipPlanefIMG
static 
var glClipPlanefOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glClipPlanefOES
static 
var glClipPlanex:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glClipPlanex
static 
var glClipPlanexIMG:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glClipPlanexIMG
static 
var glClipPlanexOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glClipPlanexOES
static 
var glColor3b:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glColor3b
static 
var glColor3bv:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glColor3bv
static 
var glColor3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glColor3d
static 
var glColor3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glColor3dv
static 
var glColor3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glColor3f
static 
var glColor3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glColor3fVertex3fSUN
static 
var glColor3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glColor3fVertex3fvSUN
static 
var glColor3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glColor3fv
static 
var glColor3hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glColor3hNV
static 
var glColor3hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glColor3hvNV
static 
var glColor3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glColor3i
static 
var glColor3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glColor3iv
static 
var glColor3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glColor3s
static 
var glColor3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glColor3sv
static 
var glColor3ub:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glColor3ub
static 
var glColor3ubv:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glColor3ubv
static 
var glColor3ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glColor3ui
static 
var glColor3uiv:@convention(c) (UnsafePointer<OpenGL.UInt>?) -> () = _load_glColor3uiv
static 
var glColor3us:@convention(c) (OpenGL.UShort, OpenGL.UShort, OpenGL.UShort) -> () = _load_glColor3us
static 
var glColor3usv:@convention(c) (UnsafePointer<OpenGL.UShort>?) -> () = _load_glColor3usv
static 
var glColor3xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glColor3xOES
static 
var glColor3xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glColor3xvOES
static 
var glColor4b:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glColor4b
static 
var glColor4bv:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glColor4bv
static 
var glColor4d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glColor4d
static 
var glColor4dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glColor4dv
static 
var glColor4f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glColor4f
static 
var glColor4fNormal3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glColor4fNormal3fVertex3fSUN
static 
var glColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glColor4fNormal3fVertex3fvSUN
static 
var glColor4fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glColor4fv
static 
var glColor4hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glColor4hNV
static 
var glColor4hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glColor4hvNV
static 
var glColor4i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glColor4i
static 
var glColor4iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glColor4iv
static 
var glColor4s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glColor4s
static 
var glColor4sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glColor4sv
static 
var glColor4ub:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glColor4ub
static 
var glColor4ubVertex2fSUN:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.Float, OpenGL.Float) -> () = _load_glColor4ubVertex2fSUN
static 
var glColor4ubVertex2fvSUN:@convention(c) (UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glColor4ubVertex2fvSUN
static 
var glColor4ubVertex3fSUN:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glColor4ubVertex3fSUN
static 
var glColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glColor4ubVertex3fvSUN
static 
var glColor4ubv:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glColor4ubv
static 
var glColor4ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glColor4ui
static 
var glColor4uiv:@convention(c) (UnsafePointer<OpenGL.UInt>?) -> () = _load_glColor4uiv
static 
var glColor4us:@convention(c) (OpenGL.UShort, OpenGL.UShort, OpenGL.UShort, OpenGL.UShort) -> () = _load_glColor4us
static 
var glColor4usv:@convention(c) (UnsafePointer<OpenGL.UShort>?) -> () = _load_glColor4usv
static 
var glColor4x:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glColor4x
static 
var glColor4xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glColor4xOES
static 
var glColor4xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glColor4xvOES
static 
var glColorFormatNV:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glColorFormatNV
static 
var glColorFragmentOp1ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glColorFragmentOp1ATI
static 
var glColorFragmentOp2ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glColorFragmentOp2ATI
static 
var glColorFragmentOp3ATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glColorFragmentOp3ATI
static 
var glColorMask:@convention(c) (OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glColorMask
static 
var glColorMaskIndexedEXT:@convention(c) (OpenGL.UInt, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glColorMaskIndexedEXT
static 
var glColorMaski:@convention(c) (OpenGL.UInt, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glColorMaski
static 
var glColorMaskiEXT:@convention(c) (OpenGL.UInt, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glColorMaskiEXT
static 
var glColorMaskiOES:@convention(c) (OpenGL.UInt, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glColorMaskiOES
static 
var glColorMaterial:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glColorMaterial
static 
var glColorP3ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glColorP3ui
static 
var glColorP3uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glColorP3uiv
static 
var glColorP4ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glColorP4ui
static 
var glColorP4uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glColorP4uiv
static 
var glColorPointer:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glColorPointer
static 
var glColorPointerEXT:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glColorPointerEXT
static 
var glColorPointerListIBM:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glColorPointerListIBM
static 
var glColorPointervINTEL:@convention(c) (OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = _load_glColorPointervINTEL
static 
var glColorSubTable:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glColorSubTable
static 
var glColorSubTableEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glColorSubTableEXT
static 
var glColorTable:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glColorTable
static 
var glColorTableEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glColorTableEXT
static 
var glColorTableParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glColorTableParameterfv
static 
var glColorTableParameterfvSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glColorTableParameterfvSGI
static 
var glColorTableParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glColorTableParameteriv
static 
var glColorTableParameterivSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glColorTableParameterivSGI
static 
var glColorTableSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glColorTableSGI
static 
var glCombinerInputNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glCombinerInputNV
static 
var glCombinerOutputNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glCombinerOutputNV
static 
var glCombinerParameterfNV:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glCombinerParameterfNV
static 
var glCombinerParameterfvNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glCombinerParameterfvNV
static 
var glCombinerParameteriNV:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glCombinerParameteriNV
static 
var glCombinerParameterivNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glCombinerParameterivNV
static 
var glCombinerStageParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glCombinerStageParameterfvNV
static 
var glCommandListSegmentsNV:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glCommandListSegmentsNV
static 
var glCompileCommandListNV:@convention(c) (OpenGL.UInt) -> () = _load_glCompileCommandListNV
static 
var glCompileShader:@convention(c) (OpenGL.UInt) -> () = _load_glCompileShader
static 
var glCompileShaderARB:@convention(c) (OpenGL.HandleARB) -> () = _load_glCompileShaderARB
static 
var glCompileShaderIncludeARB:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?, UnsafePointer<OpenGL.Int>?) -> () = _load_glCompileShaderIncludeARB
static 
var glCompressedMultiTexImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexImage1DEXT
static 
var glCompressedMultiTexImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexImage2DEXT
static 
var glCompressedMultiTexImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexImage3DEXT
static 
var glCompressedMultiTexSubImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexSubImage1DEXT
static 
var glCompressedMultiTexSubImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexSubImage2DEXT
static 
var glCompressedMultiTexSubImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedMultiTexSubImage3DEXT
static 
var glCompressedTexImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage1D
static 
var glCompressedTexImage1DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage1DARB
static 
var glCompressedTexImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage2D
static 
var glCompressedTexImage2DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage2DARB
static 
var glCompressedTexImage3D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage3D
static 
var glCompressedTexImage3DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage3DARB
static 
var glCompressedTexImage3DOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexImage3DOES
static 
var glCompressedTexSubImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage1D
static 
var glCompressedTexSubImage1DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage1DARB
static 
var glCompressedTexSubImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage2D
static 
var glCompressedTexSubImage2DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage2DARB
static 
var glCompressedTexSubImage3D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage3D
static 
var glCompressedTexSubImage3DARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage3DARB
static 
var glCompressedTexSubImage3DOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTexSubImage3DOES
static 
var glCompressedTextureImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureImage1DEXT
static 
var glCompressedTextureImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureImage2DEXT
static 
var glCompressedTextureImage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureImage3DEXT
static 
var glCompressedTextureSubImage1D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage1D
static 
var glCompressedTextureSubImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage1DEXT
static 
var glCompressedTextureSubImage2D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage2D
static 
var glCompressedTextureSubImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage2DEXT
static 
var glCompressedTextureSubImage3D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage3D
static 
var glCompressedTextureSubImage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glCompressedTextureSubImage3DEXT
static 
var glConservativeRasterParameterfNV:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glConservativeRasterParameterfNV
static 
var glConvolutionFilter1D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glConvolutionFilter1D
static 
var glConvolutionFilter1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glConvolutionFilter1DEXT
static 
var glConvolutionFilter2D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glConvolutionFilter2D
static 
var glConvolutionFilter2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glConvolutionFilter2DEXT
static 
var glConvolutionParameterf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glConvolutionParameterf
static 
var glConvolutionParameterfEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glConvolutionParameterfEXT
static 
var glConvolutionParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glConvolutionParameterfv
static 
var glConvolutionParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glConvolutionParameterfvEXT
static 
var glConvolutionParameteri:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glConvolutionParameteri
static 
var glConvolutionParameteriEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glConvolutionParameteriEXT
static 
var glConvolutionParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glConvolutionParameteriv
static 
var glConvolutionParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glConvolutionParameterivEXT
static 
var glConvolutionParameterxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glConvolutionParameterxOES
static 
var glConvolutionParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glConvolutionParameterxvOES
static 
var glCopyBufferSubData:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glCopyBufferSubData
static 
var glCopyBufferSubDataNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glCopyBufferSubDataNV
static 
var glCopyColorSubTable:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyColorSubTable
static 
var glCopyColorSubTableEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyColorSubTableEXT
static 
var glCopyColorTable:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyColorTable
static 
var glCopyColorTableSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyColorTableSGI
static 
var glCopyConvolutionFilter1D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyConvolutionFilter1D
static 
var glCopyConvolutionFilter1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyConvolutionFilter1DEXT
static 
var glCopyConvolutionFilter2D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyConvolutionFilter2D
static 
var glCopyConvolutionFilter2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyConvolutionFilter2DEXT
static 
var glCopyImageSubData:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyImageSubData
static 
var glCopyImageSubDataEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyImageSubDataEXT
static 
var glCopyImageSubDataNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyImageSubDataNV
static 
var glCopyImageSubDataOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyImageSubDataOES
static 
var glCopyMultiTexImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyMultiTexImage1DEXT
static 
var glCopyMultiTexImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyMultiTexImage2DEXT
static 
var glCopyMultiTexSubImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyMultiTexSubImage1DEXT
static 
var glCopyMultiTexSubImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyMultiTexSubImage2DEXT
static 
var glCopyMultiTexSubImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyMultiTexSubImage3DEXT
static 
var glCopyNamedBufferSubData:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glCopyNamedBufferSubData
static 
var glCopyPathNV:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glCopyPathNV
static 
var glCopyPixels:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum) -> () = _load_glCopyPixels
static 
var glCopyTexImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTexImage1D
static 
var glCopyTexImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTexImage1DEXT
static 
var glCopyTexImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTexImage2D
static 
var glCopyTexImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTexImage2DEXT
static 
var glCopyTexSubImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyTexSubImage1D
static 
var glCopyTexSubImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyTexSubImage1DEXT
static 
var glCopyTexSubImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTexSubImage2D
static 
var glCopyTexSubImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTexSubImage2DEXT
static 
var glCopyTexSubImage3D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTexSubImage3D
static 
var glCopyTexSubImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTexSubImage3DEXT
static 
var glCopyTexSubImage3DOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTexSubImage3DOES
static 
var glCopyTextureImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTextureImage1DEXT
static 
var glCopyTextureImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glCopyTextureImage2DEXT
static 
var glCopyTextureLevelsAPPLE:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyTextureLevelsAPPLE
static 
var glCopyTextureSubImage1D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyTextureSubImage1D
static 
var glCopyTextureSubImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glCopyTextureSubImage1DEXT
static 
var glCopyTextureSubImage2D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTextureSubImage2D
static 
var glCopyTextureSubImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTextureSubImage2DEXT
static 
var glCopyTextureSubImage3D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTextureSubImage3D
static 
var glCopyTextureSubImage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glCopyTextureSubImage3DEXT
static 
var glCoverFillPathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glCoverFillPathInstancedNV
static 
var glCoverFillPathNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glCoverFillPathNV
static 
var glCoverStrokePathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glCoverStrokePathInstancedNV
static 
var glCoverStrokePathNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glCoverStrokePathNV
static 
var glCoverageMaskNV:@convention(c) (OpenGL.Bool) -> () = _load_glCoverageMaskNV
static 
var glCoverageModulationNV:@convention(c) (OpenGL.Enum) -> () = _load_glCoverageModulationNV
static 
var glCoverageModulationTableNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glCoverageModulationTableNV
static 
var glCoverageOperationNV:@convention(c) (OpenGL.Enum) -> () = _load_glCoverageOperationNV
static 
var glCreateBuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateBuffers
static 
var glCreateCommandListsNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateCommandListsNV
static 
var glCreateFramebuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateFramebuffers
static 
var glCreatePerfQueryINTEL:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreatePerfQueryINTEL
static 
var glCreateProgram:@convention(c) () -> OpenGL.UInt = _load_glCreateProgram
static 
var glCreateProgramObjectARB:@convention(c) () -> OpenGL.HandleARB = _load_glCreateProgramObjectARB
static 
var glCreateProgramPipelines:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateProgramPipelines
static 
var glCreateQueries:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateQueries
static 
var glCreateRenderbuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateRenderbuffers
static 
var glCreateSamplers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateSamplers
static 
var glCreateShader:@convention(c) (OpenGL.Enum) -> OpenGL.UInt = _load_glCreateShader
static 
var glCreateShaderObjectARB:@convention(c) (OpenGL.Enum) -> OpenGL.HandleARB = _load_glCreateShaderObjectARB
static 
var glCreateShaderProgramEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glCreateShaderProgramEXT
static 
var glCreateShaderProgramv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?) -> OpenGL.UInt = _load_glCreateShaderProgramv
static 
var glCreateShaderProgramvEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.Char>?>?) -> OpenGL.UInt = _load_glCreateShaderProgramvEXT
static 
var glCreateStatesNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateStatesNV
static 
var glCreateSyncFromCLeventARB:@convention(c) (UnsafeMutablePointer<OpaquePointer?>?, UnsafeMutablePointer<OpaquePointer?>?, OpenGL.Bitfield) -> OpenGL.Sync = _load_glCreateSyncFromCLeventARB
static 
var glCreateTextures:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateTextures
static 
var glCreateTransformFeedbacks:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateTransformFeedbacks
static 
var glCreateVertexArrays:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glCreateVertexArrays
static 
var glCullFace:@convention(c) (OpenGL.Enum) -> () = _load_glCullFace
static 
var glCullParameterdvEXT:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glCullParameterdvEXT
static 
var glCullParameterfvEXT:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glCullParameterfvEXT
static 
var glCurrentPaletteMatrixARB:@convention(c) (OpenGL.Int) -> () = _load_glCurrentPaletteMatrixARB
static 
var glCurrentPaletteMatrixOES:@convention(c) (OpenGL.UInt) -> () = _load_glCurrentPaletteMatrixOES
static 
var glDebugMessageCallback:@convention(c) (OpenGL.DebugProc, UnsafeRawPointer?) -> () = _load_glDebugMessageCallback
static 
var glDebugMessageCallbackAMD:@convention(c) (OpenGL.DebugProcAMD, UnsafeMutableRawPointer?) -> () = _load_glDebugMessageCallbackAMD
static 
var glDebugMessageCallbackARB:@convention(c) (OpenGL.DebugProcARB, UnsafeRawPointer?) -> () = _load_glDebugMessageCallbackARB
static 
var glDebugMessageCallbackKHR:@convention(c) (OpenGL.DebugProcKHR, UnsafeRawPointer?) -> () = _load_glDebugMessageCallbackKHR
static 
var glDebugMessageControl:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Bool) -> () = _load_glDebugMessageControl
static 
var glDebugMessageControlARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Bool) -> () = _load_glDebugMessageControlARB
static 
var glDebugMessageControlKHR:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Bool) -> () = _load_glDebugMessageControlKHR
static 
var glDebugMessageEnableAMD:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Bool) -> () = _load_glDebugMessageEnableAMD
static 
var glDebugMessageInsert:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glDebugMessageInsert
static 
var glDebugMessageInsertAMD:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glDebugMessageInsertAMD
static 
var glDebugMessageInsertARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glDebugMessageInsertARB
static 
var glDebugMessageInsertKHR:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glDebugMessageInsertKHR
static 
var glDeformSGIX:@convention(c) (OpenGL.Bitfield) -> () = _load_glDeformSGIX
static 
var glDeformationMap3dSGIX:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glDeformationMap3dSGIX
static 
var glDeformationMap3fSGIX:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glDeformationMap3fSGIX
static 
var glDeleteAsyncMarkersSGIX:@convention(c) (OpenGL.UInt, OpenGL.Size) -> () = _load_glDeleteAsyncMarkersSGIX
static 
var glDeleteBuffers:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteBuffers
static 
var glDeleteBuffersARB:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteBuffersARB
static 
var glDeleteCommandListsNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteCommandListsNV
static 
var glDeleteFencesAPPLE:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteFencesAPPLE
static 
var glDeleteFencesNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteFencesNV
static 
var glDeleteFragmentShaderATI:@convention(c) (OpenGL.UInt) -> () = _load_glDeleteFragmentShaderATI
static 
var glDeleteFramebuffers:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteFramebuffers
static 
var glDeleteFramebuffersEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteFramebuffersEXT
static 
var glDeleteFramebuffersOES:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteFramebuffersOES
static 
var glDeleteLists:@convention(c) (OpenGL.UInt, OpenGL.Size) -> () = _load_glDeleteLists
static 
var glDeleteNamedStringARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Char>?) -> () = _load_glDeleteNamedStringARB
static 
var glDeleteNamesAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteNamesAMD
static 
var glDeleteObjectARB:@convention(c) (OpenGL.HandleARB) -> () = _load_glDeleteObjectARB
static 
var glDeleteOcclusionQueriesNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteOcclusionQueriesNV
static 
var glDeletePathsNV:@convention(c) (OpenGL.UInt, OpenGL.Size) -> () = _load_glDeletePathsNV
static 
var glDeletePerfMonitorsAMD:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glDeletePerfMonitorsAMD
static 
var glDeletePerfQueryINTEL:@convention(c) (OpenGL.UInt) -> () = _load_glDeletePerfQueryINTEL
static 
var glDeleteProgram:@convention(c) (OpenGL.UInt) -> () = _load_glDeleteProgram
static 
var glDeleteProgramPipelines:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteProgramPipelines
static 
var glDeleteProgramPipelinesEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteProgramPipelinesEXT
static 
var glDeleteProgramsARB:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteProgramsARB
static 
var glDeleteProgramsNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteProgramsNV
static 
var glDeleteQueries:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteQueries
static 
var glDeleteQueriesARB:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteQueriesARB
static 
var glDeleteQueriesEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteQueriesEXT
static 
var glDeleteRenderbuffers:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteRenderbuffers
static 
var glDeleteRenderbuffersEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteRenderbuffersEXT
static 
var glDeleteRenderbuffersOES:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteRenderbuffersOES
static 
var glDeleteSamplers:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteSamplers
static 
var glDeleteShader:@convention(c) (OpenGL.UInt) -> () = _load_glDeleteShader
static 
var glDeleteStatesNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteStatesNV
static 
var glDeleteSync:@convention(c) (OpenGL.Sync) -> () = _load_glDeleteSync
static 
var glDeleteSyncAPPLE:@convention(c) (OpenGL.Sync) -> () = _load_glDeleteSyncAPPLE
static 
var glDeleteTextures:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteTextures
static 
var glDeleteTexturesEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteTexturesEXT
static 
var glDeleteTransformFeedbacks:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteTransformFeedbacks
static 
var glDeleteTransformFeedbacksNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteTransformFeedbacksNV
static 
var glDeleteVertexArrays:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteVertexArrays
static 
var glDeleteVertexArraysAPPLE:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteVertexArraysAPPLE
static 
var glDeleteVertexArraysOES:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glDeleteVertexArraysOES
static 
var glDeleteVertexShaderEXT:@convention(c) (OpenGL.UInt) -> () = _load_glDeleteVertexShaderEXT
static 
var glDepthBoundsEXT:@convention(c) (OpenGL.ClampDouble, OpenGL.ClampDouble) -> () = _load_glDepthBoundsEXT
static 
var glDepthBoundsdNV:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glDepthBoundsdNV
static 
var glDepthFunc:@convention(c) (OpenGL.Enum) -> () = _load_glDepthFunc
static 
var glDepthMask:@convention(c) (OpenGL.Bool) -> () = _load_glDepthMask
static 
var glDepthRange:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glDepthRange
static 
var glDepthRangeArrayfvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glDepthRangeArrayfvNV
static 
var glDepthRangeArrayv:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glDepthRangeArrayv
static 
var glDepthRangeIndexed:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glDepthRangeIndexed
static 
var glDepthRangeIndexedfNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> () = _load_glDepthRangeIndexedfNV
static 
var glDepthRangedNV:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glDepthRangedNV
static 
var glDepthRangef:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glDepthRangef
static 
var glDepthRangefOES:@convention(c) (OpenGL.ClampFloat, OpenGL.ClampFloat) -> () = _load_glDepthRangefOES
static 
var glDepthRangex:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glDepthRangex
static 
var glDepthRangexOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glDepthRangexOES
static 
var glDetachObjectARB:@convention(c) (OpenGL.HandleARB, OpenGL.HandleARB) -> () = _load_glDetachObjectARB
static 
var glDetachShader:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glDetachShader
static 
var glDetailTexFuncSGIS:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glDetailTexFuncSGIS
static 
var glDisable:@convention(c) (OpenGL.Enum) -> () = _load_glDisable
static 
var glDisableClientState:@convention(c) (OpenGL.Enum) -> () = _load_glDisableClientState
static 
var glDisableClientStateIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableClientStateIndexedEXT
static 
var glDisableClientStateiEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableClientStateiEXT
static 
var glDisableDriverControlQCOM:@convention(c) (OpenGL.UInt) -> () = _load_glDisableDriverControlQCOM
static 
var glDisableIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableIndexedEXT
static 
var glDisableVariantClientStateEXT:@convention(c) (OpenGL.UInt) -> () = _load_glDisableVariantClientStateEXT
static 
var glDisableVertexArrayAttrib:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glDisableVertexArrayAttrib
static 
var glDisableVertexArrayAttribEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glDisableVertexArrayAttribEXT
static 
var glDisableVertexArrayEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glDisableVertexArrayEXT
static 
var glDisableVertexAttribAPPLE:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glDisableVertexAttribAPPLE
static 
var glDisableVertexAttribArray:@convention(c) (OpenGL.UInt) -> () = _load_glDisableVertexAttribArray
static 
var glDisableVertexAttribArrayARB:@convention(c) (OpenGL.UInt) -> () = _load_glDisableVertexAttribArrayARB
static 
var glDisablei:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisablei
static 
var glDisableiEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableiEXT
static 
var glDisableiNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableiNV
static 
var glDisableiOES:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDisableiOES
static 
var glDiscardFramebufferEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDiscardFramebufferEXT
static 
var glDispatchCompute:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glDispatchCompute
static 
var glDispatchComputeGroupSizeARB:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glDispatchComputeGroupSizeARB
static 
var glDispatchComputeIndirect:@convention(c) (OpenGL.IntPointer) -> () = _load_glDispatchComputeIndirect
static 
var glDrawArrays:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size) -> () = _load_glDrawArrays
static 
var glDrawArraysEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size) -> () = _load_glDrawArraysEXT
static 
var glDrawArraysIndirect:@convention(c) (OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawArraysIndirect
static 
var glDrawArraysInstanced:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawArraysInstanced
static 
var glDrawArraysInstancedANGLE:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawArraysInstancedANGLE
static 
var glDrawArraysInstancedARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawArraysInstancedARB
static 
var glDrawArraysInstancedBaseInstance:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.UInt) -> () = _load_glDrawArraysInstancedBaseInstance
static 
var glDrawArraysInstancedBaseInstanceEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.UInt) -> () = _load_glDrawArraysInstancedBaseInstanceEXT
static 
var glDrawArraysInstancedEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawArraysInstancedEXT
static 
var glDrawArraysInstancedNV:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawArraysInstancedNV
static 
var glDrawBuffer:@convention(c) (OpenGL.Enum) -> () = _load_glDrawBuffer
static 
var glDrawBuffers:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDrawBuffers
static 
var glDrawBuffersARB:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDrawBuffersARB
static 
var glDrawBuffersATI:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDrawBuffersATI
static 
var glDrawBuffersEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDrawBuffersEXT
static 
var glDrawBuffersIndexedEXT:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Enum>?, UnsafePointer<OpenGL.Int>?) -> () = _load_glDrawBuffersIndexedEXT
static 
var glDrawBuffersNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glDrawBuffersNV
static 
var glDrawCommandsAddressNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt64>?, UnsafePointer<OpenGL.Size>?, OpenGL.UInt) -> () = _load_glDrawCommandsAddressNV
static 
var glDrawCommandsNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.IntPointer>?, UnsafePointer<OpenGL.Size>?, OpenGL.UInt) -> () = _load_glDrawCommandsNV
static 
var glDrawCommandsStatesAddressNV:@convention(c) (UnsafePointer<OpenGL.UInt64>?, UnsafePointer<OpenGL.Size>?, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.UInt>?, OpenGL.UInt) -> () = _load_glDrawCommandsStatesAddressNV
static 
var glDrawCommandsStatesNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.IntPointer>?, UnsafePointer<OpenGL.Size>?, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.UInt>?, OpenGL.UInt) -> () = _load_glDrawCommandsStatesNV
static 
var glDrawElementArrayAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size) -> () = _load_glDrawElementArrayAPPLE
static 
var glDrawElementArrayATI:@convention(c) (OpenGL.Enum, OpenGL.Size) -> () = _load_glDrawElementArrayATI
static 
var glDrawElements:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawElements
static 
var glDrawElementsBaseVertex:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawElementsBaseVertex
static 
var glDrawElementsBaseVertexEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawElementsBaseVertexEXT
static 
var glDrawElementsBaseVertexOES:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawElementsBaseVertexOES
static 
var glDrawElementsIndirect:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawElementsIndirect
static 
var glDrawElementsInstanced:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glDrawElementsInstanced
static 
var glDrawElementsInstancedANGLE:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glDrawElementsInstancedANGLE
static 
var glDrawElementsInstancedARB:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glDrawElementsInstancedARB
static 
var glDrawElementsInstancedBaseInstance:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.UInt) -> () = _load_glDrawElementsInstancedBaseInstance
static 
var glDrawElementsInstancedBaseInstanceEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.UInt) -> () = _load_glDrawElementsInstancedBaseInstanceEXT
static 
var glDrawElementsInstancedBaseVertex:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Int) -> () = _load_glDrawElementsInstancedBaseVertex
static 
var glDrawElementsInstancedBaseVertexBaseInstance:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Int, OpenGL.UInt) -> () = _load_glDrawElementsInstancedBaseVertexBaseInstance
static 
var glDrawElementsInstancedBaseVertexBaseInstanceEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Int, OpenGL.UInt) -> () = _load_glDrawElementsInstancedBaseVertexBaseInstanceEXT
static 
var glDrawElementsInstancedBaseVertexEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Int) -> () = _load_glDrawElementsInstancedBaseVertexEXT
static 
var glDrawElementsInstancedBaseVertexOES:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Int) -> () = _load_glDrawElementsInstancedBaseVertexOES
static 
var glDrawElementsInstancedEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glDrawElementsInstancedEXT
static 
var glDrawElementsInstancedNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glDrawElementsInstancedNV
static 
var glDrawMeshArraysSUN:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glDrawMeshArraysSUN
static 
var glDrawPixels:@convention(c) (OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawPixels
static 
var glDrawRangeElementArrayAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Size) -> () = _load_glDrawRangeElementArrayAPPLE
static 
var glDrawRangeElementArrayATI:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size) -> () = _load_glDrawRangeElementArrayATI
static 
var glDrawRangeElements:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawRangeElements
static 
var glDrawRangeElementsBaseVertex:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawRangeElementsBaseVertex
static 
var glDrawRangeElementsBaseVertexEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawRangeElementsBaseVertexEXT
static 
var glDrawRangeElementsBaseVertexOES:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glDrawRangeElementsBaseVertexOES
static 
var glDrawRangeElementsEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glDrawRangeElementsEXT
static 
var glDrawTexfOES:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glDrawTexfOES
static 
var glDrawTexfvOES:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glDrawTexfvOES
static 
var glDrawTexiOES:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glDrawTexiOES
static 
var glDrawTexivOES:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glDrawTexivOES
static 
var glDrawTexsOES:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glDrawTexsOES
static 
var glDrawTexsvOES:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glDrawTexsvOES
static 
var glDrawTextureNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glDrawTextureNV
static 
var glDrawTexxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glDrawTexxOES
static 
var glDrawTexxvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glDrawTexxvOES
static 
var glDrawTransformFeedback:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDrawTransformFeedback
static 
var glDrawTransformFeedbackInstanced:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size) -> () = _load_glDrawTransformFeedbackInstanced
static 
var glDrawTransformFeedbackNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glDrawTransformFeedbackNV
static 
var glDrawTransformFeedbackStream:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glDrawTransformFeedbackStream
static 
var glDrawTransformFeedbackStreamInstanced:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size) -> () = _load_glDrawTransformFeedbackStreamInstanced
static 
var glEGLImageTargetRenderbufferStorageOES:@convention(c) (OpenGL.Enum, OpenGL.EGLImageOES) -> () = _load_glEGLImageTargetRenderbufferStorageOES
static 
var glEGLImageTargetTexture2DOES:@convention(c) (OpenGL.Enum, OpenGL.EGLImageOES) -> () = _load_glEGLImageTargetTexture2DOES
static 
var glEdgeFlag:@convention(c) (OpenGL.Bool) -> () = _load_glEdgeFlag
static 
var glEdgeFlagFormatNV:@convention(c) (OpenGL.Size) -> () = _load_glEdgeFlagFormatNV
static 
var glEdgeFlagPointer:@convention(c) (OpenGL.Size, UnsafeRawPointer?) -> () = _load_glEdgeFlagPointer
static 
var glEdgeFlagPointerEXT:@convention(c) (OpenGL.Size, OpenGL.Size, UnsafePointer<OpenGL.Bool>?) -> () = _load_glEdgeFlagPointerEXT
static 
var glEdgeFlagPointerListIBM:@convention(c) (OpenGL.Int, UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.Bool>?>?, OpenGL.Int) -> () = _load_glEdgeFlagPointerListIBM
static 
var glEdgeFlagv:@convention(c) (UnsafePointer<OpenGL.Bool>?) -> () = _load_glEdgeFlagv
static 
var glElementPointerAPPLE:@convention(c) (OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glElementPointerAPPLE
static 
var glElementPointerATI:@convention(c) (OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glElementPointerATI
static 
var glEnable:@convention(c) (OpenGL.Enum) -> () = _load_glEnable
static 
var glEnableClientState:@convention(c) (OpenGL.Enum) -> () = _load_glEnableClientState
static 
var glEnableClientStateIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableClientStateIndexedEXT
static 
var glEnableClientStateiEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableClientStateiEXT
static 
var glEnableDriverControlQCOM:@convention(c) (OpenGL.UInt) -> () = _load_glEnableDriverControlQCOM
static 
var glEnableIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableIndexedEXT
static 
var glEnableVariantClientStateEXT:@convention(c) (OpenGL.UInt) -> () = _load_glEnableVariantClientStateEXT
static 
var glEnableVertexArrayAttrib:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glEnableVertexArrayAttrib
static 
var glEnableVertexArrayAttribEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glEnableVertexArrayAttribEXT
static 
var glEnableVertexArrayEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glEnableVertexArrayEXT
static 
var glEnableVertexAttribAPPLE:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glEnableVertexAttribAPPLE
static 
var glEnableVertexAttribArray:@convention(c) (OpenGL.UInt) -> () = _load_glEnableVertexAttribArray
static 
var glEnableVertexAttribArrayARB:@convention(c) (OpenGL.UInt) -> () = _load_glEnableVertexAttribArrayARB
static 
var glEnablei:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnablei
static 
var glEnableiEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableiEXT
static 
var glEnableiNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableiNV
static 
var glEnableiOES:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEnableiOES
static 
var glEnd:@convention(c) () -> () = _load_glEnd
static 
var glEndConditionalRender:@convention(c) () -> () = _load_glEndConditionalRender
static 
var glEndConditionalRenderNV:@convention(c) () -> () = _load_glEndConditionalRenderNV
static 
var glEndConditionalRenderNVX:@convention(c) () -> () = _load_glEndConditionalRenderNVX
static 
var glEndFragmentShaderATI:@convention(c) () -> () = _load_glEndFragmentShaderATI
static 
var glEndList:@convention(c) () -> () = _load_glEndList
static 
var glEndOcclusionQueryNV:@convention(c) () -> () = _load_glEndOcclusionQueryNV
static 
var glEndPerfMonitorAMD:@convention(c) (OpenGL.UInt) -> () = _load_glEndPerfMonitorAMD
static 
var glEndPerfQueryINTEL:@convention(c) (OpenGL.UInt) -> () = _load_glEndPerfQueryINTEL
static 
var glEndQuery:@convention(c) (OpenGL.Enum) -> () = _load_glEndQuery
static 
var glEndQueryARB:@convention(c) (OpenGL.Enum) -> () = _load_glEndQueryARB
static 
var glEndQueryEXT:@convention(c) (OpenGL.Enum) -> () = _load_glEndQueryEXT
static 
var glEndQueryIndexed:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glEndQueryIndexed
static 
var glEndTilingQCOM:@convention(c) (OpenGL.Bitfield) -> () = _load_glEndTilingQCOM
static 
var glEndTransformFeedback:@convention(c) () -> () = _load_glEndTransformFeedback
static 
var glEndTransformFeedbackEXT:@convention(c) () -> () = _load_glEndTransformFeedbackEXT
static 
var glEndTransformFeedbackNV:@convention(c) () -> () = _load_glEndTransformFeedbackNV
static 
var glEndVertexShaderEXT:@convention(c) () -> () = _load_glEndVertexShaderEXT
static 
var glEndVideoCaptureNV:@convention(c) (OpenGL.UInt) -> () = _load_glEndVideoCaptureNV
static 
var glEvalCoord1d:@convention(c) (OpenGL.Double) -> () = _load_glEvalCoord1d
static 
var glEvalCoord1dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glEvalCoord1dv
static 
var glEvalCoord1f:@convention(c) (OpenGL.Float) -> () = _load_glEvalCoord1f
static 
var glEvalCoord1fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glEvalCoord1fv
static 
var glEvalCoord1xOES:@convention(c) (OpenGL.Fixed) -> () = _load_glEvalCoord1xOES
static 
var glEvalCoord1xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glEvalCoord1xvOES
static 
var glEvalCoord2d:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glEvalCoord2d
static 
var glEvalCoord2dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glEvalCoord2dv
static 
var glEvalCoord2f:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glEvalCoord2f
static 
var glEvalCoord2fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glEvalCoord2fv
static 
var glEvalCoord2xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glEvalCoord2xOES
static 
var glEvalCoord2xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glEvalCoord2xvOES
static 
var glEvalMapsNV:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glEvalMapsNV
static 
var glEvalMesh1:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int) -> () = _load_glEvalMesh1
static 
var glEvalMesh2:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glEvalMesh2
static 
var glEvalPoint1:@convention(c) (OpenGL.Int) -> () = _load_glEvalPoint1
static 
var glEvalPoint2:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glEvalPoint2
static 
var glEvaluateDepthValuesARB:@convention(c) () -> () = _load_glEvaluateDepthValuesARB
static 
var glExecuteProgramNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glExecuteProgramNV
static 
var glExtGetBufferPointervQCOM:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glExtGetBufferPointervQCOM
static 
var glExtGetBuffersQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetBuffersQCOM
static 
var glExtGetFramebuffersQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetFramebuffersQCOM
static 
var glExtGetProgramBinarySourceQCOM:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Char>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetProgramBinarySourceQCOM
static 
var glExtGetProgramsQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetProgramsQCOM
static 
var glExtGetRenderbuffersQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetRenderbuffersQCOM
static 
var glExtGetShadersQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetShadersQCOM
static 
var glExtGetTexLevelParameterivQCOM:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetTexLevelParameterivQCOM
static 
var glExtGetTexSubImageQCOM:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glExtGetTexSubImageQCOM
static 
var glExtGetTexturesQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glExtGetTexturesQCOM
static 
var glExtIsProgramBinaryQCOM:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glExtIsProgramBinaryQCOM
static 
var glExtTexObjectStateOverrideiQCOM:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glExtTexObjectStateOverrideiQCOM
static 
var glExtractComponentEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glExtractComponentEXT
static 
var glFeedbackBuffer:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glFeedbackBuffer
static 
var glFeedbackBufferxOES:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glFeedbackBufferxOES
static 
var glFenceSync:@convention(c) (OpenGL.Enum, OpenGL.Bitfield) -> OpenGL.Sync = _load_glFenceSync
static 
var glFenceSyncAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Bitfield) -> OpenGL.Sync = _load_glFenceSyncAPPLE
static 
var glFinalCombinerInputNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glFinalCombinerInputNV
static 
var glFinish:@convention(c) () -> () = _load_glFinish
static 
var glFinishAsyncSGIX:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?) -> OpenGL.Int = _load_glFinishAsyncSGIX
static 
var glFinishFenceAPPLE:@convention(c) (OpenGL.UInt) -> () = _load_glFinishFenceAPPLE
static 
var glFinishFenceNV:@convention(c) (OpenGL.UInt) -> () = _load_glFinishFenceNV
static 
var glFinishObjectAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glFinishObjectAPPLE
static 
var glFinishTextureSUNX:@convention(c) () -> () = _load_glFinishTextureSUNX
static 
var glFlush:@convention(c) () -> () = _load_glFlush
static 
var glFlushMappedBufferRange:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glFlushMappedBufferRange
static 
var glFlushMappedBufferRangeAPPLE:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glFlushMappedBufferRangeAPPLE
static 
var glFlushMappedBufferRangeEXT:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glFlushMappedBufferRangeEXT
static 
var glFlushMappedNamedBufferRange:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glFlushMappedNamedBufferRange
static 
var glFlushMappedNamedBufferRangeEXT:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glFlushMappedNamedBufferRangeEXT
static 
var glFlushPixelDataRangeNV:@convention(c) (OpenGL.Enum) -> () = _load_glFlushPixelDataRangeNV
static 
var glFlushRasterSGIX:@convention(c) () -> () = _load_glFlushRasterSGIX
static 
var glFlushStaticDataIBM:@convention(c) (OpenGL.Enum) -> () = _load_glFlushStaticDataIBM
static 
var glFlushVertexArrayRangeAPPLE:@convention(c) (OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glFlushVertexArrayRangeAPPLE
static 
var glFlushVertexArrayRangeNV:@convention(c) () -> () = _load_glFlushVertexArrayRangeNV
static 
var glFogCoordFormatNV:@convention(c) (OpenGL.Enum, OpenGL.Size) -> () = _load_glFogCoordFormatNV
static 
var glFogCoordPointer:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glFogCoordPointer
static 
var glFogCoordPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glFogCoordPointerEXT
static 
var glFogCoordPointerListIBM:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glFogCoordPointerListIBM
static 
var glFogCoordd:@convention(c) (OpenGL.Double) -> () = _load_glFogCoordd
static 
var glFogCoorddEXT:@convention(c) (OpenGL.Double) -> () = _load_glFogCoorddEXT
static 
var glFogCoorddv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glFogCoorddv
static 
var glFogCoorddvEXT:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glFogCoorddvEXT
static 
var glFogCoordf:@convention(c) (OpenGL.Float) -> () = _load_glFogCoordf
static 
var glFogCoordfEXT:@convention(c) (OpenGL.Float) -> () = _load_glFogCoordfEXT
static 
var glFogCoordfv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glFogCoordfv
static 
var glFogCoordfvEXT:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glFogCoordfvEXT
static 
var glFogCoordhNV:@convention(c) (OpenGL.HalfNV) -> () = _load_glFogCoordhNV
static 
var glFogCoordhvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glFogCoordhvNV
static 
var glFogFuncSGIS:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glFogFuncSGIS
static 
var glFogf:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glFogf
static 
var glFogfv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glFogfv
static 
var glFogi:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glFogi
static 
var glFogiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glFogiv
static 
var glFogx:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glFogx
static 
var glFogxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glFogxOES
static 
var glFogxv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glFogxv
static 
var glFogxvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glFogxvOES
static 
var glFragmentColorMaterialSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glFragmentColorMaterialSGIX
static 
var glFragmentCoverageColorNV:@convention(c) (OpenGL.UInt) -> () = _load_glFragmentCoverageColorNV
static 
var glFragmentLightModelfSGIX:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glFragmentLightModelfSGIX
static 
var glFragmentLightModelfvSGIX:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glFragmentLightModelfvSGIX
static 
var glFragmentLightModeliSGIX:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glFragmentLightModeliSGIX
static 
var glFragmentLightModelivSGIX:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glFragmentLightModelivSGIX
static 
var glFragmentLightfSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glFragmentLightfSGIX
static 
var glFragmentLightfvSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glFragmentLightfvSGIX
static 
var glFragmentLightiSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glFragmentLightiSGIX
static 
var glFragmentLightivSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glFragmentLightivSGIX
static 
var glFragmentMaterialfSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glFragmentMaterialfSGIX
static 
var glFragmentMaterialfvSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glFragmentMaterialfvSGIX
static 
var glFragmentMaterialiSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glFragmentMaterialiSGIX
static 
var glFragmentMaterialivSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glFragmentMaterialivSGIX
static 
var glFrameTerminatorGREMEDY:@convention(c) () -> () = _load_glFrameTerminatorGREMEDY
static 
var glFrameZoomSGIX:@convention(c) (OpenGL.Int) -> () = _load_glFrameZoomSGIX
static 
var glFramebufferDrawBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glFramebufferDrawBufferEXT
static 
var glFramebufferDrawBuffersEXT:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glFramebufferDrawBuffersEXT
static 
var glFramebufferParameteri:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glFramebufferParameteri
static 
var glFramebufferReadBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glFramebufferReadBufferEXT
static 
var glFramebufferRenderbuffer:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glFramebufferRenderbuffer
static 
var glFramebufferRenderbufferEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glFramebufferRenderbufferEXT
static 
var glFramebufferRenderbufferOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glFramebufferRenderbufferOES
static 
var glFramebufferSampleLocationsfvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glFramebufferSampleLocationsfvARB
static 
var glFramebufferSampleLocationsfvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glFramebufferSampleLocationsfvNV
static 
var glFramebufferTexture:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture
static 
var glFramebufferTexture1D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture1D
static 
var glFramebufferTexture1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture1DEXT
static 
var glFramebufferTexture2D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture2D
static 
var glFramebufferTexture2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture2DEXT
static 
var glFramebufferTexture2DMultisampleEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Size) -> () = _load_glFramebufferTexture2DMultisampleEXT
static 
var glFramebufferTexture2DMultisampleIMG:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Size) -> () = _load_glFramebufferTexture2DMultisampleIMG
static 
var glFramebufferTexture2DOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTexture2DOES
static 
var glFramebufferTexture3D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTexture3D
static 
var glFramebufferTexture3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTexture3DEXT
static 
var glFramebufferTexture3DOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTexture3DOES
static 
var glFramebufferTextureARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTextureARB
static 
var glFramebufferTextureEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTextureEXT
static 
var glFramebufferTextureFaceARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Enum) -> () = _load_glFramebufferTextureFaceARB
static 
var glFramebufferTextureFaceEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Enum) -> () = _load_glFramebufferTextureFaceEXT
static 
var glFramebufferTextureLayer:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTextureLayer
static 
var glFramebufferTextureLayerARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTextureLayerARB
static 
var glFramebufferTextureLayerEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glFramebufferTextureLayerEXT
static 
var glFramebufferTextureMultisampleMultiviewOVR:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Int, OpenGL.Size) -> () = _load_glFramebufferTextureMultisampleMultiviewOVR
static 
var glFramebufferTextureMultiviewOVR:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Size) -> () = _load_glFramebufferTextureMultiviewOVR
static 
var glFramebufferTextureOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glFramebufferTextureOES
static 
var glFreeObjectBufferATI:@convention(c) (OpenGL.UInt) -> () = _load_glFreeObjectBufferATI
static 
var glFrontFace:@convention(c) (OpenGL.Enum) -> () = _load_glFrontFace
static 
var glFrustum:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glFrustum
static 
var glFrustumf:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glFrustumf
static 
var glFrustumfOES:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glFrustumfOES
static 
var glFrustumx:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glFrustumx
static 
var glFrustumxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glFrustumxOES
static 
var glGenAsyncMarkersSGIX:@convention(c) (OpenGL.Size) -> OpenGL.UInt = _load_glGenAsyncMarkersSGIX
static 
var glGenBuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenBuffers
static 
var glGenBuffersARB:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenBuffersARB
static 
var glGenFencesAPPLE:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenFencesAPPLE
static 
var glGenFencesNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenFencesNV
static 
var glGenFragmentShadersATI:@convention(c) (OpenGL.UInt) -> OpenGL.UInt = _load_glGenFragmentShadersATI
static 
var glGenFramebuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenFramebuffers
static 
var glGenFramebuffersEXT:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenFramebuffersEXT
static 
var glGenFramebuffersOES:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenFramebuffersOES
static 
var glGenLists:@convention(c) (OpenGL.Size) -> OpenGL.UInt = _load_glGenLists
static 
var glGenNamesAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenNamesAMD
static 
var glGenOcclusionQueriesNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenOcclusionQueriesNV
static 
var glGenPathsNV:@convention(c) (OpenGL.Size) -> OpenGL.UInt = _load_glGenPathsNV
static 
var glGenPerfMonitorsAMD:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenPerfMonitorsAMD
static 
var glGenProgramPipelines:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenProgramPipelines
static 
var glGenProgramPipelinesEXT:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenProgramPipelinesEXT
static 
var glGenProgramsARB:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenProgramsARB
static 
var glGenProgramsNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenProgramsNV
static 
var glGenQueries:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenQueries
static 
var glGenQueriesARB:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenQueriesARB
static 
var glGenQueriesEXT:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenQueriesEXT
static 
var glGenRenderbuffers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenRenderbuffers
static 
var glGenRenderbuffersEXT:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenRenderbuffersEXT
static 
var glGenRenderbuffersOES:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenRenderbuffersOES
static 
var glGenSamplers:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenSamplers
static 
var glGenSymbolsEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> OpenGL.UInt = _load_glGenSymbolsEXT
static 
var glGenTextures:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenTextures
static 
var glGenTexturesEXT:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenTexturesEXT
static 
var glGenTransformFeedbacks:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenTransformFeedbacks
static 
var glGenTransformFeedbacksNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenTransformFeedbacksNV
static 
var glGenVertexArrays:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenVertexArrays
static 
var glGenVertexArraysAPPLE:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenVertexArraysAPPLE
static 
var glGenVertexArraysOES:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGenVertexArraysOES
static 
var glGenVertexShadersEXT:@convention(c) (OpenGL.UInt) -> OpenGL.UInt = _load_glGenVertexShadersEXT
static 
var glGenerateMipmap:@convention(c) (OpenGL.Enum) -> () = _load_glGenerateMipmap
static 
var glGenerateMipmapEXT:@convention(c) (OpenGL.Enum) -> () = _load_glGenerateMipmapEXT
static 
var glGenerateMipmapOES:@convention(c) (OpenGL.Enum) -> () = _load_glGenerateMipmapOES
static 
var glGenerateMultiTexMipmapEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glGenerateMultiTexMipmapEXT
static 
var glGenerateTextureMipmap:@convention(c) (OpenGL.UInt) -> () = _load_glGenerateTextureMipmap
static 
var glGenerateTextureMipmapEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glGenerateTextureMipmapEXT
static 
var glGetActiveAtomicCounterBufferiv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetActiveAtomicCounterBufferiv
static 
var glGetActiveAttrib:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveAttrib
static 
var glGetActiveAttribARB:@convention(c) (OpenGL.HandleARB, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.CharARB>?) -> () = _load_glGetActiveAttribARB
static 
var glGetActiveSubroutineName:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveSubroutineName
static 
var glGetActiveSubroutineUniformName:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveSubroutineUniformName
static 
var glGetActiveSubroutineUniformiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetActiveSubroutineUniformiv
static 
var glGetActiveUniform:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveUniform
static 
var glGetActiveUniformARB:@convention(c) (OpenGL.HandleARB, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.CharARB>?) -> () = _load_glGetActiveUniformARB
static 
var glGetActiveUniformBlockName:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveUniformBlockName
static 
var glGetActiveUniformBlockiv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetActiveUniformBlockiv
static 
var glGetActiveUniformName:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveUniformName
static 
var glGetActiveUniformsiv:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetActiveUniformsiv
static 
var glGetActiveVaryingNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetActiveVaryingNV
static 
var glGetArrayObjectfvATI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetArrayObjectfvATI
static 
var glGetArrayObjectivATI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetArrayObjectivATI
static 
var glGetAttachedObjectsARB:@convention(c) (OpenGL.HandleARB, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.HandleARB>?) -> () = _load_glGetAttachedObjectsARB
static 
var glGetAttachedShaders:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetAttachedShaders
static 
var glGetAttribLocation:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetAttribLocation
static 
var glGetAttribLocationARB:@convention(c) (OpenGL.HandleARB, UnsafePointer<OpenGL.CharARB>?) -> OpenGL.Int = _load_glGetAttribLocationARB
static 
var glGetBooleanIndexedvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetBooleanIndexedvEXT
static 
var glGetBooleani_v:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetBooleani_v
static 
var glGetBooleanv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetBooleanv
static 
var glGetBufferParameteri64v:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetBufferParameteri64v
static 
var glGetBufferParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetBufferParameteriv
static 
var glGetBufferParameterivARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetBufferParameterivARB
static 
var glGetBufferParameterui64vNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetBufferParameterui64vNV
static 
var glGetBufferPointerv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetBufferPointerv
static 
var glGetBufferPointervARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetBufferPointervARB
static 
var glGetBufferPointervOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetBufferPointervOES
static 
var glGetBufferSubData:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeMutableRawPointer?) -> () = _load_glGetBufferSubData
static 
var glGetBufferSubDataARB:@convention(c) (OpenGL.Enum, OpenGL.IntPointerARB, OpenGL.SizePointerARB, UnsafeMutableRawPointer?) -> () = _load_glGetBufferSubDataARB
static 
var glGetClipPlane:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetClipPlane
static 
var glGetClipPlanef:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetClipPlanef
static 
var glGetClipPlanefOES:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetClipPlanefOES
static 
var glGetClipPlanex:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetClipPlanex
static 
var glGetClipPlanexOES:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetClipPlanexOES
static 
var glGetColorTable:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetColorTable
static 
var glGetColorTableEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetColorTableEXT
static 
var glGetColorTableParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetColorTableParameterfv
static 
var glGetColorTableParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetColorTableParameterfvEXT
static 
var glGetColorTableParameterfvSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetColorTableParameterfvSGI
static 
var glGetColorTableParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetColorTableParameteriv
static 
var glGetColorTableParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetColorTableParameterivEXT
static 
var glGetColorTableParameterivSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetColorTableParameterivSGI
static 
var glGetColorTableSGI:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetColorTableSGI
static 
var glGetCombinerInputParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetCombinerInputParameterfvNV
static 
var glGetCombinerInputParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetCombinerInputParameterivNV
static 
var glGetCombinerOutputParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetCombinerOutputParameterfvNV
static 
var glGetCombinerOutputParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetCombinerOutputParameterivNV
static 
var glGetCombinerStageParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetCombinerStageParameterfvNV
static 
var glGetCommandHeaderNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.UInt = _load_glGetCommandHeaderNV
static 
var glGetCompressedMultiTexImageEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedMultiTexImageEXT
static 
var glGetCompressedTexImage:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedTexImage
static 
var glGetCompressedTexImageARB:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedTexImageARB
static 
var glGetCompressedTextureImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedTextureImage
static 
var glGetCompressedTextureImageEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedTextureImageEXT
static 
var glGetCompressedTextureSubImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetCompressedTextureSubImage
static 
var glGetConvolutionFilter:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetConvolutionFilter
static 
var glGetConvolutionFilterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetConvolutionFilterEXT
static 
var glGetConvolutionParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetConvolutionParameterfv
static 
var glGetConvolutionParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetConvolutionParameterfvEXT
static 
var glGetConvolutionParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetConvolutionParameteriv
static 
var glGetConvolutionParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetConvolutionParameterivEXT
static 
var glGetConvolutionParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetConvolutionParameterxvOES
static 
var glGetCoverageModulationTableNV:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetCoverageModulationTableNV
static 
var glGetDebugMessageLog:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetDebugMessageLog
static 
var glGetDebugMessageLogAMD:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetDebugMessageLogAMD
static 
var glGetDebugMessageLogARB:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetDebugMessageLogARB
static 
var glGetDebugMessageLogKHR:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetDebugMessageLogKHR
static 
var glGetDetailTexFuncSGIS:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetDetailTexFuncSGIS
static 
var glGetDoubleIndexedvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetDoubleIndexedvEXT
static 
var glGetDoublei_v:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetDoublei_v
static 
var glGetDoublei_vEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetDoublei_vEXT
static 
var glGetDoublev:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetDoublev
static 
var glGetDriverControlStringQCOM:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetDriverControlStringQCOM
static 
var glGetDriverControlsQCOM:@convention(c) (UnsafeMutablePointer<OpenGL.Int>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetDriverControlsQCOM
static 
var glGetError:@convention(c) () -> OpenGL.Enum = _load_glGetError
static 
var glGetFenceivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFenceivNV
static 
var glGetFinalCombinerInputParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFinalCombinerInputParameterfvNV
static 
var glGetFinalCombinerInputParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFinalCombinerInputParameterivNV
static 
var glGetFirstPerfQueryIdINTEL:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetFirstPerfQueryIdINTEL
static 
var glGetFixedv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetFixedv
static 
var glGetFixedvOES:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetFixedvOES
static 
var glGetFloatIndexedvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFloatIndexedvEXT
static 
var glGetFloati_v:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFloati_v
static 
var glGetFloati_vEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFloati_vEXT
static 
var glGetFloati_vNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFloati_vNV
static 
var glGetFloatv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFloatv
static 
var glGetFogFuncSGIS:@convention(c) (UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFogFuncSGIS
static 
var glGetFragDataIndex:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetFragDataIndex
static 
var glGetFragDataIndexEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetFragDataIndexEXT
static 
var glGetFragDataLocation:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetFragDataLocation
static 
var glGetFragDataLocationEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetFragDataLocationEXT
static 
var glGetFragmentLightfvSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFragmentLightfvSGIX
static 
var glGetFragmentLightivSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFragmentLightivSGIX
static 
var glGetFragmentMaterialfvSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetFragmentMaterialfvSGIX
static 
var glGetFragmentMaterialivSGIX:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFragmentMaterialivSGIX
static 
var glGetFramebufferAttachmentParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFramebufferAttachmentParameteriv
static 
var glGetFramebufferAttachmentParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFramebufferAttachmentParameterivEXT
static 
var glGetFramebufferAttachmentParameterivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFramebufferAttachmentParameterivOES
static 
var glGetFramebufferParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFramebufferParameteriv
static 
var glGetFramebufferParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetFramebufferParameterivEXT
static 
var glGetGraphicsResetStatus:@convention(c) () -> OpenGL.Enum = _load_glGetGraphicsResetStatus
static 
var glGetGraphicsResetStatusARB:@convention(c) () -> OpenGL.Enum = _load_glGetGraphicsResetStatusARB
static 
var glGetGraphicsResetStatusEXT:@convention(c) () -> OpenGL.Enum = _load_glGetGraphicsResetStatusEXT
static 
var glGetGraphicsResetStatusKHR:@convention(c) () -> OpenGL.Enum = _load_glGetGraphicsResetStatusKHR
static 
var glGetHandleARB:@convention(c) (OpenGL.Enum) -> OpenGL.HandleARB = _load_glGetHandleARB
static 
var glGetHistogram:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetHistogram
static 
var glGetHistogramEXT:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetHistogramEXT
static 
var glGetHistogramParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetHistogramParameterfv
static 
var glGetHistogramParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetHistogramParameterfvEXT
static 
var glGetHistogramParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetHistogramParameteriv
static 
var glGetHistogramParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetHistogramParameterivEXT
static 
var glGetHistogramParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetHistogramParameterxvOES
static 
var glGetImageHandleARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Bool, OpenGL.Int, OpenGL.Enum) -> OpenGL.UInt64 = _load_glGetImageHandleARB
static 
var glGetImageHandleNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Bool, OpenGL.Int, OpenGL.Enum) -> OpenGL.UInt64 = _load_glGetImageHandleNV
static 
var glGetImageTransformParameterfvHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetImageTransformParameterfvHP
static 
var glGetImageTransformParameterivHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetImageTransformParameterivHP
static 
var glGetInfoLogARB:@convention(c) (OpenGL.HandleARB, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.CharARB>?) -> () = _load_glGetInfoLogARB
static 
var glGetInstrumentsSGIX:@convention(c) () -> OpenGL.Int = _load_glGetInstrumentsSGIX
static 
var glGetInteger64i_v:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetInteger64i_v
static 
var glGetInteger64v:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetInteger64v
static 
var glGetInteger64vAPPLE:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetInteger64vAPPLE
static 
var glGetIntegerIndexedvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetIntegerIndexedvEXT
static 
var glGetIntegeri_v:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetIntegeri_v
static 
var glGetIntegeri_vEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetIntegeri_vEXT
static 
var glGetIntegerui64i_vNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetIntegerui64i_vNV
static 
var glGetIntegerui64vNV:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetIntegerui64vNV
static 
var glGetIntegerv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetIntegerv
static 
var glGetInternalformatSampleivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetInternalformatSampleivNV
static 
var glGetInternalformati64v:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetInternalformati64v
static 
var glGetInternalformativ:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetInternalformativ
static 
var glGetInvariantBooleanvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetInvariantBooleanvEXT
static 
var glGetInvariantFloatvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetInvariantFloatvEXT
static 
var glGetInvariantIntegervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetInvariantIntegervEXT
static 
var glGetLightfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetLightfv
static 
var glGetLightiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetLightiv
static 
var glGetLightxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetLightxOES
static 
var glGetLightxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetLightxv
static 
var glGetLightxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetLightxvOES
static 
var glGetListParameterfvSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetListParameterfvSGIX
static 
var glGetListParameterivSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetListParameterivSGIX
static 
var glGetLocalConstantBooleanvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetLocalConstantBooleanvEXT
static 
var glGetLocalConstantFloatvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetLocalConstantFloatvEXT
static 
var glGetLocalConstantIntegervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetLocalConstantIntegervEXT
static 
var glGetMapAttribParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMapAttribParameterfvNV
static 
var glGetMapAttribParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMapAttribParameterivNV
static 
var glGetMapControlPointsNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Bool, UnsafeMutableRawPointer?) -> () = _load_glGetMapControlPointsNV
static 
var glGetMapParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMapParameterfvNV
static 
var glGetMapParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMapParameterivNV
static 
var glGetMapdv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetMapdv
static 
var glGetMapfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMapfv
static 
var glGetMapiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMapiv
static 
var glGetMapxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetMapxvOES
static 
var glGetMaterialfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMaterialfv
static 
var glGetMaterialiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMaterialiv
static 
var glGetMaterialxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glGetMaterialxOES
static 
var glGetMaterialxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetMaterialxv
static 
var glGetMaterialxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetMaterialxvOES
static 
var glGetMinmax:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetMinmax
static 
var glGetMinmaxEXT:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetMinmaxEXT
static 
var glGetMinmaxParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMinmaxParameterfv
static 
var glGetMinmaxParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMinmaxParameterfvEXT
static 
var glGetMinmaxParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMinmaxParameteriv
static 
var glGetMinmaxParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMinmaxParameterivEXT
static 
var glGetMultiTexEnvfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultiTexEnvfvEXT
static 
var glGetMultiTexEnvivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMultiTexEnvivEXT
static 
var glGetMultiTexGendvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetMultiTexGendvEXT
static 
var glGetMultiTexGenfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultiTexGenfvEXT
static 
var glGetMultiTexGenivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMultiTexGenivEXT
static 
var glGetMultiTexImageEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetMultiTexImageEXT
static 
var glGetMultiTexLevelParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultiTexLevelParameterfvEXT
static 
var glGetMultiTexLevelParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMultiTexLevelParameterivEXT
static 
var glGetMultiTexParameterIivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMultiTexParameterIivEXT
static 
var glGetMultiTexParameterIuivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetMultiTexParameterIuivEXT
static 
var glGetMultiTexParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultiTexParameterfvEXT
static 
var glGetMultiTexParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetMultiTexParameterivEXT
static 
var glGetMultisamplefv:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultisamplefv
static 
var glGetMultisamplefvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetMultisamplefvNV
static 
var glGetNamedBufferParameteri64v:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetNamedBufferParameteri64v
static 
var glGetNamedBufferParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedBufferParameteriv
static 
var glGetNamedBufferParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedBufferParameterivEXT
static 
var glGetNamedBufferParameterui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetNamedBufferParameterui64vNV
static 
var glGetNamedBufferPointerv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetNamedBufferPointerv
static 
var glGetNamedBufferPointervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetNamedBufferPointervEXT
static 
var glGetNamedBufferSubData:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeMutableRawPointer?) -> () = _load_glGetNamedBufferSubData
static 
var glGetNamedBufferSubDataEXT:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeMutableRawPointer?) -> () = _load_glGetNamedBufferSubDataEXT
static 
var glGetNamedFramebufferAttachmentParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedFramebufferAttachmentParameteriv
static 
var glGetNamedFramebufferAttachmentParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedFramebufferAttachmentParameterivEXT
static 
var glGetNamedFramebufferParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedFramebufferParameteriv
static 
var glGetNamedFramebufferParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedFramebufferParameterivEXT
static 
var glGetNamedProgramLocalParameterIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedProgramLocalParameterIivEXT
static 
var glGetNamedProgramLocalParameterIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetNamedProgramLocalParameterIuivEXT
static 
var glGetNamedProgramLocalParameterdvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetNamedProgramLocalParameterdvEXT
static 
var glGetNamedProgramLocalParameterfvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetNamedProgramLocalParameterfvEXT
static 
var glGetNamedProgramStringEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetNamedProgramStringEXT
static 
var glGetNamedProgramivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedProgramivEXT
static 
var glGetNamedRenderbufferParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedRenderbufferParameteriv
static 
var glGetNamedRenderbufferParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedRenderbufferParameterivEXT
static 
var glGetNamedStringARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Char>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetNamedStringARB
static 
var glGetNamedStringivARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Char>?, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetNamedStringivARB
static 
var glGetNextPerfQueryIdINTEL:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetNextPerfQueryIdINTEL
static 
var glGetObjectBufferfvATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetObjectBufferfvATI
static 
var glGetObjectBufferivATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetObjectBufferivATI
static 
var glGetObjectLabel:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetObjectLabel
static 
var glGetObjectLabelEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetObjectLabelEXT
static 
var glGetObjectLabelKHR:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetObjectLabelKHR
static 
var glGetObjectParameterfvARB:@convention(c) (OpenGL.HandleARB, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetObjectParameterfvARB
static 
var glGetObjectParameterivAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetObjectParameterivAPPLE
static 
var glGetObjectParameterivARB:@convention(c) (OpenGL.HandleARB, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetObjectParameterivARB
static 
var glGetObjectPtrLabel:@convention(c) (UnsafeRawPointer?, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetObjectPtrLabel
static 
var glGetObjectPtrLabelKHR:@convention(c) (UnsafeRawPointer?, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetObjectPtrLabelKHR
static 
var glGetOcclusionQueryivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetOcclusionQueryivNV
static 
var glGetOcclusionQueryuivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetOcclusionQueryuivNV
static 
var glGetPathColorGenfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathColorGenfvNV
static 
var glGetPathColorGenivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPathColorGenivNV
static 
var glGetPathCommandsNV:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.UByte>?) -> () = _load_glGetPathCommandsNV
static 
var glGetPathCoordsNV:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathCoordsNV
static 
var glGetPathDashArrayNV:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathDashArrayNV
static 
var glGetPathLengthNV:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Size) -> OpenGL.Float = _load_glGetPathLengthNV
static 
var glGetPathMetricRangeNV:@convention(c) (OpenGL.Bitfield, OpenGL.UInt, OpenGL.Size, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathMetricRangeNV
static 
var glGetPathMetricsNV:@convention(c) (OpenGL.Bitfield, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathMetricsNV
static 
var glGetPathParameterfvNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathParameterfvNV
static 
var glGetPathParameterivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPathParameterivNV
static 
var glGetPathSpacingNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathSpacingNV
static 
var glGetPathTexGenfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPathTexGenfvNV
static 
var glGetPathTexGenivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPathTexGenivNV
static 
var glGetPerfCounterInfoINTEL:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Char>?, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Char>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt64>?) -> () = _load_glGetPerfCounterInfoINTEL
static 
var glGetPerfMonitorCounterDataAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPerfMonitorCounterDataAMD
static 
var glGetPerfMonitorCounterInfoAMD:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetPerfMonitorCounterInfoAMD
static 
var glGetPerfMonitorCounterStringAMD:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetPerfMonitorCounterStringAMD
static 
var glGetPerfMonitorCountersAMD:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Int>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPerfMonitorCountersAMD
static 
var glGetPerfMonitorGroupStringAMD:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetPerfMonitorGroupStringAMD
static 
var glGetPerfMonitorGroupsAMD:@convention(c) (UnsafeMutablePointer<OpenGL.Int>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPerfMonitorGroupsAMD
static 
var glGetPerfQueryDataINTEL:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutableRawPointer?, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPerfQueryDataINTEL
static 
var glGetPerfQueryIdByNameINTEL:@convention(c) (UnsafeMutablePointer<OpenGL.Char>?, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPerfQueryIdByNameINTEL
static 
var glGetPerfQueryInfoINTEL:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Char>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPerfQueryInfoINTEL
static 
var glGetPixelMapfv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPixelMapfv
static 
var glGetPixelMapuiv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetPixelMapuiv
static 
var glGetPixelMapusv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.UShort>?) -> () = _load_glGetPixelMapusv
static 
var glGetPixelMapxv:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetPixelMapxv
static 
var glGetPixelTexGenParameterfvSGIS:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPixelTexGenParameterfvSGIS
static 
var glGetPixelTexGenParameterivSGIS:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPixelTexGenParameterivSGIS
static 
var glGetPixelTransformParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetPixelTransformParameterfvEXT
static 
var glGetPixelTransformParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetPixelTransformParameterivEXT
static 
var glGetPointerIndexedvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetPointerIndexedvEXT
static 
var glGetPointeri_vEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetPointeri_vEXT
static 
var glGetPointerv:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetPointerv
static 
var glGetPointervEXT:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetPointervEXT
static 
var glGetPointervKHR:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetPointervKHR
static 
var glGetPolygonStipple:@convention(c) (UnsafeMutablePointer<OpenGL.UByte>?) -> () = _load_glGetPolygonStipple
static 
var glGetProgramBinary:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutableRawPointer?) -> () = _load_glGetProgramBinary
static 
var glGetProgramBinaryOES:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutableRawPointer?) -> () = _load_glGetProgramBinaryOES
static 
var glGetProgramEnvParameterIivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramEnvParameterIivNV
static 
var glGetProgramEnvParameterIuivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetProgramEnvParameterIuivNV
static 
var glGetProgramEnvParameterdvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetProgramEnvParameterdvARB
static 
var glGetProgramEnvParameterfvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetProgramEnvParameterfvARB
static 
var glGetProgramInfoLog:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetProgramInfoLog
static 
var glGetProgramInterfaceiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramInterfaceiv
static 
var glGetProgramLocalParameterIivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramLocalParameterIivNV
static 
var glGetProgramLocalParameterIuivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetProgramLocalParameterIuivNV
static 
var glGetProgramLocalParameterdvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetProgramLocalParameterdvARB
static 
var glGetProgramLocalParameterfvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetProgramLocalParameterfvARB
static 
var glGetProgramNamedParameterdvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetProgramNamedParameterdvNV
static 
var glGetProgramNamedParameterfvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetProgramNamedParameterfvNV
static 
var glGetProgramParameterdvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetProgramParameterdvNV
static 
var glGetProgramParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetProgramParameterfvNV
static 
var glGetProgramPipelineInfoLog:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetProgramPipelineInfoLog
static 
var glGetProgramPipelineInfoLogEXT:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetProgramPipelineInfoLogEXT
static 
var glGetProgramPipelineiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramPipelineiv
static 
var glGetProgramPipelineivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramPipelineivEXT
static 
var glGetProgramResourceIndex:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetProgramResourceIndex
static 
var glGetProgramResourceLocation:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetProgramResourceLocation
static 
var glGetProgramResourceLocationIndex:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetProgramResourceLocationIndex
static 
var glGetProgramResourceLocationIndexEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetProgramResourceLocationIndexEXT
static 
var glGetProgramResourceName:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetProgramResourceName
static 
var glGetProgramResourcefvNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetProgramResourcefvNV
static 
var glGetProgramResourceiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramResourceiv
static 
var glGetProgramStageiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramStageiv
static 
var glGetProgramStringARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetProgramStringARB
static 
var glGetProgramStringNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UByte>?) -> () = _load_glGetProgramStringNV
static 
var glGetProgramSubroutineParameteruivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetProgramSubroutineParameteruivNV
static 
var glGetProgramiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramiv
static 
var glGetProgramivARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramivARB
static 
var glGetProgramivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetProgramivNV
static 
var glGetQueryBufferObjecti64v:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointer) -> () = _load_glGetQueryBufferObjecti64v
static 
var glGetQueryBufferObjectiv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointer) -> () = _load_glGetQueryBufferObjectiv
static 
var glGetQueryBufferObjectui64v:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointer) -> () = _load_glGetQueryBufferObjectui64v
static 
var glGetQueryBufferObjectuiv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.IntPointer) -> () = _load_glGetQueryBufferObjectuiv
static 
var glGetQueryIndexediv:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryIndexediv
static 
var glGetQueryObjecti64v:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetQueryObjecti64v
static 
var glGetQueryObjecti64vEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetQueryObjecti64vEXT
static 
var glGetQueryObjectiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryObjectiv
static 
var glGetQueryObjectivARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryObjectivARB
static 
var glGetQueryObjectivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryObjectivEXT
static 
var glGetQueryObjectui64v:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64>?) -> () = _load_glGetQueryObjectui64v
static 
var glGetQueryObjectui64vEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64>?) -> () = _load_glGetQueryObjectui64vEXT
static 
var glGetQueryObjectuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetQueryObjectuiv
static 
var glGetQueryObjectuivARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetQueryObjectuivARB
static 
var glGetQueryObjectuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetQueryObjectuivEXT
static 
var glGetQueryiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryiv
static 
var glGetQueryivARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryivARB
static 
var glGetQueryivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetQueryivEXT
static 
var glGetRenderbufferParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetRenderbufferParameteriv
static 
var glGetRenderbufferParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetRenderbufferParameterivEXT
static 
var glGetRenderbufferParameterivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetRenderbufferParameterivOES
static 
var glGetSamplerParameterIiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSamplerParameterIiv
static 
var glGetSamplerParameterIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSamplerParameterIivEXT
static 
var glGetSamplerParameterIivOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSamplerParameterIivOES
static 
var glGetSamplerParameterIuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetSamplerParameterIuiv
static 
var glGetSamplerParameterIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetSamplerParameterIuivEXT
static 
var glGetSamplerParameterIuivOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetSamplerParameterIuivOES
static 
var glGetSamplerParameterfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetSamplerParameterfv
static 
var glGetSamplerParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSamplerParameteriv
static 
var glGetSeparableFilter:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = _load_glGetSeparableFilter
static 
var glGetSeparableFilterEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = _load_glGetSeparableFilterEXT
static 
var glGetShaderInfoLog:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetShaderInfoLog
static 
var glGetShaderPrecisionFormat:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetShaderPrecisionFormat
static 
var glGetShaderSource:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetShaderSource
static 
var glGetShaderSourceARB:@convention(c) (OpenGL.HandleARB, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.CharARB>?) -> () = _load_glGetShaderSourceARB
static 
var glGetShaderiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetShaderiv
static 
var glGetSharpenTexFuncSGIS:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetSharpenTexFuncSGIS
static 
var glGetStageIndexNV:@convention(c) (OpenGL.Enum) -> OpenGL.UShort = _load_glGetStageIndexNV
static 
var glGetString:@convention(c) (OpenGL.Enum) -> UnsafeMutablePointer<UInt8>? = _load_glGetString
static 
var glGetStringi:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> UnsafeMutablePointer<UInt8>? = _load_glGetStringi
static 
var glGetSubroutineIndex:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetSubroutineIndex
static 
var glGetSubroutineUniformLocation:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetSubroutineUniformLocation
static 
var glGetSynciv:@convention(c) (OpenGL.Sync, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSynciv
static 
var glGetSyncivAPPLE:@convention(c) (OpenGL.Sync, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetSyncivAPPLE
static 
var glGetTexBumpParameterfvATI:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexBumpParameterfvATI
static 
var glGetTexBumpParameterivATI:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexBumpParameterivATI
static 
var glGetTexEnvfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexEnvfv
static 
var glGetTexEnviv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexEnviv
static 
var glGetTexEnvxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexEnvxv
static 
var glGetTexEnvxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexEnvxvOES
static 
var glGetTexFilterFuncSGIS:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexFilterFuncSGIS
static 
var glGetTexGendv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetTexGendv
static 
var glGetTexGenfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexGenfv
static 
var glGetTexGenfvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexGenfvOES
static 
var glGetTexGeniv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexGeniv
static 
var glGetTexGenivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexGenivOES
static 
var glGetTexGenxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexGenxvOES
static 
var glGetTexImage:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetTexImage
static 
var glGetTexLevelParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexLevelParameterfv
static 
var glGetTexLevelParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexLevelParameteriv
static 
var glGetTexLevelParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexLevelParameterxvOES
static 
var glGetTexParameterIiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexParameterIiv
static 
var glGetTexParameterIivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexParameterIivEXT
static 
var glGetTexParameterIivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexParameterIivOES
static 
var glGetTexParameterIuiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetTexParameterIuiv
static 
var glGetTexParameterIuivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetTexParameterIuivEXT
static 
var glGetTexParameterIuivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetTexParameterIuivOES
static 
var glGetTexParameterPointervAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetTexParameterPointervAPPLE
static 
var glGetTexParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTexParameterfv
static 
var glGetTexParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTexParameteriv
static 
var glGetTexParameterxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexParameterxv
static 
var glGetTexParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Fixed>?) -> () = _load_glGetTexParameterxvOES
static 
var glGetTextureHandleARB:@convention(c) (OpenGL.UInt) -> OpenGL.UInt64 = _load_glGetTextureHandleARB
static 
var glGetTextureHandleNV:@convention(c) (OpenGL.UInt) -> OpenGL.UInt64 = _load_glGetTextureHandleNV
static 
var glGetTextureImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetTextureImage
static 
var glGetTextureImageEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glGetTextureImageEXT
static 
var glGetTextureLevelParameterfv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTextureLevelParameterfv
static 
var glGetTextureLevelParameterfvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTextureLevelParameterfvEXT
static 
var glGetTextureLevelParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureLevelParameteriv
static 
var glGetTextureLevelParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureLevelParameterivEXT
static 
var glGetTextureParameterIiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureParameterIiv
static 
var glGetTextureParameterIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureParameterIivEXT
static 
var glGetTextureParameterIuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetTextureParameterIuiv
static 
var glGetTextureParameterIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetTextureParameterIuivEXT
static 
var glGetTextureParameterfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTextureParameterfv
static 
var glGetTextureParameterfvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetTextureParameterfvEXT
static 
var glGetTextureParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureParameteriv
static 
var glGetTextureParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTextureParameterivEXT
static 
var glGetTextureSamplerHandleARB:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> OpenGL.UInt64 = _load_glGetTextureSamplerHandleARB
static 
var glGetTextureSamplerHandleNV:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> OpenGL.UInt64 = _load_glGetTextureSamplerHandleNV
static 
var glGetTextureSubImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetTextureSubImage
static 
var glGetTrackMatrixivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTrackMatrixivNV
static 
var glGetTransformFeedbackVarying:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetTransformFeedbackVarying
static 
var glGetTransformFeedbackVaryingEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Enum>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetTransformFeedbackVaryingEXT
static 
var glGetTransformFeedbackVaryingNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTransformFeedbackVaryingNV
static 
var glGetTransformFeedbacki64_v:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetTransformFeedbacki64_v
static 
var glGetTransformFeedbacki_v:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTransformFeedbacki_v
static 
var glGetTransformFeedbackiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetTransformFeedbackiv
static 
var glGetTranslatedShaderSourceANGLE:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Char>?) -> () = _load_glGetTranslatedShaderSourceANGLE
static 
var glGetUniformBlockIndex:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt = _load_glGetUniformBlockIndex
static 
var glGetUniformBufferSizeEXT:@convention(c) (OpenGL.UInt, OpenGL.Int) -> OpenGL.Int = _load_glGetUniformBufferSizeEXT
static 
var glGetUniformIndices:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetUniformIndices
static 
var glGetUniformLocation:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetUniformLocation
static 
var glGetUniformLocationARB:@convention(c) (OpenGL.HandleARB, UnsafePointer<OpenGL.CharARB>?) -> OpenGL.Int = _load_glGetUniformLocationARB
static 
var glGetUniformOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.Int) -> OpenGL.IntPointer = _load_glGetUniformOffsetEXT
static 
var glGetUniformSubroutineuiv:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetUniformSubroutineuiv
static 
var glGetUniformdv:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetUniformdv
static 
var glGetUniformfv:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetUniformfv
static 
var glGetUniformfvARB:@convention(c) (OpenGL.HandleARB, OpenGL.Int, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetUniformfvARB
static 
var glGetUniformi64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetUniformi64vARB
static 
var glGetUniformi64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int64EXT>?) -> () = _load_glGetUniformi64vNV
static 
var glGetUniformiv:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetUniformiv
static 
var glGetUniformivARB:@convention(c) (OpenGL.HandleARB, OpenGL.Int, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetUniformivARB
static 
var glGetUniformui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt64>?) -> () = _load_glGetUniformui64vARB
static 
var glGetUniformui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetUniformui64vNV
static 
var glGetUniformuiv:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetUniformuiv
static 
var glGetUniformuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetUniformuivEXT
static 
var glGetVariantArrayObjectfvATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVariantArrayObjectfvATI
static 
var glGetVariantArrayObjectivATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVariantArrayObjectivATI
static 
var glGetVariantBooleanvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Bool>?) -> () = _load_glGetVariantBooleanvEXT
static 
var glGetVariantFloatvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVariantFloatvEXT
static 
var glGetVariantIntegervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVariantIntegervEXT
static 
var glGetVariantPointervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVariantPointervEXT
static 
var glGetVaryingLocationNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Char>?) -> OpenGL.Int = _load_glGetVaryingLocationNV
static 
var glGetVertexArrayIndexed64iv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetVertexArrayIndexed64iv
static 
var glGetVertexArrayIndexediv:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexArrayIndexediv
static 
var glGetVertexArrayIntegeri_vEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexArrayIntegeri_vEXT
static 
var glGetVertexArrayIntegervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexArrayIntegervEXT
static 
var glGetVertexArrayPointeri_vEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVertexArrayPointeri_vEXT
static 
var glGetVertexArrayPointervEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVertexArrayPointervEXT
static 
var glGetVertexArrayiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexArrayiv
static 
var glGetVertexAttribArrayObjectfvATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVertexAttribArrayObjectfvATI
static 
var glGetVertexAttribArrayObjectivATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribArrayObjectivATI
static 
var glGetVertexAttribIiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribIiv
static 
var glGetVertexAttribIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribIivEXT
static 
var glGetVertexAttribIuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetVertexAttribIuiv
static 
var glGetVertexAttribIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetVertexAttribIuivEXT
static 
var glGetVertexAttribLdv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVertexAttribLdv
static 
var glGetVertexAttribLdvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVertexAttribLdvEXT
static 
var glGetVertexAttribLi64vNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64EXT>?) -> () = _load_glGetVertexAttribLi64vNV
static 
var glGetVertexAttribLui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetVertexAttribLui64vARB
static 
var glGetVertexAttribLui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetVertexAttribLui64vNV
static 
var glGetVertexAttribPointerv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVertexAttribPointerv
static 
var glGetVertexAttribPointervARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVertexAttribPointervARB
static 
var glGetVertexAttribPointervNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = _load_glGetVertexAttribPointervNV
static 
var glGetVertexAttribdv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVertexAttribdv
static 
var glGetVertexAttribdvARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVertexAttribdvARB
static 
var glGetVertexAttribdvNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVertexAttribdvNV
static 
var glGetVertexAttribfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVertexAttribfv
static 
var glGetVertexAttribfvARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVertexAttribfvARB
static 
var glGetVertexAttribfvNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVertexAttribfvNV
static 
var glGetVertexAttribiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribiv
static 
var glGetVertexAttribivARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribivARB
static 
var glGetVertexAttribivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVertexAttribivNV
static 
var glGetVideoCaptureStreamdvNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetVideoCaptureStreamdvNV
static 
var glGetVideoCaptureStreamfvNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetVideoCaptureStreamfvNV
static 
var glGetVideoCaptureStreamivNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVideoCaptureStreamivNV
static 
var glGetVideoCaptureivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVideoCaptureivNV
static 
var glGetVideoi64vNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int64EXT>?) -> () = _load_glGetVideoi64vNV
static 
var glGetVideoivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetVideoivNV
static 
var glGetVideoui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> () = _load_glGetVideoui64vNV
static 
var glGetVideouivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetVideouivNV
static 
var glGetnColorTable:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnColorTable
static 
var glGetnColorTableARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnColorTableARB
static 
var glGetnCompressedTexImage:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnCompressedTexImage
static 
var glGetnCompressedTexImageARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnCompressedTexImageARB
static 
var glGetnConvolutionFilter:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnConvolutionFilter
static 
var glGetnConvolutionFilterARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnConvolutionFilterARB
static 
var glGetnHistogram:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnHistogram
static 
var glGetnHistogramARB:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnHistogramARB
static 
var glGetnMapdv:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetnMapdv
static 
var glGetnMapdvARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetnMapdvARB
static 
var glGetnMapfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnMapfv
static 
var glGetnMapfvARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnMapfvARB
static 
var glGetnMapiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnMapiv
static 
var glGetnMapivARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnMapivARB
static 
var glGetnMinmax:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnMinmax
static 
var glGetnMinmaxARB:@convention(c) (OpenGL.Enum, OpenGL.Bool, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnMinmaxARB
static 
var glGetnPixelMapfv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnPixelMapfv
static 
var glGetnPixelMapfvARB:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnPixelMapfvARB
static 
var glGetnPixelMapuiv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetnPixelMapuiv
static 
var glGetnPixelMapuivARB:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetnPixelMapuivARB
static 
var glGetnPixelMapusv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UShort>?) -> () = _load_glGetnPixelMapusv
static 
var glGetnPixelMapusvARB:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.UShort>?) -> () = _load_glGetnPixelMapusvARB
static 
var glGetnPolygonStipple:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UByte>?) -> () = _load_glGetnPolygonStipple
static 
var glGetnPolygonStippleARB:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UByte>?) -> () = _load_glGetnPolygonStippleARB
static 
var glGetnSeparableFilter:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?, OpenGL.Size, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = _load_glGetnSeparableFilter
static 
var glGetnSeparableFilterARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?, OpenGL.Size, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = _load_glGetnSeparableFilterARB
static 
var glGetnTexImage:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnTexImage
static 
var glGetnTexImageARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glGetnTexImageARB
static 
var glGetnUniformdv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetnUniformdv
static 
var glGetnUniformdvARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Double>?) -> () = _load_glGetnUniformdvARB
static 
var glGetnUniformfv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnUniformfv
static 
var glGetnUniformfvARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnUniformfvARB
static 
var glGetnUniformfvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnUniformfvEXT
static 
var glGetnUniformfvKHR:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Float>?) -> () = _load_glGetnUniformfvKHR
static 
var glGetnUniformi64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int64>?) -> () = _load_glGetnUniformi64vARB
static 
var glGetnUniformiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnUniformiv
static 
var glGetnUniformivARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnUniformivARB
static 
var glGetnUniformivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnUniformivEXT
static 
var glGetnUniformivKHR:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glGetnUniformivKHR
static 
var glGetnUniformui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt64>?) -> () = _load_glGetnUniformui64vARB
static 
var glGetnUniformuiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetnUniformuiv
static 
var glGetnUniformuivARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetnUniformuivARB
static 
var glGetnUniformuivKHR:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glGetnUniformuivKHR
static 
var glGlobalAlphaFactorbSUN:@convention(c) (OpenGL.Byte) -> () = _load_glGlobalAlphaFactorbSUN
static 
var glGlobalAlphaFactordSUN:@convention(c) (OpenGL.Double) -> () = _load_glGlobalAlphaFactordSUN
static 
var glGlobalAlphaFactorfSUN:@convention(c) (OpenGL.Float) -> () = _load_glGlobalAlphaFactorfSUN
static 
var glGlobalAlphaFactoriSUN:@convention(c) (OpenGL.Int) -> () = _load_glGlobalAlphaFactoriSUN
static 
var glGlobalAlphaFactorsSUN:@convention(c) (OpenGL.Short) -> () = _load_glGlobalAlphaFactorsSUN
static 
var glGlobalAlphaFactorubSUN:@convention(c) (OpenGL.UByte) -> () = _load_glGlobalAlphaFactorubSUN
static 
var glGlobalAlphaFactoruiSUN:@convention(c) (OpenGL.UInt) -> () = _load_glGlobalAlphaFactoruiSUN
static 
var glGlobalAlphaFactorusSUN:@convention(c) (OpenGL.UShort) -> () = _load_glGlobalAlphaFactorusSUN
static 
var glHint:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glHint
static 
var glHintPGI:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glHintPGI
static 
var glHistogram:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Bool) -> () = _load_glHistogram
static 
var glHistogramEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Bool) -> () = _load_glHistogramEXT
static 
var glIglooInterfaceSGIX:@convention(c) (OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glIglooInterfaceSGIX
static 
var glImageTransformParameterfHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glImageTransformParameterfHP
static 
var glImageTransformParameterfvHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glImageTransformParameterfvHP
static 
var glImageTransformParameteriHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glImageTransformParameteriHP
static 
var glImageTransformParameterivHP:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glImageTransformParameterivHP
static 
var glImportSyncEXT:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.Bitfield) -> OpenGL.Sync = _load_glImportSyncEXT
static 
var glIndexFormatNV:@convention(c) (OpenGL.Enum, OpenGL.Size) -> () = _load_glIndexFormatNV
static 
var glIndexFuncEXT:@convention(c) (OpenGL.Enum, OpenGL.ClampFloat) -> () = _load_glIndexFuncEXT
static 
var glIndexMask:@convention(c) (OpenGL.UInt) -> () = _load_glIndexMask
static 
var glIndexMaterialEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glIndexMaterialEXT
static 
var glIndexPointer:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glIndexPointer
static 
var glIndexPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glIndexPointerEXT
static 
var glIndexPointerListIBM:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glIndexPointerListIBM
static 
var glIndexd:@convention(c) (OpenGL.Double) -> () = _load_glIndexd
static 
var glIndexdv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glIndexdv
static 
var glIndexf:@convention(c) (OpenGL.Float) -> () = _load_glIndexf
static 
var glIndexfv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glIndexfv
static 
var glIndexi:@convention(c) (OpenGL.Int) -> () = _load_glIndexi
static 
var glIndexiv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glIndexiv
static 
var glIndexs:@convention(c) (OpenGL.Short) -> () = _load_glIndexs
static 
var glIndexsv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glIndexsv
static 
var glIndexub:@convention(c) (OpenGL.UByte) -> () = _load_glIndexub
static 
var glIndexubv:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glIndexubv
static 
var glIndexxOES:@convention(c) (OpenGL.Fixed) -> () = _load_glIndexxOES
static 
var glIndexxvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glIndexxvOES
static 
var glInitNames:@convention(c) () -> () = _load_glInitNames
static 
var glInsertComponentEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glInsertComponentEXT
static 
var glInsertEventMarkerEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glInsertEventMarkerEXT
static 
var glInstrumentsBufferSGIX:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glInstrumentsBufferSGIX
static 
var glInterleavedArrays:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glInterleavedArrays
static 
var glInterpolatePathsNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.Float) -> () = _load_glInterpolatePathsNV
static 
var glInvalidateBufferData:@convention(c) (OpenGL.UInt) -> () = _load_glInvalidateBufferData
static 
var glInvalidateBufferSubData:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glInvalidateBufferSubData
static 
var glInvalidateFramebuffer:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glInvalidateFramebuffer
static 
var glInvalidateNamedFramebufferData:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glInvalidateNamedFramebufferData
static 
var glInvalidateNamedFramebufferSubData:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glInvalidateNamedFramebufferSubData
static 
var glInvalidateSubFramebuffer:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Enum>?, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glInvalidateSubFramebuffer
static 
var glInvalidateTexImage:@convention(c) (OpenGL.UInt, OpenGL.Int) -> () = _load_glInvalidateTexImage
static 
var glInvalidateTexSubImage:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glInvalidateTexSubImage
static 
var glIsAsyncMarkerSGIX:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsAsyncMarkerSGIX
static 
var glIsBuffer:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsBuffer
static 
var glIsBufferARB:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsBufferARB
static 
var glIsBufferResidentNV:@convention(c) (OpenGL.Enum) -> OpenGL.Bool = _load_glIsBufferResidentNV
static 
var glIsCommandListNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsCommandListNV
static 
var glIsEnabled:@convention(c) (OpenGL.Enum) -> OpenGL.Bool = _load_glIsEnabled
static 
var glIsEnabledIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsEnabledIndexedEXT
static 
var glIsEnabledi:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsEnabledi
static 
var glIsEnablediEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsEnablediEXT
static 
var glIsEnablediNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsEnablediNV
static 
var glIsEnablediOES:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsEnablediOES
static 
var glIsFenceAPPLE:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsFenceAPPLE
static 
var glIsFenceNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsFenceNV
static 
var glIsFramebuffer:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsFramebuffer
static 
var glIsFramebufferEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsFramebufferEXT
static 
var glIsFramebufferOES:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsFramebufferOES
static 
var glIsImageHandleResidentARB:@convention(c) (OpenGL.UInt64) -> OpenGL.Bool = _load_glIsImageHandleResidentARB
static 
var glIsImageHandleResidentNV:@convention(c) (OpenGL.UInt64) -> OpenGL.Bool = _load_glIsImageHandleResidentNV
static 
var glIsList:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsList
static 
var glIsNameAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glIsNameAMD
static 
var glIsNamedBufferResidentNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsNamedBufferResidentNV
static 
var glIsNamedStringARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Char>?) -> OpenGL.Bool = _load_glIsNamedStringARB
static 
var glIsObjectBufferATI:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsObjectBufferATI
static 
var glIsOcclusionQueryNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsOcclusionQueryNV
static 
var glIsPathNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsPathNV
static 
var glIsPointInFillPathNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> OpenGL.Bool = _load_glIsPointInFillPathNV
static 
var glIsPointInStrokePathNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> OpenGL.Bool = _load_glIsPointInStrokePathNV
static 
var glIsProgram:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsProgram
static 
var glIsProgramARB:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsProgramARB
static 
var glIsProgramNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsProgramNV
static 
var glIsProgramPipeline:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsProgramPipeline
static 
var glIsProgramPipelineEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsProgramPipelineEXT
static 
var glIsQuery:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsQuery
static 
var glIsQueryARB:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsQueryARB
static 
var glIsQueryEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsQueryEXT
static 
var glIsRenderbuffer:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsRenderbuffer
static 
var glIsRenderbufferEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsRenderbufferEXT
static 
var glIsRenderbufferOES:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsRenderbufferOES
static 
var glIsSampler:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsSampler
static 
var glIsShader:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsShader
static 
var glIsStateNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsStateNV
static 
var glIsSync:@convention(c) (OpenGL.Sync) -> OpenGL.Bool = _load_glIsSync
static 
var glIsSyncAPPLE:@convention(c) (OpenGL.Sync) -> OpenGL.Bool = _load_glIsSyncAPPLE
static 
var glIsTexture:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsTexture
static 
var glIsTextureEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsTextureEXT
static 
var glIsTextureHandleResidentARB:@convention(c) (OpenGL.UInt64) -> OpenGL.Bool = _load_glIsTextureHandleResidentARB
static 
var glIsTextureHandleResidentNV:@convention(c) (OpenGL.UInt64) -> OpenGL.Bool = _load_glIsTextureHandleResidentNV
static 
var glIsTransformFeedback:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsTransformFeedback
static 
var glIsTransformFeedbackNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsTransformFeedbackNV
static 
var glIsVariantEnabledEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> OpenGL.Bool = _load_glIsVariantEnabledEXT
static 
var glIsVertexArray:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsVertexArray
static 
var glIsVertexArrayAPPLE:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsVertexArrayAPPLE
static 
var glIsVertexArrayOES:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glIsVertexArrayOES
static 
var glIsVertexAttribEnabledAPPLE:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> OpenGL.Bool = _load_glIsVertexAttribEnabledAPPLE
static 
var glLabelObjectEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glLabelObjectEXT
static 
var glLightEnviSGIX:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glLightEnviSGIX
static 
var glLightModelf:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glLightModelf
static 
var glLightModelfv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glLightModelfv
static 
var glLightModeli:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glLightModeli
static 
var glLightModeliv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glLightModeliv
static 
var glLightModelx:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glLightModelx
static 
var glLightModelxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glLightModelxOES
static 
var glLightModelxv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLightModelxv
static 
var glLightModelxvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLightModelxvOES
static 
var glLightf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glLightf
static 
var glLightfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glLightfv
static 
var glLighti:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glLighti
static 
var glLightiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glLightiv
static 
var glLightx:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glLightx
static 
var glLightxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glLightxOES
static 
var glLightxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLightxv
static 
var glLightxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLightxvOES
static 
var glLineStipple:@convention(c) (OpenGL.Int, OpenGL.UShort) -> () = _load_glLineStipple
static 
var glLineWidth:@convention(c) (OpenGL.Float) -> () = _load_glLineWidth
static 
var glLineWidthx:@convention(c) (OpenGL.Fixed) -> () = _load_glLineWidthx
static 
var glLineWidthxOES:@convention(c) (OpenGL.Fixed) -> () = _load_glLineWidthxOES
static 
var glLinkProgram:@convention(c) (OpenGL.UInt) -> () = _load_glLinkProgram
static 
var glLinkProgramARB:@convention(c) (OpenGL.HandleARB) -> () = _load_glLinkProgramARB
static 
var glListBase:@convention(c) (OpenGL.UInt) -> () = _load_glListBase
static 
var glListDrawCommandsStatesClientNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, UnsafeMutablePointer<UnsafeRawPointer?>?, UnsafePointer<OpenGL.Size>?, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.UInt>?, OpenGL.UInt) -> () = _load_glListDrawCommandsStatesClientNV
static 
var glListParameterfSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Float) -> () = _load_glListParameterfSGIX
static 
var glListParameterfvSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glListParameterfvSGIX
static 
var glListParameteriSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glListParameteriSGIX
static 
var glListParameterivSGIX:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glListParameterivSGIX
static 
var glLoadIdentity:@convention(c) () -> () = _load_glLoadIdentity
static 
var glLoadIdentityDeformationMapSGIX:@convention(c) (OpenGL.Bitfield) -> () = _load_glLoadIdentityDeformationMapSGIX
static 
var glLoadMatrixd:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glLoadMatrixd
static 
var glLoadMatrixf:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glLoadMatrixf
static 
var glLoadMatrixx:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLoadMatrixx
static 
var glLoadMatrixxOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLoadMatrixxOES
static 
var glLoadName:@convention(c) (OpenGL.UInt) -> () = _load_glLoadName
static 
var glLoadPaletteFromModelViewMatrixOES:@convention(c) () -> () = _load_glLoadPaletteFromModelViewMatrixOES
static 
var glLoadProgramNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?) -> () = _load_glLoadProgramNV
static 
var glLoadTransposeMatrixd:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glLoadTransposeMatrixd
static 
var glLoadTransposeMatrixdARB:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glLoadTransposeMatrixdARB
static 
var glLoadTransposeMatrixf:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glLoadTransposeMatrixf
static 
var glLoadTransposeMatrixfARB:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glLoadTransposeMatrixfARB
static 
var glLoadTransposeMatrixxOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glLoadTransposeMatrixxOES
static 
var glLockArraysEXT:@convention(c) (OpenGL.Int, OpenGL.Size) -> () = _load_glLockArraysEXT
static 
var glLogicOp:@convention(c) (OpenGL.Enum) -> () = _load_glLogicOp
static 
var glMakeBufferNonResidentNV:@convention(c) (OpenGL.Enum) -> () = _load_glMakeBufferNonResidentNV
static 
var glMakeBufferResidentNV:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glMakeBufferResidentNV
static 
var glMakeImageHandleNonResidentARB:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeImageHandleNonResidentARB
static 
var glMakeImageHandleNonResidentNV:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeImageHandleNonResidentNV
static 
var glMakeImageHandleResidentARB:@convention(c) (OpenGL.UInt64, OpenGL.Enum) -> () = _load_glMakeImageHandleResidentARB
static 
var glMakeImageHandleResidentNV:@convention(c) (OpenGL.UInt64, OpenGL.Enum) -> () = _load_glMakeImageHandleResidentNV
static 
var glMakeNamedBufferNonResidentNV:@convention(c) (OpenGL.UInt) -> () = _load_glMakeNamedBufferNonResidentNV
static 
var glMakeNamedBufferResidentNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glMakeNamedBufferResidentNV
static 
var glMakeTextureHandleNonResidentARB:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeTextureHandleNonResidentARB
static 
var glMakeTextureHandleNonResidentNV:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeTextureHandleNonResidentNV
static 
var glMakeTextureHandleResidentARB:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeTextureHandleResidentARB
static 
var glMakeTextureHandleResidentNV:@convention(c) (OpenGL.UInt64) -> () = _load_glMakeTextureHandleResidentNV
static 
var glMap1d:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glMap1d
static 
var glMap1f:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glMap1f
static 
var glMap1xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Int, OpenGL.Int, OpenGL.Fixed) -> () = _load_glMap1xOES
static 
var glMap2d:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glMap2d
static 
var glMap2f:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glMap2f
static 
var glMap2xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Int, OpenGL.Int, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Int, OpenGL.Int, OpenGL.Fixed) -> () = _load_glMap2xOES
static 
var glMapBuffer:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> UnsafeMutableRawPointer? = _load_glMapBuffer
static 
var glMapBufferARB:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> UnsafeMutableRawPointer? = _load_glMapBufferARB
static 
var glMapBufferOES:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> UnsafeMutableRawPointer? = _load_glMapBufferOES
static 
var glMapBufferRange:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bitfield) -> UnsafeMutableRawPointer? = _load_glMapBufferRange
static 
var glMapBufferRangeEXT:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bitfield) -> UnsafeMutableRawPointer? = _load_glMapBufferRangeEXT
static 
var glMapControlPointsNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Int, OpenGL.Bool, UnsafeRawPointer?) -> () = _load_glMapControlPointsNV
static 
var glMapGrid1d:@convention(c) (OpenGL.Int, OpenGL.Double, OpenGL.Double) -> () = _load_glMapGrid1d
static 
var glMapGrid1f:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glMapGrid1f
static 
var glMapGrid1xOES:@convention(c) (OpenGL.Int, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMapGrid1xOES
static 
var glMapGrid2d:@convention(c) (OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Double, OpenGL.Double) -> () = _load_glMapGrid2d
static 
var glMapGrid2f:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glMapGrid2f
static 
var glMapGrid2xOES:@convention(c) (OpenGL.Int, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMapGrid2xOES
static 
var glMapNamedBuffer:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> UnsafeMutableRawPointer? = _load_glMapNamedBuffer
static 
var glMapNamedBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> UnsafeMutableRawPointer? = _load_glMapNamedBufferEXT
static 
var glMapNamedBufferRange:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bitfield) -> UnsafeMutableRawPointer? = _load_glMapNamedBufferRange
static 
var glMapNamedBufferRangeEXT:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bitfield) -> UnsafeMutableRawPointer? = _load_glMapNamedBufferRangeEXT
static 
var glMapObjectBufferATI:@convention(c) (OpenGL.UInt) -> UnsafeMutableRawPointer? = _load_glMapObjectBufferATI
static 
var glMapParameterfvNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMapParameterfvNV
static 
var glMapParameterivNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMapParameterivNV
static 
var glMapTexture2DINTEL:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Bitfield, UnsafeMutablePointer<OpenGL.Int>?, UnsafeMutablePointer<OpenGL.Enum>?) -> UnsafeMutableRawPointer? = _load_glMapTexture2DINTEL
static 
var glMapVertexAttrib1dAPPLE:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glMapVertexAttrib1dAPPLE
static 
var glMapVertexAttrib1fAPPLE:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glMapVertexAttrib1fAPPLE
static 
var glMapVertexAttrib2dAPPLE:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glMapVertexAttrib2dAPPLE
static 
var glMapVertexAttrib2fAPPLE:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Int, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glMapVertexAttrib2fAPPLE
static 
var glMaterialf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glMaterialf
static 
var glMaterialfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMaterialfv
static 
var glMateriali:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glMateriali
static 
var glMaterialiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMaterialiv
static 
var glMaterialx:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glMaterialx
static 
var glMaterialxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glMaterialxOES
static 
var glMaterialxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMaterialxv
static 
var glMaterialxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMaterialxvOES
static 
var glMatrixFrustumEXT:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMatrixFrustumEXT
static 
var glMatrixIndexPointerARB:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glMatrixIndexPointerARB
static 
var glMatrixIndexPointerOES:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glMatrixIndexPointerOES
static 
var glMatrixIndexubvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UByte>?) -> () = _load_glMatrixIndexubvARB
static 
var glMatrixIndexuivARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMatrixIndexuivARB
static 
var glMatrixIndexusvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UShort>?) -> () = _load_glMatrixIndexusvARB
static 
var glMatrixLoad3x2fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixLoad3x2fNV
static 
var glMatrixLoad3x3fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixLoad3x3fNV
static 
var glMatrixLoadIdentityEXT:@convention(c) (OpenGL.Enum) -> () = _load_glMatrixLoadIdentityEXT
static 
var glMatrixLoadTranspose3x3fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixLoadTranspose3x3fNV
static 
var glMatrixLoadTransposedEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMatrixLoadTransposedEXT
static 
var glMatrixLoadTransposefEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixLoadTransposefEXT
static 
var glMatrixLoaddEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMatrixLoaddEXT
static 
var glMatrixLoadfEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixLoadfEXT
static 
var glMatrixMode:@convention(c) (OpenGL.Enum) -> () = _load_glMatrixMode
static 
var glMatrixMult3x2fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixMult3x2fNV
static 
var glMatrixMult3x3fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixMult3x3fNV
static 
var glMatrixMultTranspose3x3fNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixMultTranspose3x3fNV
static 
var glMatrixMultTransposedEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMatrixMultTransposedEXT
static 
var glMatrixMultTransposefEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixMultTransposefEXT
static 
var glMatrixMultdEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMatrixMultdEXT
static 
var glMatrixMultfEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMatrixMultfEXT
static 
var glMatrixOrthoEXT:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMatrixOrthoEXT
static 
var glMatrixPopEXT:@convention(c) (OpenGL.Enum) -> () = _load_glMatrixPopEXT
static 
var glMatrixPushEXT:@convention(c) (OpenGL.Enum) -> () = _load_glMatrixPushEXT
static 
var glMatrixRotatedEXT:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMatrixRotatedEXT
static 
var glMatrixRotatefEXT:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMatrixRotatefEXT
static 
var glMatrixScaledEXT:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMatrixScaledEXT
static 
var glMatrixScalefEXT:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMatrixScalefEXT
static 
var glMatrixTranslatedEXT:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMatrixTranslatedEXT
static 
var glMatrixTranslatefEXT:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMatrixTranslatefEXT
static 
var glMaxShaderCompilerThreadsARB:@convention(c) (OpenGL.UInt) -> () = _load_glMaxShaderCompilerThreadsARB
static 
var glMemoryBarrier:@convention(c) (OpenGL.Bitfield) -> () = _load_glMemoryBarrier
static 
var glMemoryBarrierByRegion:@convention(c) (OpenGL.Bitfield) -> () = _load_glMemoryBarrierByRegion
static 
var glMemoryBarrierEXT:@convention(c) (OpenGL.Bitfield) -> () = _load_glMemoryBarrierEXT
static 
var glMinSampleShading:@convention(c) (OpenGL.Float) -> () = _load_glMinSampleShading
static 
var glMinSampleShadingARB:@convention(c) (OpenGL.Float) -> () = _load_glMinSampleShadingARB
static 
var glMinSampleShadingOES:@convention(c) (OpenGL.Float) -> () = _load_glMinSampleShadingOES
static 
var glMinmax:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Bool) -> () = _load_glMinmax
static 
var glMinmaxEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Bool) -> () = _load_glMinmaxEXT
static 
var glMultMatrixd:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glMultMatrixd
static 
var glMultMatrixf:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glMultMatrixf
static 
var glMultMatrixx:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultMatrixx
static 
var glMultMatrixxOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultMatrixxOES
static 
var glMultTransposeMatrixd:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glMultTransposeMatrixd
static 
var glMultTransposeMatrixdARB:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glMultTransposeMatrixdARB
static 
var glMultTransposeMatrixf:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glMultTransposeMatrixf
static 
var glMultTransposeMatrixfARB:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glMultTransposeMatrixfARB
static 
var glMultTransposeMatrixxOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultTransposeMatrixxOES
static 
var glMultiDrawArrays:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Size>?, OpenGL.Size) -> () = _load_glMultiDrawArrays
static 
var glMultiDrawArraysEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Size>?, OpenGL.Size) -> () = _load_glMultiDrawArraysEXT
static 
var glMultiDrawArraysIndirect:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawArraysIndirect
static 
var glMultiDrawArraysIndirectAMD:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawArraysIndirectAMD
static 
var glMultiDrawArraysIndirectBindlessCountNV:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiDrawArraysIndirectBindlessCountNV
static 
var glMultiDrawArraysIndirectBindlessNV:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiDrawArraysIndirectBindlessNV
static 
var glMultiDrawArraysIndirectCountARB:@convention(c) (OpenGL.Enum, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawArraysIndirectCountARB
static 
var glMultiDrawArraysIndirectEXT:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawArraysIndirectEXT
static 
var glMultiDrawElementArrayAPPLE:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Size>?, OpenGL.Size) -> () = _load_glMultiDrawElementArrayAPPLE
static 
var glMultiDrawElements:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size) -> () = _load_glMultiDrawElements
static 
var glMultiDrawElementsBaseVertex:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiDrawElementsBaseVertex
static 
var glMultiDrawElementsBaseVertexEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiDrawElementsBaseVertexEXT
static 
var glMultiDrawElementsBaseVertexOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiDrawElementsBaseVertexOES
static 
var glMultiDrawElementsEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size) -> () = _load_glMultiDrawElementsEXT
static 
var glMultiDrawElementsIndirect:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawElementsIndirect
static 
var glMultiDrawElementsIndirectAMD:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawElementsIndirectAMD
static 
var glMultiDrawElementsIndirectBindlessCountNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiDrawElementsIndirectBindlessCountNV
static 
var glMultiDrawElementsIndirectBindlessNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiDrawElementsIndirectBindlessNV
static 
var glMultiDrawElementsIndirectCountARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawElementsIndirectCountARB
static 
var glMultiDrawElementsIndirectEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size, OpenGL.Size) -> () = _load_glMultiDrawElementsIndirectEXT
static 
var glMultiDrawRangeElementArrayAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Size>?, OpenGL.Size) -> () = _load_glMultiDrawRangeElementArrayAPPLE
static 
var glMultiModeDrawArraysIBM:@convention(c) (UnsafePointer<OpenGL.Enum>?, UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Size>?, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiModeDrawArraysIBM
static 
var glMultiModeDrawElementsIBM:@convention(c) (UnsafePointer<OpenGL.Enum>?, UnsafePointer<OpenGL.Size>?, OpenGL.Enum, UnsafePointer<UnsafeRawPointer?>?, OpenGL.Size, OpenGL.Int) -> () = _load_glMultiModeDrawElementsIBM
static 
var glMultiTexBufferEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexBufferEXT
static 
var glMultiTexCoord1bOES:@convention(c) (OpenGL.Enum, OpenGL.Byte) -> () = _load_glMultiTexCoord1bOES
static 
var glMultiTexCoord1bvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Byte>?) -> () = _load_glMultiTexCoord1bvOES
static 
var glMultiTexCoord1d:@convention(c) (OpenGL.Enum, OpenGL.Double) -> () = _load_glMultiTexCoord1d
static 
var glMultiTexCoord1dARB:@convention(c) (OpenGL.Enum, OpenGL.Double) -> () = _load_glMultiTexCoord1dARB
static 
var glMultiTexCoord1dv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord1dv
static 
var glMultiTexCoord1dvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord1dvARB
static 
var glMultiTexCoord1f:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glMultiTexCoord1f
static 
var glMultiTexCoord1fARB:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glMultiTexCoord1fARB
static 
var glMultiTexCoord1fv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord1fv
static 
var glMultiTexCoord1fvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord1fvARB
static 
var glMultiTexCoord1hNV:@convention(c) (OpenGL.Enum, OpenGL.HalfNV) -> () = _load_glMultiTexCoord1hNV
static 
var glMultiTexCoord1hvNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glMultiTexCoord1hvNV
static 
var glMultiTexCoord1i:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glMultiTexCoord1i
static 
var glMultiTexCoord1iARB:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glMultiTexCoord1iARB
static 
var glMultiTexCoord1iv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord1iv
static 
var glMultiTexCoord1ivARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord1ivARB
static 
var glMultiTexCoord1s:@convention(c) (OpenGL.Enum, OpenGL.Short) -> () = _load_glMultiTexCoord1s
static 
var glMultiTexCoord1sARB:@convention(c) (OpenGL.Enum, OpenGL.Short) -> () = _load_glMultiTexCoord1sARB
static 
var glMultiTexCoord1sv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord1sv
static 
var glMultiTexCoord1svARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord1svARB
static 
var glMultiTexCoord1xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glMultiTexCoord1xOES
static 
var glMultiTexCoord1xvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultiTexCoord1xvOES
static 
var glMultiTexCoord2bOES:@convention(c) (OpenGL.Enum, OpenGL.Byte, OpenGL.Byte) -> () = _load_glMultiTexCoord2bOES
static 
var glMultiTexCoord2bvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Byte>?) -> () = _load_glMultiTexCoord2bvOES
static 
var glMultiTexCoord2d:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord2d
static 
var glMultiTexCoord2dARB:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord2dARB
static 
var glMultiTexCoord2dv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord2dv
static 
var glMultiTexCoord2dvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord2dvARB
static 
var glMultiTexCoord2f:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord2f
static 
var glMultiTexCoord2fARB:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord2fARB
static 
var glMultiTexCoord2fv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord2fv
static 
var glMultiTexCoord2fvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord2fvARB
static 
var glMultiTexCoord2hNV:@convention(c) (OpenGL.Enum, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glMultiTexCoord2hNV
static 
var glMultiTexCoord2hvNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glMultiTexCoord2hvNV
static 
var glMultiTexCoord2i:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord2i
static 
var glMultiTexCoord2iARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord2iARB
static 
var glMultiTexCoord2iv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord2iv
static 
var glMultiTexCoord2ivARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord2ivARB
static 
var glMultiTexCoord2s:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord2s
static 
var glMultiTexCoord2sARB:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord2sARB
static 
var glMultiTexCoord2sv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord2sv
static 
var glMultiTexCoord2svARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord2svARB
static 
var glMultiTexCoord2xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMultiTexCoord2xOES
static 
var glMultiTexCoord2xvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultiTexCoord2xvOES
static 
var glMultiTexCoord3bOES:@convention(c) (OpenGL.Enum, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glMultiTexCoord3bOES
static 
var glMultiTexCoord3bvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Byte>?) -> () = _load_glMultiTexCoord3bvOES
static 
var glMultiTexCoord3d:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord3d
static 
var glMultiTexCoord3dARB:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord3dARB
static 
var glMultiTexCoord3dv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord3dv
static 
var glMultiTexCoord3dvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord3dvARB
static 
var glMultiTexCoord3f:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord3f
static 
var glMultiTexCoord3fARB:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord3fARB
static 
var glMultiTexCoord3fv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord3fv
static 
var glMultiTexCoord3fvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord3fvARB
static 
var glMultiTexCoord3hNV:@convention(c) (OpenGL.Enum, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glMultiTexCoord3hNV
static 
var glMultiTexCoord3hvNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glMultiTexCoord3hvNV
static 
var glMultiTexCoord3i:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord3i
static 
var glMultiTexCoord3iARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord3iARB
static 
var glMultiTexCoord3iv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord3iv
static 
var glMultiTexCoord3ivARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord3ivARB
static 
var glMultiTexCoord3s:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord3s
static 
var glMultiTexCoord3sARB:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord3sARB
static 
var glMultiTexCoord3sv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord3sv
static 
var glMultiTexCoord3svARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord3svARB
static 
var glMultiTexCoord3xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMultiTexCoord3xOES
static 
var glMultiTexCoord3xvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultiTexCoord3xvOES
static 
var glMultiTexCoord4bOES:@convention(c) (OpenGL.Enum, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glMultiTexCoord4bOES
static 
var glMultiTexCoord4bvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Byte>?) -> () = _load_glMultiTexCoord4bvOES
static 
var glMultiTexCoord4d:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord4d
static 
var glMultiTexCoord4dARB:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glMultiTexCoord4dARB
static 
var glMultiTexCoord4dv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord4dv
static 
var glMultiTexCoord4dvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexCoord4dvARB
static 
var glMultiTexCoord4f:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord4f
static 
var glMultiTexCoord4fARB:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glMultiTexCoord4fARB
static 
var glMultiTexCoord4fv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord4fv
static 
var glMultiTexCoord4fvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexCoord4fvARB
static 
var glMultiTexCoord4hNV:@convention(c) (OpenGL.Enum, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glMultiTexCoord4hNV
static 
var glMultiTexCoord4hvNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glMultiTexCoord4hvNV
static 
var glMultiTexCoord4i:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord4i
static 
var glMultiTexCoord4iARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glMultiTexCoord4iARB
static 
var glMultiTexCoord4iv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord4iv
static 
var glMultiTexCoord4ivARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexCoord4ivARB
static 
var glMultiTexCoord4s:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord4s
static 
var glMultiTexCoord4sARB:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glMultiTexCoord4sARB
static 
var glMultiTexCoord4sv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord4sv
static 
var glMultiTexCoord4svARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glMultiTexCoord4svARB
static 
var glMultiTexCoord4x:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMultiTexCoord4x
static 
var glMultiTexCoord4xOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glMultiTexCoord4xOES
static 
var glMultiTexCoord4xvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glMultiTexCoord4xvOES
static 
var glMultiTexCoordP1ui:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexCoordP1ui
static 
var glMultiTexCoordP1uiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMultiTexCoordP1uiv
static 
var glMultiTexCoordP2ui:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexCoordP2ui
static 
var glMultiTexCoordP2uiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMultiTexCoordP2uiv
static 
var glMultiTexCoordP3ui:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexCoordP3ui
static 
var glMultiTexCoordP3uiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMultiTexCoordP3uiv
static 
var glMultiTexCoordP4ui:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexCoordP4ui
static 
var glMultiTexCoordP4uiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMultiTexCoordP4uiv
static 
var glMultiTexCoordPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glMultiTexCoordPointerEXT
static 
var glMultiTexEnvfEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glMultiTexEnvfEXT
static 
var glMultiTexEnvfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexEnvfvEXT
static 
var glMultiTexEnviEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glMultiTexEnviEXT
static 
var glMultiTexEnvivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexEnvivEXT
static 
var glMultiTexGendEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Double) -> () = _load_glMultiTexGendEXT
static 
var glMultiTexGendvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glMultiTexGendvEXT
static 
var glMultiTexGenfEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glMultiTexGenfEXT
static 
var glMultiTexGenfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexGenfvEXT
static 
var glMultiTexGeniEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glMultiTexGeniEXT
static 
var glMultiTexGenivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexGenivEXT
static 
var glMultiTexImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexImage1DEXT
static 
var glMultiTexImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexImage2DEXT
static 
var glMultiTexImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexImage3DEXT
static 
var glMultiTexParameterIivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexParameterIivEXT
static 
var glMultiTexParameterIuivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glMultiTexParameterIuivEXT
static 
var glMultiTexParameterfEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glMultiTexParameterfEXT
static 
var glMultiTexParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glMultiTexParameterfvEXT
static 
var glMultiTexParameteriEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glMultiTexParameteriEXT
static 
var glMultiTexParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glMultiTexParameterivEXT
static 
var glMultiTexRenderbufferEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glMultiTexRenderbufferEXT
static 
var glMultiTexSubImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexSubImage1DEXT
static 
var glMultiTexSubImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexSubImage2DEXT
static 
var glMultiTexSubImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glMultiTexSubImage3DEXT
static 
var glNamedBufferData:@convention(c) (OpenGL.UInt, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Enum) -> () = _load_glNamedBufferData
static 
var glNamedBufferDataEXT:@convention(c) (OpenGL.UInt, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Enum) -> () = _load_glNamedBufferDataEXT
static 
var glNamedBufferPageCommitmentARB:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bool) -> () = _load_glNamedBufferPageCommitmentARB
static 
var glNamedBufferPageCommitmentEXT:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, OpenGL.Bool) -> () = _load_glNamedBufferPageCommitmentEXT
static 
var glNamedBufferStorage:@convention(c) (OpenGL.UInt, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Bitfield) -> () = _load_glNamedBufferStorage
static 
var glNamedBufferStorageEXT:@convention(c) (OpenGL.UInt, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Bitfield) -> () = _load_glNamedBufferStorageEXT
static 
var glNamedBufferSubData:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeRawPointer?) -> () = _load_glNamedBufferSubData
static 
var glNamedBufferSubDataEXT:@convention(c) (OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer, UnsafeRawPointer?) -> () = _load_glNamedBufferSubDataEXT
static 
var glNamedCopyBufferSubDataEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glNamedCopyBufferSubDataEXT
static 
var glNamedFramebufferDrawBuffer:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glNamedFramebufferDrawBuffer
static 
var glNamedFramebufferDrawBuffers:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Enum>?) -> () = _load_glNamedFramebufferDrawBuffers
static 
var glNamedFramebufferParameteri:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glNamedFramebufferParameteri
static 
var glNamedFramebufferParameteriEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glNamedFramebufferParameteriEXT
static 
var glNamedFramebufferReadBuffer:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glNamedFramebufferReadBuffer
static 
var glNamedFramebufferRenderbuffer:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glNamedFramebufferRenderbuffer
static 
var glNamedFramebufferRenderbufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glNamedFramebufferRenderbufferEXT
static 
var glNamedFramebufferSampleLocationsfvARB:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glNamedFramebufferSampleLocationsfvARB
static 
var glNamedFramebufferSampleLocationsfvNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glNamedFramebufferSampleLocationsfvNV
static 
var glNamedFramebufferTexture:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glNamedFramebufferTexture
static 
var glNamedFramebufferTexture1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glNamedFramebufferTexture1DEXT
static 
var glNamedFramebufferTexture2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glNamedFramebufferTexture2DEXT
static 
var glNamedFramebufferTexture3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glNamedFramebufferTexture3DEXT
static 
var glNamedFramebufferTextureEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int) -> () = _load_glNamedFramebufferTextureEXT
static 
var glNamedFramebufferTextureFaceEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Enum) -> () = _load_glNamedFramebufferTextureFaceEXT
static 
var glNamedFramebufferTextureLayer:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glNamedFramebufferTextureLayer
static 
var glNamedFramebufferTextureLayerEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glNamedFramebufferTextureLayerEXT
static 
var glNamedProgramLocalParameter4dEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glNamedProgramLocalParameter4dEXT
static 
var glNamedProgramLocalParameter4dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glNamedProgramLocalParameter4dvEXT
static 
var glNamedProgramLocalParameter4fEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glNamedProgramLocalParameter4fEXT
static 
var glNamedProgramLocalParameter4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glNamedProgramLocalParameter4fvEXT
static 
var glNamedProgramLocalParameterI4iEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glNamedProgramLocalParameterI4iEXT
static 
var glNamedProgramLocalParameterI4ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glNamedProgramLocalParameterI4ivEXT
static 
var glNamedProgramLocalParameterI4uiEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glNamedProgramLocalParameterI4uiEXT
static 
var glNamedProgramLocalParameterI4uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glNamedProgramLocalParameterI4uivEXT
static 
var glNamedProgramLocalParameters4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glNamedProgramLocalParameters4fvEXT
static 
var glNamedProgramLocalParametersI4ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glNamedProgramLocalParametersI4ivEXT
static 
var glNamedProgramLocalParametersI4uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glNamedProgramLocalParametersI4uivEXT
static 
var glNamedProgramStringEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glNamedProgramStringEXT
static 
var glNamedRenderbufferStorage:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glNamedRenderbufferStorage
static 
var glNamedRenderbufferStorageEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glNamedRenderbufferStorageEXT
static 
var glNamedRenderbufferStorageMultisample:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glNamedRenderbufferStorageMultisample
static 
var glNamedRenderbufferStorageMultisampleCoverageEXT:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glNamedRenderbufferStorageMultisampleCoverageEXT
static 
var glNamedRenderbufferStorageMultisampleEXT:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glNamedRenderbufferStorageMultisampleEXT
static 
var glNamedStringARB:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Char>?, OpenGL.Int, UnsafePointer<OpenGL.Char>?) -> () = _load_glNamedStringARB
static 
var glNewList:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glNewList
static 
var glNewObjectBufferATI:@convention(c) (OpenGL.Size, UnsafeRawPointer?, OpenGL.Enum) -> OpenGL.UInt = _load_glNewObjectBufferATI
static 
var glNormal3b:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glNormal3b
static 
var glNormal3bv:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glNormal3bv
static 
var glNormal3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glNormal3d
static 
var glNormal3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glNormal3dv
static 
var glNormal3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glNormal3f
static 
var glNormal3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glNormal3fVertex3fSUN
static 
var glNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glNormal3fVertex3fvSUN
static 
var glNormal3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glNormal3fv
static 
var glNormal3hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glNormal3hNV
static 
var glNormal3hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glNormal3hvNV
static 
var glNormal3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glNormal3i
static 
var glNormal3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glNormal3iv
static 
var glNormal3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glNormal3s
static 
var glNormal3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glNormal3sv
static 
var glNormal3x:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glNormal3x
static 
var glNormal3xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glNormal3xOES
static 
var glNormal3xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glNormal3xvOES
static 
var glNormalFormatNV:@convention(c) (OpenGL.Enum, OpenGL.Size) -> () = _load_glNormalFormatNV
static 
var glNormalP3ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glNormalP3ui
static 
var glNormalP3uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glNormalP3uiv
static 
var glNormalPointer:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glNormalPointer
static 
var glNormalPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glNormalPointerEXT
static 
var glNormalPointerListIBM:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glNormalPointerListIBM
static 
var glNormalPointervINTEL:@convention(c) (OpenGL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = _load_glNormalPointervINTEL
static 
var glNormalStream3bATI:@convention(c) (OpenGL.Enum, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glNormalStream3bATI
static 
var glNormalStream3bvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Byte>?) -> () = _load_glNormalStream3bvATI
static 
var glNormalStream3dATI:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glNormalStream3dATI
static 
var glNormalStream3dvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glNormalStream3dvATI
static 
var glNormalStream3fATI:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glNormalStream3fATI
static 
var glNormalStream3fvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glNormalStream3fvATI
static 
var glNormalStream3iATI:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glNormalStream3iATI
static 
var glNormalStream3ivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glNormalStream3ivATI
static 
var glNormalStream3sATI:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glNormalStream3sATI
static 
var glNormalStream3svATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glNormalStream3svATI
static 
var glObjectLabel:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glObjectLabel
static 
var glObjectLabelKHR:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glObjectLabelKHR
static 
var glObjectPtrLabel:@convention(c) (UnsafeRawPointer?, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glObjectPtrLabel
static 
var glObjectPtrLabelKHR:@convention(c) (UnsafeRawPointer?, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glObjectPtrLabelKHR
static 
var glObjectPurgeableAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum) -> OpenGL.Enum = _load_glObjectPurgeableAPPLE
static 
var glObjectUnpurgeableAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum) -> OpenGL.Enum = _load_glObjectUnpurgeableAPPLE
static 
var glOrtho:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glOrtho
static 
var glOrthof:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glOrthof
static 
var glOrthofOES:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glOrthofOES
static 
var glOrthox:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glOrthox
static 
var glOrthoxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glOrthoxOES
static 
var glPNTrianglesfATI:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPNTrianglesfATI
static 
var glPNTrianglesiATI:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPNTrianglesiATI
static 
var glPassTexCoordATI:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum) -> () = _load_glPassTexCoordATI
static 
var glPassThrough:@convention(c) (OpenGL.Float) -> () = _load_glPassThrough
static 
var glPassThroughxOES:@convention(c) (OpenGL.Fixed) -> () = _load_glPassThroughxOES
static 
var glPatchParameterfv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPatchParameterfv
static 
var glPatchParameteri:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPatchParameteri
static 
var glPatchParameteriEXT:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPatchParameteriEXT
static 
var glPatchParameteriOES:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPatchParameteriOES
static 
var glPathColorGenNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPathColorGenNV
static 
var glPathCommandsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glPathCommandsNV
static 
var glPathCoordsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glPathCoordsNV
static 
var glPathCoverDepthFuncNV:@convention(c) (OpenGL.Enum) -> () = _load_glPathCoverDepthFuncNV
static 
var glPathDashArrayNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glPathDashArrayNV
static 
var glPathFogGenNV:@convention(c) (OpenGL.Enum) -> () = _load_glPathFogGenNV
static 
var glPathGlyphIndexArrayNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Bitfield, OpenGL.UInt, OpenGL.Size, OpenGL.UInt, OpenGL.Float) -> OpenGL.Enum = _load_glPathGlyphIndexArrayNV
static 
var glPathGlyphIndexRangeNV:@convention(c) (OpenGL.Enum, UnsafeRawPointer?, OpenGL.Bitfield, OpenGL.UInt, OpenGL.Float, UnsafePointer<OpenGL.UInt>?) -> OpenGL.Enum = _load_glPathGlyphIndexRangeNV
static 
var glPathGlyphRangeNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Bitfield, OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.UInt, OpenGL.Float) -> () = _load_glPathGlyphRangeNV
static 
var glPathGlyphsNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Bitfield, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Enum, OpenGL.UInt, OpenGL.Float) -> () = _load_glPathGlyphsNV
static 
var glPathMemoryGlyphIndexArrayNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.SizePointer, UnsafeRawPointer?, OpenGL.Size, OpenGL.UInt, OpenGL.Size, OpenGL.UInt, OpenGL.Float) -> OpenGL.Enum = _load_glPathMemoryGlyphIndexArrayNV
static 
var glPathParameterfNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Float) -> () = _load_glPathParameterfNV
static 
var glPathParameterfvNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPathParameterfvNV
static 
var glPathParameteriNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glPathParameteriNV
static 
var glPathParameterivNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glPathParameterivNV
static 
var glPathStencilDepthOffsetNV:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glPathStencilDepthOffsetNV
static 
var glPathStencilFuncNV:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.UInt) -> () = _load_glPathStencilFuncNV
static 
var glPathStringNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glPathStringNV
static 
var glPathSubCommandsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Size, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glPathSubCommandsNV
static 
var glPathSubCoordsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glPathSubCoordsNV
static 
var glPathTexGenNV:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glPathTexGenNV
static 
var glPauseTransformFeedback:@convention(c) () -> () = _load_glPauseTransformFeedback
static 
var glPauseTransformFeedbackNV:@convention(c) () -> () = _load_glPauseTransformFeedbackNV
static 
var glPixelDataRangeNV:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glPixelDataRangeNV
static 
var glPixelMapfv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glPixelMapfv
static 
var glPixelMapuiv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glPixelMapuiv
static 
var glPixelMapusv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UShort>?) -> () = _load_glPixelMapusv
static 
var glPixelMapx:@convention(c) (OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glPixelMapx
static 
var glPixelStoref:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPixelStoref
static 
var glPixelStorei:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPixelStorei
static 
var glPixelStorex:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glPixelStorex
static 
var glPixelTexGenParameterfSGIS:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPixelTexGenParameterfSGIS
static 
var glPixelTexGenParameterfvSGIS:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPixelTexGenParameterfvSGIS
static 
var glPixelTexGenParameteriSGIS:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPixelTexGenParameteriSGIS
static 
var glPixelTexGenParameterivSGIS:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glPixelTexGenParameterivSGIS
static 
var glPixelTexGenSGIX:@convention(c) (OpenGL.Enum) -> () = _load_glPixelTexGenSGIX
static 
var glPixelTransferf:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPixelTransferf
static 
var glPixelTransferi:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPixelTransferi
static 
var glPixelTransferxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glPixelTransferxOES
static 
var glPixelTransformParameterfEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glPixelTransformParameterfEXT
static 
var glPixelTransformParameterfvEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPixelTransformParameterfvEXT
static 
var glPixelTransformParameteriEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glPixelTransformParameteriEXT
static 
var glPixelTransformParameterivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glPixelTransformParameterivEXT
static 
var glPixelZoom:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glPixelZoom
static 
var glPixelZoomxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glPixelZoomxOES
static 
var glPointAlongPathNV:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Size, OpenGL.Float, UnsafeMutablePointer<OpenGL.Float>?, UnsafeMutablePointer<OpenGL.Float>?, UnsafeMutablePointer<OpenGL.Float>?, UnsafeMutablePointer<OpenGL.Float>?) -> OpenGL.Bool = _load_glPointAlongPathNV
static 
var glPointParameterf:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPointParameterf
static 
var glPointParameterfARB:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPointParameterfARB
static 
var glPointParameterfEXT:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPointParameterfEXT
static 
var glPointParameterfSGIS:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glPointParameterfSGIS
static 
var glPointParameterfv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPointParameterfv
static 
var glPointParameterfvARB:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPointParameterfvARB
static 
var glPointParameterfvEXT:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPointParameterfvEXT
static 
var glPointParameterfvSGIS:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glPointParameterfvSGIS
static 
var glPointParameteri:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPointParameteri
static 
var glPointParameteriNV:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glPointParameteriNV
static 
var glPointParameteriv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glPointParameteriv
static 
var glPointParameterivNV:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glPointParameterivNV
static 
var glPointParameterx:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glPointParameterx
static 
var glPointParameterxOES:@convention(c) (OpenGL.Enum, OpenGL.Fixed) -> () = _load_glPointParameterxOES
static 
var glPointParameterxv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glPointParameterxv
static 
var glPointParameterxvOES:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glPointParameterxvOES
static 
var glPointSize:@convention(c) (OpenGL.Float) -> () = _load_glPointSize
static 
var glPointSizePointerOES:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glPointSizePointerOES
static 
var glPointSizex:@convention(c) (OpenGL.Fixed) -> () = _load_glPointSizex
static 
var glPointSizexOES:@convention(c) (OpenGL.Fixed) -> () = _load_glPointSizexOES
static 
var glPollAsyncSGIX:@convention(c) (UnsafeMutablePointer<OpenGL.UInt>?) -> OpenGL.Int = _load_glPollAsyncSGIX
static 
var glPollInstrumentsSGIX:@convention(c) (UnsafeMutablePointer<OpenGL.Int>?) -> OpenGL.Int = _load_glPollInstrumentsSGIX
static 
var glPolygonMode:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glPolygonMode
static 
var glPolygonModeNV:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glPolygonModeNV
static 
var glPolygonOffset:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glPolygonOffset
static 
var glPolygonOffsetClampEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glPolygonOffsetClampEXT
static 
var glPolygonOffsetEXT:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glPolygonOffsetEXT
static 
var glPolygonOffsetx:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glPolygonOffsetx
static 
var glPolygonOffsetxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glPolygonOffsetxOES
static 
var glPolygonStipple:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glPolygonStipple
static 
var glPopAttrib:@convention(c) () -> () = _load_glPopAttrib
static 
var glPopClientAttrib:@convention(c) () -> () = _load_glPopClientAttrib
static 
var glPopDebugGroup:@convention(c) () -> () = _load_glPopDebugGroup
static 
var glPopDebugGroupKHR:@convention(c) () -> () = _load_glPopDebugGroupKHR
static 
var glPopGroupMarkerEXT:@convention(c) () -> () = _load_glPopGroupMarkerEXT
static 
var glPopMatrix:@convention(c) () -> () = _load_glPopMatrix
static 
var glPopName:@convention(c) () -> () = _load_glPopName
static 
var glPresentFrameDualFillNV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt) -> () = _load_glPresentFrameDualFillNV
static 
var glPresentFrameKeyedNV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glPresentFrameKeyedNV
static 
var glPrimitiveBoundingBox:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glPrimitiveBoundingBox
static 
var glPrimitiveBoundingBoxARB:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glPrimitiveBoundingBoxARB
static 
var glPrimitiveBoundingBoxEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glPrimitiveBoundingBoxEXT
static 
var glPrimitiveBoundingBoxOES:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glPrimitiveBoundingBoxOES
static 
var glPrimitiveRestartIndex:@convention(c) (OpenGL.UInt) -> () = _load_glPrimitiveRestartIndex
static 
var glPrimitiveRestartIndexNV:@convention(c) (OpenGL.UInt) -> () = _load_glPrimitiveRestartIndexNV
static 
var glPrimitiveRestartNV:@convention(c) () -> () = _load_glPrimitiveRestartNV
static 
var glPrioritizeTextures:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glPrioritizeTextures
static 
var glPrioritizeTexturesEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.ClampFloat>?) -> () = _load_glPrioritizeTexturesEXT
static 
var glPrioritizeTexturesxOES:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glPrioritizeTexturesxOES
static 
var glProgramBinary:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glProgramBinary
static 
var glProgramBinaryOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Int) -> () = _load_glProgramBinaryOES
static 
var glProgramBufferParametersIivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramBufferParametersIivNV
static 
var glProgramBufferParametersIuivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramBufferParametersIuivNV
static 
var glProgramBufferParametersfvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramBufferParametersfvNV
static 
var glProgramEnvParameter4dARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramEnvParameter4dARB
static 
var glProgramEnvParameter4dvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramEnvParameter4dvARB
static 
var glProgramEnvParameter4fARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramEnvParameter4fARB
static 
var glProgramEnvParameter4fvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramEnvParameter4fvARB
static 
var glProgramEnvParameterI4iNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramEnvParameterI4iNV
static 
var glProgramEnvParameterI4ivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramEnvParameterI4ivNV
static 
var glProgramEnvParameterI4uiNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramEnvParameterI4uiNV
static 
var glProgramEnvParameterI4uivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramEnvParameterI4uivNV
static 
var glProgramEnvParameters4fvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramEnvParameters4fvEXT
static 
var glProgramEnvParametersI4ivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramEnvParametersI4ivNV
static 
var glProgramEnvParametersI4uivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramEnvParametersI4uivNV
static 
var glProgramLocalParameter4dARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramLocalParameter4dARB
static 
var glProgramLocalParameter4dvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramLocalParameter4dvARB
static 
var glProgramLocalParameter4fARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramLocalParameter4fARB
static 
var glProgramLocalParameter4fvARB:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramLocalParameter4fvARB
static 
var glProgramLocalParameterI4iNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramLocalParameterI4iNV
static 
var glProgramLocalParameterI4ivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramLocalParameterI4ivNV
static 
var glProgramLocalParameterI4uiNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramLocalParameterI4uiNV
static 
var glProgramLocalParameterI4uivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramLocalParameterI4uivNV
static 
var glProgramLocalParameters4fvEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramLocalParameters4fvEXT
static 
var glProgramLocalParametersI4ivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramLocalParametersI4ivNV
static 
var glProgramLocalParametersI4uivNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramLocalParametersI4uivNV
static 
var glProgramNamedParameter4dNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramNamedParameter4dNV
static 
var glProgramNamedParameter4dvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramNamedParameter4dvNV
static 
var glProgramNamedParameter4fNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramNamedParameter4fNV
static 
var glProgramNamedParameter4fvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramNamedParameter4fvNV
static 
var glProgramParameter4dNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramParameter4dNV
static 
var glProgramParameter4dvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramParameter4dvNV
static 
var glProgramParameter4fNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramParameter4fNV
static 
var glProgramParameter4fvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramParameter4fvNV
static 
var glProgramParameteri:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glProgramParameteri
static 
var glProgramParameteriARB:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glProgramParameteriARB
static 
var glProgramParameteriEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glProgramParameteriEXT
static 
var glProgramParameters4dvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramParameters4dvNV
static 
var glProgramParameters4fvNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramParameters4fvNV
static 
var glProgramPathFragmentInputGenNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramPathFragmentInputGenNV
static 
var glProgramStringARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glProgramStringARB
static 
var glProgramSubroutineParametersuivNV:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramSubroutineParametersuivNV
static 
var glProgramUniform1d:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double) -> () = _load_glProgramUniform1d
static 
var glProgramUniform1dEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double) -> () = _load_glProgramUniform1dEXT
static 
var glProgramUniform1dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform1dv
static 
var glProgramUniform1dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform1dvEXT
static 
var glProgramUniform1f:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float) -> () = _load_glProgramUniform1f
static 
var glProgramUniform1fEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float) -> () = _load_glProgramUniform1fEXT
static 
var glProgramUniform1fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform1fv
static 
var glProgramUniform1fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform1fvEXT
static 
var glProgramUniform1i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform1i
static 
var glProgramUniform1i64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64) -> () = _load_glProgramUniform1i64ARB
static 
var glProgramUniform1i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64EXT) -> () = _load_glProgramUniform1i64NV
static 
var glProgramUniform1i64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glProgramUniform1i64vARB
static 
var glProgramUniform1i64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glProgramUniform1i64vNV
static 
var glProgramUniform1iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform1iEXT
static 
var glProgramUniform1iv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform1iv
static 
var glProgramUniform1ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform1ivEXT
static 
var glProgramUniform1ui:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt) -> () = _load_glProgramUniform1ui
static 
var glProgramUniform1ui64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64) -> () = _load_glProgramUniform1ui64ARB
static 
var glProgramUniform1ui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64EXT) -> () = _load_glProgramUniform1ui64NV
static 
var glProgramUniform1ui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniform1ui64vARB
static 
var glProgramUniform1ui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glProgramUniform1ui64vNV
static 
var glProgramUniform1uiEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt) -> () = _load_glProgramUniform1uiEXT
static 
var glProgramUniform1uiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform1uiv
static 
var glProgramUniform1uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform1uivEXT
static 
var glProgramUniform2d:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform2d
static 
var glProgramUniform2dEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform2dEXT
static 
var glProgramUniform2dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform2dv
static 
var glProgramUniform2dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform2dvEXT
static 
var glProgramUniform2f:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform2f
static 
var glProgramUniform2fEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform2fEXT
static 
var glProgramUniform2fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform2fv
static 
var glProgramUniform2fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform2fvEXT
static 
var glProgramUniform2i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform2i
static 
var glProgramUniform2i64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64, OpenGL.Int64) -> () = _load_glProgramUniform2i64ARB
static 
var glProgramUniform2i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glProgramUniform2i64NV
static 
var glProgramUniform2i64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glProgramUniform2i64vARB
static 
var glProgramUniform2i64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glProgramUniform2i64vNV
static 
var glProgramUniform2iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform2iEXT
static 
var glProgramUniform2iv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform2iv
static 
var glProgramUniform2ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform2ivEXT
static 
var glProgramUniform2ui:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform2ui
static 
var glProgramUniform2ui64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glProgramUniform2ui64ARB
static 
var glProgramUniform2ui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glProgramUniform2ui64NV
static 
var glProgramUniform2ui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniform2ui64vARB
static 
var glProgramUniform2ui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glProgramUniform2ui64vNV
static 
var glProgramUniform2uiEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform2uiEXT
static 
var glProgramUniform2uiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform2uiv
static 
var glProgramUniform2uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform2uivEXT
static 
var glProgramUniform3d:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform3d
static 
var glProgramUniform3dEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform3dEXT
static 
var glProgramUniform3dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform3dv
static 
var glProgramUniform3dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform3dvEXT
static 
var glProgramUniform3f:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform3f
static 
var glProgramUniform3fEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform3fEXT
static 
var glProgramUniform3fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform3fv
static 
var glProgramUniform3fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform3fvEXT
static 
var glProgramUniform3i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform3i
static 
var glProgramUniform3i64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64) -> () = _load_glProgramUniform3i64ARB
static 
var glProgramUniform3i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glProgramUniform3i64NV
static 
var glProgramUniform3i64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glProgramUniform3i64vARB
static 
var glProgramUniform3i64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glProgramUniform3i64vNV
static 
var glProgramUniform3iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform3iEXT
static 
var glProgramUniform3iv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform3iv
static 
var glProgramUniform3ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform3ivEXT
static 
var glProgramUniform3ui:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform3ui
static 
var glProgramUniform3ui64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glProgramUniform3ui64ARB
static 
var glProgramUniform3ui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glProgramUniform3ui64NV
static 
var glProgramUniform3ui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniform3ui64vARB
static 
var glProgramUniform3ui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glProgramUniform3ui64vNV
static 
var glProgramUniform3uiEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform3uiEXT
static 
var glProgramUniform3uiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform3uiv
static 
var glProgramUniform3uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform3uivEXT
static 
var glProgramUniform4d:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform4d
static 
var glProgramUniform4dEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glProgramUniform4dEXT
static 
var glProgramUniform4dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform4dv
static 
var glProgramUniform4dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniform4dvEXT
static 
var glProgramUniform4f:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform4f
static 
var glProgramUniform4fEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glProgramUniform4fEXT
static 
var glProgramUniform4fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform4fv
static 
var glProgramUniform4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniform4fvEXT
static 
var glProgramUniform4i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform4i
static 
var glProgramUniform4i64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64) -> () = _load_glProgramUniform4i64ARB
static 
var glProgramUniform4i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glProgramUniform4i64NV
static 
var glProgramUniform4i64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glProgramUniform4i64vARB
static 
var glProgramUniform4i64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glProgramUniform4i64vNV
static 
var glProgramUniform4iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glProgramUniform4iEXT
static 
var glProgramUniform4iv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform4iv
static 
var glProgramUniform4ivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glProgramUniform4ivEXT
static 
var glProgramUniform4ui:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform4ui
static 
var glProgramUniform4ui64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glProgramUniform4ui64ARB
static 
var glProgramUniform4ui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glProgramUniform4ui64NV
static 
var glProgramUniform4ui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniform4ui64vARB
static 
var glProgramUniform4ui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glProgramUniform4ui64vNV
static 
var glProgramUniform4uiEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glProgramUniform4uiEXT
static 
var glProgramUniform4uiv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform4uiv
static 
var glProgramUniform4uivEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glProgramUniform4uivEXT
static 
var glProgramUniformHandleui64ARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64) -> () = _load_glProgramUniformHandleui64ARB
static 
var glProgramUniformHandleui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64) -> () = _load_glProgramUniformHandleui64NV
static 
var glProgramUniformHandleui64vARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniformHandleui64vARB
static 
var glProgramUniformHandleui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glProgramUniformHandleui64vNV
static 
var glProgramUniformMatrix2dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2dv
static 
var glProgramUniformMatrix2dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2dvEXT
static 
var glProgramUniformMatrix2fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2fv
static 
var glProgramUniformMatrix2fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2fvEXT
static 
var glProgramUniformMatrix2x3dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2x3dv
static 
var glProgramUniformMatrix2x3dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2x3dvEXT
static 
var glProgramUniformMatrix2x3fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2x3fv
static 
var glProgramUniformMatrix2x3fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2x3fvEXT
static 
var glProgramUniformMatrix2x4dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2x4dv
static 
var glProgramUniformMatrix2x4dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix2x4dvEXT
static 
var glProgramUniformMatrix2x4fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2x4fv
static 
var glProgramUniformMatrix2x4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix2x4fvEXT
static 
var glProgramUniformMatrix3dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3dv
static 
var glProgramUniformMatrix3dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3dvEXT
static 
var glProgramUniformMatrix3fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3fv
static 
var glProgramUniformMatrix3fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3fvEXT
static 
var glProgramUniformMatrix3x2dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3x2dv
static 
var glProgramUniformMatrix3x2dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3x2dvEXT
static 
var glProgramUniformMatrix3x2fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3x2fv
static 
var glProgramUniformMatrix3x2fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3x2fvEXT
static 
var glProgramUniformMatrix3x4dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3x4dv
static 
var glProgramUniformMatrix3x4dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix3x4dvEXT
static 
var glProgramUniformMatrix3x4fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3x4fv
static 
var glProgramUniformMatrix3x4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix3x4fvEXT
static 
var glProgramUniformMatrix4dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4dv
static 
var glProgramUniformMatrix4dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4dvEXT
static 
var glProgramUniformMatrix4fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4fv
static 
var glProgramUniformMatrix4fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4fvEXT
static 
var glProgramUniformMatrix4x2dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4x2dv
static 
var glProgramUniformMatrix4x2dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4x2dvEXT
static 
var glProgramUniformMatrix4x2fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4x2fv
static 
var glProgramUniformMatrix4x2fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4x2fvEXT
static 
var glProgramUniformMatrix4x3dv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4x3dv
static 
var glProgramUniformMatrix4x3dvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glProgramUniformMatrix4x3dvEXT
static 
var glProgramUniformMatrix4x3fv:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4x3fv
static 
var glProgramUniformMatrix4x3fvEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glProgramUniformMatrix4x3fvEXT
static 
var glProgramUniformui64NV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt64EXT) -> () = _load_glProgramUniformui64NV
static 
var glProgramUniformui64vNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glProgramUniformui64vNV
static 
var glProgramVertexLimitNV:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glProgramVertexLimitNV
static 
var glProvokingVertex:@convention(c) (OpenGL.Enum) -> () = _load_glProvokingVertex
static 
var glProvokingVertexEXT:@convention(c) (OpenGL.Enum) -> () = _load_glProvokingVertexEXT
static 
var glPushAttrib:@convention(c) (OpenGL.Bitfield) -> () = _load_glPushAttrib
static 
var glPushClientAttrib:@convention(c) (OpenGL.Bitfield) -> () = _load_glPushClientAttrib
static 
var glPushClientAttribDefaultEXT:@convention(c) (OpenGL.Bitfield) -> () = _load_glPushClientAttribDefaultEXT
static 
var glPushDebugGroup:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glPushDebugGroup
static 
var glPushDebugGroupKHR:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glPushDebugGroupKHR
static 
var glPushGroupMarkerEXT:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Char>?) -> () = _load_glPushGroupMarkerEXT
static 
var glPushMatrix:@convention(c) () -> () = _load_glPushMatrix
static 
var glPushName:@convention(c) (OpenGL.UInt) -> () = _load_glPushName
static 
var glQueryCounter:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glQueryCounter
static 
var glQueryCounterEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glQueryCounterEXT
static 
var glQueryMatrixxOES:@convention(c) (UnsafeMutablePointer<OpenGL.Fixed>?, UnsafeMutablePointer<OpenGL.Int>?) -> OpenGL.Bitfield = _load_glQueryMatrixxOES
static 
var glQueryObjectParameteruiAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt) -> () = _load_glQueryObjectParameteruiAMD
static 
var glRasterPos2d:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glRasterPos2d
static 
var glRasterPos2dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glRasterPos2dv
static 
var glRasterPos2f:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glRasterPos2f
static 
var glRasterPos2fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glRasterPos2fv
static 
var glRasterPos2i:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glRasterPos2i
static 
var glRasterPos2iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glRasterPos2iv
static 
var glRasterPos2s:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glRasterPos2s
static 
var glRasterPos2sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glRasterPos2sv
static 
var glRasterPos2xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRasterPos2xOES
static 
var glRasterPos2xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glRasterPos2xvOES
static 
var glRasterPos3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glRasterPos3d
static 
var glRasterPos3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glRasterPos3dv
static 
var glRasterPos3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glRasterPos3f
static 
var glRasterPos3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glRasterPos3fv
static 
var glRasterPos3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glRasterPos3i
static 
var glRasterPos3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glRasterPos3iv
static 
var glRasterPos3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glRasterPos3s
static 
var glRasterPos3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glRasterPos3sv
static 
var glRasterPos3xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRasterPos3xOES
static 
var glRasterPos3xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glRasterPos3xvOES
static 
var glRasterPos4d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glRasterPos4d
static 
var glRasterPos4dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glRasterPos4dv
static 
var glRasterPos4f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glRasterPos4f
static 
var glRasterPos4fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glRasterPos4fv
static 
var glRasterPos4i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glRasterPos4i
static 
var glRasterPos4iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glRasterPos4iv
static 
var glRasterPos4s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glRasterPos4s
static 
var glRasterPos4sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glRasterPos4sv
static 
var glRasterPos4xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRasterPos4xOES
static 
var glRasterPos4xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glRasterPos4xvOES
static 
var glRasterSamplesEXT:@convention(c) (OpenGL.UInt, OpenGL.Bool) -> () = _load_glRasterSamplesEXT
static 
var glReadBuffer:@convention(c) (OpenGL.Enum) -> () = _load_glReadBuffer
static 
var glReadBufferIndexedEXT:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glReadBufferIndexedEXT
static 
var glReadBufferNV:@convention(c) (OpenGL.Enum) -> () = _load_glReadBufferNV
static 
var glReadInstrumentsSGIX:@convention(c) (OpenGL.Int) -> () = _load_glReadInstrumentsSGIX
static 
var glReadPixels:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeMutableRawPointer?) -> () = _load_glReadPixels
static 
var glReadnPixels:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glReadnPixels
static 
var glReadnPixelsARB:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glReadnPixelsARB
static 
var glReadnPixelsEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glReadnPixelsEXT
static 
var glReadnPixelsKHR:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glReadnPixelsKHR
static 
var glRectd:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glRectd
static 
var glRectdv:@convention(c) (UnsafePointer<OpenGL.Double>?, UnsafePointer<OpenGL.Double>?) -> () = _load_glRectdv
static 
var glRectf:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glRectf
static 
var glRectfv:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glRectfv
static 
var glRecti:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glRecti
static 
var glRectiv:@convention(c) (UnsafePointer<OpenGL.Int>?, UnsafePointer<OpenGL.Int>?) -> () = _load_glRectiv
static 
var glRects:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glRects
static 
var glRectsv:@convention(c) (UnsafePointer<OpenGL.Short>?, UnsafePointer<OpenGL.Short>?) -> () = _load_glRectsv
static 
var glRectxOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRectxOES
static 
var glRectxvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glRectxvOES
static 
var glReferencePlaneSGIX:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glReferencePlaneSGIX
static 
var glReleaseShaderCompiler:@convention(c) () -> () = _load_glReleaseShaderCompiler
static 
var glRenderMode:@convention(c) (OpenGL.Enum) -> OpenGL.Int = _load_glRenderMode
static 
var glRenderbufferStorage:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorage
static 
var glRenderbufferStorageEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageEXT
static 
var glRenderbufferStorageMultisample:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisample
static 
var glRenderbufferStorageMultisampleANGLE:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleANGLE
static 
var glRenderbufferStorageMultisampleAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleAPPLE
static 
var glRenderbufferStorageMultisampleCoverageNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleCoverageNV
static 
var glRenderbufferStorageMultisampleEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleEXT
static 
var glRenderbufferStorageMultisampleIMG:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleIMG
static 
var glRenderbufferStorageMultisampleNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageMultisampleNV
static 
var glRenderbufferStorageOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glRenderbufferStorageOES
static 
var glReplacementCodePointerSUN:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = _load_glReplacementCodePointerSUN
static 
var glReplacementCodeubSUN:@convention(c) (OpenGL.UByte) -> () = _load_glReplacementCodeubSUN
static 
var glReplacementCodeubvSUN:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glReplacementCodeubvSUN
static 
var glReplacementCodeuiColor3fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiColor3fVertex3fSUN
static 
var glReplacementCodeuiColor3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiColor3fVertex3fvSUN
static 
var glReplacementCodeuiColor4fNormal3fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiColor4fNormal3fVertex3fSUN
static 
var glReplacementCodeuiColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiColor4fNormal3fVertex3fvSUN
static 
var glReplacementCodeuiColor4ubVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiColor4ubVertex3fSUN
static 
var glReplacementCodeuiColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiColor4ubVertex3fvSUN
static 
var glReplacementCodeuiNormal3fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiNormal3fVertex3fSUN
static 
var glReplacementCodeuiNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiNormal3fVertex3fvSUN
static 
var glReplacementCodeuiSUN:@convention(c) (OpenGL.UInt) -> () = _load_glReplacementCodeuiSUN
static 
var glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
static 
var glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
static 
var glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
static 
var glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
static 
var glReplacementCodeuiTexCoord2fVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiTexCoord2fVertex3fSUN
static 
var glReplacementCodeuiTexCoord2fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiTexCoord2fVertex3fvSUN
static 
var glReplacementCodeuiVertex3fSUN:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glReplacementCodeuiVertex3fSUN
static 
var glReplacementCodeuiVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glReplacementCodeuiVertex3fvSUN
static 
var glReplacementCodeuivSUN:@convention(c) (UnsafePointer<OpenGL.UInt>?) -> () = _load_glReplacementCodeuivSUN
static 
var glReplacementCodeusSUN:@convention(c) (OpenGL.UShort) -> () = _load_glReplacementCodeusSUN
static 
var glReplacementCodeusvSUN:@convention(c) (UnsafePointer<OpenGL.UShort>?) -> () = _load_glReplacementCodeusvSUN
static 
var glRequestResidentProgramsNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glRequestResidentProgramsNV
static 
var glResetHistogram:@convention(c) (OpenGL.Enum) -> () = _load_glResetHistogram
static 
var glResetHistogramEXT:@convention(c) (OpenGL.Enum) -> () = _load_glResetHistogramEXT
static 
var glResetMinmax:@convention(c) (OpenGL.Enum) -> () = _load_glResetMinmax
static 
var glResetMinmaxEXT:@convention(c) (OpenGL.Enum) -> () = _load_glResetMinmaxEXT
static 
var glResizeBuffersMESA:@convention(c) () -> () = _load_glResizeBuffersMESA
static 
var glResolveDepthValuesNV:@convention(c) () -> () = _load_glResolveDepthValuesNV
static 
var glResolveMultisampleFramebufferAPPLE:@convention(c) () -> () = _load_glResolveMultisampleFramebufferAPPLE
static 
var glResumeTransformFeedback:@convention(c) () -> () = _load_glResumeTransformFeedback
static 
var glResumeTransformFeedbackNV:@convention(c) () -> () = _load_glResumeTransformFeedbackNV
static 
var glRotated:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glRotated
static 
var glRotatef:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glRotatef
static 
var glRotatex:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRotatex
static 
var glRotatexOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glRotatexOES
static 
var glSampleCoverage:@convention(c) (OpenGL.Float, OpenGL.Bool) -> () = _load_glSampleCoverage
static 
var glSampleCoverageARB:@convention(c) (OpenGL.Float, OpenGL.Bool) -> () = _load_glSampleCoverageARB
static 
var glSampleCoveragex:@convention(c) (OpenGL.ClampX, OpenGL.Bool) -> () = _load_glSampleCoveragex
static 
var glSampleCoveragexOES:@convention(c) (OpenGL.ClampX, OpenGL.Bool) -> () = _load_glSampleCoveragexOES
static 
var glSampleMapATI:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum) -> () = _load_glSampleMapATI
static 
var glSampleMaskEXT:@convention(c) (OpenGL.ClampFloat, OpenGL.Bool) -> () = _load_glSampleMaskEXT
static 
var glSampleMaskIndexedNV:@convention(c) (OpenGL.UInt, OpenGL.Bitfield) -> () = _load_glSampleMaskIndexedNV
static 
var glSampleMaskSGIS:@convention(c) (OpenGL.ClampFloat, OpenGL.Bool) -> () = _load_glSampleMaskSGIS
static 
var glSampleMaski:@convention(c) (OpenGL.UInt, OpenGL.Bitfield) -> () = _load_glSampleMaski
static 
var glSamplePatternEXT:@convention(c) (OpenGL.Enum) -> () = _load_glSamplePatternEXT
static 
var glSamplePatternSGIS:@convention(c) (OpenGL.Enum) -> () = _load_glSamplePatternSGIS
static 
var glSamplerParameterIiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glSamplerParameterIiv
static 
var glSamplerParameterIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glSamplerParameterIivEXT
static 
var glSamplerParameterIivOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glSamplerParameterIivOES
static 
var glSamplerParameterIuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glSamplerParameterIuiv
static 
var glSamplerParameterIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glSamplerParameterIuivEXT
static 
var glSamplerParameterIuivOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glSamplerParameterIuivOES
static 
var glSamplerParameterf:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Float) -> () = _load_glSamplerParameterf
static 
var glSamplerParameterfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glSamplerParameterfv
static 
var glSamplerParameteri:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glSamplerParameteri
static 
var glSamplerParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glSamplerParameteriv
static 
var glScaled:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glScaled
static 
var glScalef:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glScalef
static 
var glScalex:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glScalex
static 
var glScalexOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glScalexOES
static 
var glScissor:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glScissor
static 
var glScissorArrayv:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glScissorArrayv
static 
var glScissorArrayvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glScissorArrayvNV
static 
var glScissorIndexed:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glScissorIndexed
static 
var glScissorIndexedNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glScissorIndexedNV
static 
var glScissorIndexedv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glScissorIndexedv
static 
var glScissorIndexedvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glScissorIndexedvNV
static 
var glSecondaryColor3b:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glSecondaryColor3b
static 
var glSecondaryColor3bEXT:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glSecondaryColor3bEXT
static 
var glSecondaryColor3bv:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glSecondaryColor3bv
static 
var glSecondaryColor3bvEXT:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glSecondaryColor3bvEXT
static 
var glSecondaryColor3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glSecondaryColor3d
static 
var glSecondaryColor3dEXT:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glSecondaryColor3dEXT
static 
var glSecondaryColor3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glSecondaryColor3dv
static 
var glSecondaryColor3dvEXT:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glSecondaryColor3dvEXT
static 
var glSecondaryColor3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glSecondaryColor3f
static 
var glSecondaryColor3fEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glSecondaryColor3fEXT
static 
var glSecondaryColor3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glSecondaryColor3fv
static 
var glSecondaryColor3fvEXT:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glSecondaryColor3fvEXT
static 
var glSecondaryColor3hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glSecondaryColor3hNV
static 
var glSecondaryColor3hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glSecondaryColor3hvNV
static 
var glSecondaryColor3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glSecondaryColor3i
static 
var glSecondaryColor3iEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glSecondaryColor3iEXT
static 
var glSecondaryColor3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glSecondaryColor3iv
static 
var glSecondaryColor3ivEXT:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glSecondaryColor3ivEXT
static 
var glSecondaryColor3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glSecondaryColor3s
static 
var glSecondaryColor3sEXT:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glSecondaryColor3sEXT
static 
var glSecondaryColor3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glSecondaryColor3sv
static 
var glSecondaryColor3svEXT:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glSecondaryColor3svEXT
static 
var glSecondaryColor3ub:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glSecondaryColor3ub
static 
var glSecondaryColor3ubEXT:@convention(c) (OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glSecondaryColor3ubEXT
static 
var glSecondaryColor3ubv:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glSecondaryColor3ubv
static 
var glSecondaryColor3ubvEXT:@convention(c) (UnsafePointer<OpenGL.UByte>?) -> () = _load_glSecondaryColor3ubvEXT
static 
var glSecondaryColor3ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glSecondaryColor3ui
static 
var glSecondaryColor3uiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glSecondaryColor3uiEXT
static 
var glSecondaryColor3uiv:@convention(c) (UnsafePointer<OpenGL.UInt>?) -> () = _load_glSecondaryColor3uiv
static 
var glSecondaryColor3uivEXT:@convention(c) (UnsafePointer<OpenGL.UInt>?) -> () = _load_glSecondaryColor3uivEXT
static 
var glSecondaryColor3us:@convention(c) (OpenGL.UShort, OpenGL.UShort, OpenGL.UShort) -> () = _load_glSecondaryColor3us
static 
var glSecondaryColor3usEXT:@convention(c) (OpenGL.UShort, OpenGL.UShort, OpenGL.UShort) -> () = _load_glSecondaryColor3usEXT
static 
var glSecondaryColor3usv:@convention(c) (UnsafePointer<OpenGL.UShort>?) -> () = _load_glSecondaryColor3usv
static 
var glSecondaryColor3usvEXT:@convention(c) (UnsafePointer<OpenGL.UShort>?) -> () = _load_glSecondaryColor3usvEXT
static 
var glSecondaryColorFormatNV:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glSecondaryColorFormatNV
static 
var glSecondaryColorP3ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glSecondaryColorP3ui
static 
var glSecondaryColorP3uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glSecondaryColorP3uiv
static 
var glSecondaryColorPointer:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glSecondaryColorPointer
static 
var glSecondaryColorPointerEXT:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glSecondaryColorPointerEXT
static 
var glSecondaryColorPointerListIBM:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glSecondaryColorPointerListIBM
static 
var glSelectBuffer:@convention(c) (OpenGL.Size, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glSelectBuffer
static 
var glSelectPerfMonitorCountersAMD:@convention(c) (OpenGL.UInt, OpenGL.Bool, OpenGL.UInt, OpenGL.Int, UnsafeMutablePointer<OpenGL.UInt>?) -> () = _load_glSelectPerfMonitorCountersAMD
static 
var glSeparableFilter2D:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, UnsafeRawPointer?) -> () = _load_glSeparableFilter2D
static 
var glSeparableFilter2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?, UnsafeRawPointer?) -> () = _load_glSeparableFilter2DEXT
static 
var glSetFenceAPPLE:@convention(c) (OpenGL.UInt) -> () = _load_glSetFenceAPPLE
static 
var glSetFenceNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glSetFenceNV
static 
var glSetFragmentShaderConstantATI:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glSetFragmentShaderConstantATI
static 
var glSetInvariantEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glSetInvariantEXT
static 
var glSetLocalConstantEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glSetLocalConstantEXT
static 
var glSetMultisamplefvAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glSetMultisamplefvAMD
static 
var glShadeModel:@convention(c) (OpenGL.Enum) -> () = _load_glShadeModel
static 
var glShaderBinary:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.UInt>?, OpenGL.Enum, UnsafeRawPointer?, OpenGL.Size) -> () = _load_glShaderBinary
static 
var glShaderOp1EXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt) -> () = _load_glShaderOp1EXT
static 
var glShaderOp2EXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glShaderOp2EXT
static 
var glShaderOp3EXT:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glShaderOp3EXT
static 
var glShaderSource:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?, UnsafePointer<OpenGL.Int>?) -> () = _load_glShaderSource
static 
var glShaderSourceARB:@convention(c) (OpenGL.HandleARB, OpenGL.Size, UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.CharARB>?>?, UnsafePointer<OpenGL.Int>?) -> () = _load_glShaderSourceARB
static 
var glShaderStorageBlockBinding:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glShaderStorageBlockBinding
static 
var glSharpenTexFuncSGIS:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glSharpenTexFuncSGIS
static 
var glSpriteParameterfSGIX:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glSpriteParameterfSGIX
static 
var glSpriteParameterfvSGIX:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glSpriteParameterfvSGIX
static 
var glSpriteParameteriSGIX:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glSpriteParameteriSGIX
static 
var glSpriteParameterivSGIX:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glSpriteParameterivSGIX
static 
var glStartInstrumentsSGIX:@convention(c) () -> () = _load_glStartInstrumentsSGIX
static 
var glStartTilingQCOM:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.Bitfield) -> () = _load_glStartTilingQCOM
static 
var glStateCaptureNV:@convention(c) (OpenGL.UInt, OpenGL.Enum) -> () = _load_glStateCaptureNV
static 
var glStencilClearTagEXT:@convention(c) (OpenGL.Size, OpenGL.UInt) -> () = _load_glStencilClearTagEXT
static 
var glStencilFillPathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glStencilFillPathInstancedNV
static 
var glStencilFillPathNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt) -> () = _load_glStencilFillPathNV
static 
var glStencilFunc:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.UInt) -> () = _load_glStencilFunc
static 
var glStencilFuncSeparate:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.UInt) -> () = _load_glStencilFuncSeparate
static 
var glStencilFuncSeparateATI:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int, OpenGL.UInt) -> () = _load_glStencilFuncSeparateATI
static 
var glStencilMask:@convention(c) (OpenGL.UInt) -> () = _load_glStencilMask
static 
var glStencilMaskSeparate:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glStencilMaskSeparate
static 
var glStencilOp:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glStencilOp
static 
var glStencilOpSeparate:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glStencilOpSeparate
static 
var glStencilOpSeparateATI:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glStencilOpSeparateATI
static 
var glStencilOpValueAMD:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glStencilOpValueAMD
static 
var glStencilStrokePathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glStencilStrokePathInstancedNV
static 
var glStencilStrokePathNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt) -> () = _load_glStencilStrokePathNV
static 
var glStencilThenCoverFillPathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glStencilThenCoverFillPathInstancedNV
static 
var glStencilThenCoverFillPathNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum) -> () = _load_glStencilThenCoverFillPathNV
static 
var glStencilThenCoverStrokePathInstancedNV:@convention(c) (OpenGL.Size, OpenGL.Enum, UnsafeRawPointer?, OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glStencilThenCoverStrokePathInstancedNV
static 
var glStencilThenCoverStrokePathNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt, OpenGL.Enum) -> () = _load_glStencilThenCoverStrokePathNV
static 
var glStopInstrumentsSGIX:@convention(c) (OpenGL.Int) -> () = _load_glStopInstrumentsSGIX
static 
var glStringMarkerGREMEDY:@convention(c) (OpenGL.Size, UnsafeRawPointer?) -> () = _load_glStringMarkerGREMEDY
static 
var glSubpixelPrecisionBiasNV:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glSubpixelPrecisionBiasNV
static 
var glSwizzleEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glSwizzleEXT
static 
var glSyncTextureINTEL:@convention(c) (OpenGL.UInt) -> () = _load_glSyncTextureINTEL
static 
var glTagSampleBufferSGIX:@convention(c) () -> () = _load_glTagSampleBufferSGIX
static 
var glTangent3bEXT:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glTangent3bEXT
static 
var glTangent3bvEXT:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glTangent3bvEXT
static 
var glTangent3dEXT:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glTangent3dEXT
static 
var glTangent3dvEXT:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glTangent3dvEXT
static 
var glTangent3fEXT:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTangent3fEXT
static 
var glTangent3fvEXT:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glTangent3fvEXT
static 
var glTangent3iEXT:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glTangent3iEXT
static 
var glTangent3ivEXT:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glTangent3ivEXT
static 
var glTangent3sEXT:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glTangent3sEXT
static 
var glTangent3svEXT:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glTangent3svEXT
static 
var glTangentPointerEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glTangentPointerEXT
static 
var glTbufferMask3DFX:@convention(c) (OpenGL.UInt) -> () = _load_glTbufferMask3DFX
static 
var glTessellationFactorAMD:@convention(c) (OpenGL.Float) -> () = _load_glTessellationFactorAMD
static 
var glTessellationModeAMD:@convention(c) (OpenGL.Enum) -> () = _load_glTessellationModeAMD
static 
var glTestFenceAPPLE:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glTestFenceAPPLE
static 
var glTestFenceNV:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glTestFenceNV
static 
var glTestObjectAPPLE:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> OpenGL.Bool = _load_glTestObjectAPPLE
static 
var glTexBuffer:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexBuffer
static 
var glTexBufferARB:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexBufferARB
static 
var glTexBufferEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexBufferEXT
static 
var glTexBufferOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexBufferOES
static 
var glTexBufferRange:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTexBufferRange
static 
var glTexBufferRangeEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTexBufferRangeEXT
static 
var glTexBufferRangeOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTexBufferRangeOES
static 
var glTexBumpParameterfvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexBumpParameterfvATI
static 
var glTexBumpParameterivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexBumpParameterivATI
static 
var glTexCoord1bOES:@convention(c) (OpenGL.Byte) -> () = _load_glTexCoord1bOES
static 
var glTexCoord1bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glTexCoord1bvOES
static 
var glTexCoord1d:@convention(c) (OpenGL.Double) -> () = _load_glTexCoord1d
static 
var glTexCoord1dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glTexCoord1dv
static 
var glTexCoord1f:@convention(c) (OpenGL.Float) -> () = _load_glTexCoord1f
static 
var glTexCoord1fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord1fv
static 
var glTexCoord1hNV:@convention(c) (OpenGL.HalfNV) -> () = _load_glTexCoord1hNV
static 
var glTexCoord1hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glTexCoord1hvNV
static 
var glTexCoord1i:@convention(c) (OpenGL.Int) -> () = _load_glTexCoord1i
static 
var glTexCoord1iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glTexCoord1iv
static 
var glTexCoord1s:@convention(c) (OpenGL.Short) -> () = _load_glTexCoord1s
static 
var glTexCoord1sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glTexCoord1sv
static 
var glTexCoord1xOES:@convention(c) (OpenGL.Fixed) -> () = _load_glTexCoord1xOES
static 
var glTexCoord1xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexCoord1xvOES
static 
var glTexCoord2bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte) -> () = _load_glTexCoord2bOES
static 
var glTexCoord2bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glTexCoord2bvOES
static 
var glTexCoord2d:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glTexCoord2d
static 
var glTexCoord2dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glTexCoord2dv
static 
var glTexCoord2f:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2f
static 
var glTexCoord2fColor3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2fColor3fVertex3fSUN
static 
var glTexCoord2fColor3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fColor3fVertex3fvSUN
static 
var glTexCoord2fColor4fNormal3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2fColor4fNormal3fVertex3fSUN
static 
var glTexCoord2fColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fColor4fNormal3fVertex3fvSUN
static 
var glTexCoord2fColor4ubVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2fColor4ubVertex3fSUN
static 
var glTexCoord2fColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.UByte>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fColor4ubVertex3fvSUN
static 
var glTexCoord2fNormal3fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2fNormal3fVertex3fSUN
static 
var glTexCoord2fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fNormal3fVertex3fvSUN
static 
var glTexCoord2fVertex3fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord2fVertex3fSUN
static 
var glTexCoord2fVertex3fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fVertex3fvSUN
static 
var glTexCoord2fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord2fv
static 
var glTexCoord2hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glTexCoord2hNV
static 
var glTexCoord2hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glTexCoord2hvNV
static 
var glTexCoord2i:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glTexCoord2i
static 
var glTexCoord2iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glTexCoord2iv
static 
var glTexCoord2s:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glTexCoord2s
static 
var glTexCoord2sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glTexCoord2sv
static 
var glTexCoord2xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glTexCoord2xOES
static 
var glTexCoord2xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexCoord2xvOES
static 
var glTexCoord3bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glTexCoord3bOES
static 
var glTexCoord3bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glTexCoord3bvOES
static 
var glTexCoord3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glTexCoord3d
static 
var glTexCoord3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glTexCoord3dv
static 
var glTexCoord3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord3f
static 
var glTexCoord3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord3fv
static 
var glTexCoord3hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glTexCoord3hNV
static 
var glTexCoord3hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glTexCoord3hvNV
static 
var glTexCoord3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glTexCoord3i
static 
var glTexCoord3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glTexCoord3iv
static 
var glTexCoord3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glTexCoord3s
static 
var glTexCoord3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glTexCoord3sv
static 
var glTexCoord3xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glTexCoord3xOES
static 
var glTexCoord3xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexCoord3xvOES
static 
var glTexCoord4bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glTexCoord4bOES
static 
var glTexCoord4bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glTexCoord4bvOES
static 
var glTexCoord4d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glTexCoord4d
static 
var glTexCoord4dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glTexCoord4dv
static 
var glTexCoord4f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord4f
static 
var glTexCoord4fColor4fNormal3fVertex4fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord4fColor4fNormal3fVertex4fSUN
static 
var glTexCoord4fColor4fNormal3fVertex4fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord4fColor4fNormal3fVertex4fvSUN
static 
var glTexCoord4fVertex4fSUN:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTexCoord4fVertex4fSUN
static 
var glTexCoord4fVertex4fvSUN:@convention(c) (UnsafePointer<OpenGL.Float>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord4fVertex4fvSUN
static 
var glTexCoord4fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glTexCoord4fv
static 
var glTexCoord4hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glTexCoord4hNV
static 
var glTexCoord4hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glTexCoord4hvNV
static 
var glTexCoord4i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glTexCoord4i
static 
var glTexCoord4iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glTexCoord4iv
static 
var glTexCoord4s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glTexCoord4s
static 
var glTexCoord4sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glTexCoord4sv
static 
var glTexCoord4xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glTexCoord4xOES
static 
var glTexCoord4xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexCoord4xvOES
static 
var glTexCoordFormatNV:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glTexCoordFormatNV
static 
var glTexCoordP1ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexCoordP1ui
static 
var glTexCoordP1uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexCoordP1uiv
static 
var glTexCoordP2ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexCoordP2ui
static 
var glTexCoordP2uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexCoordP2uiv
static 
var glTexCoordP3ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexCoordP3ui
static 
var glTexCoordP3uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexCoordP3uiv
static 
var glTexCoordP4ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexCoordP4ui
static 
var glTexCoordP4uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexCoordP4uiv
static 
var glTexCoordPointer:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glTexCoordPointer
static 
var glTexCoordPointerEXT:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glTexCoordPointerEXT
static 
var glTexCoordPointerListIBM:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glTexCoordPointerListIBM
static 
var glTexCoordPointervINTEL:@convention(c) (OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = _load_glTexCoordPointervINTEL
static 
var glTexEnvf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glTexEnvf
static 
var glTexEnvfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexEnvfv
static 
var glTexEnvi:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glTexEnvi
static 
var glTexEnviv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexEnviv
static 
var glTexEnvx:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glTexEnvx
static 
var glTexEnvxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glTexEnvxOES
static 
var glTexEnvxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexEnvxv
static 
var glTexEnvxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexEnvxvOES
static 
var glTexFilterFuncSGIS:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexFilterFuncSGIS
static 
var glTexGend:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Double) -> () = _load_glTexGend
static 
var glTexGendv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glTexGendv
static 
var glTexGenf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glTexGenf
static 
var glTexGenfOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glTexGenfOES
static 
var glTexGenfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexGenfv
static 
var glTexGenfvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexGenfvOES
static 
var glTexGeni:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glTexGeni
static 
var glTexGeniOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glTexGeniOES
static 
var glTexGeniv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexGeniv
static 
var glTexGenivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexGenivOES
static 
var glTexGenxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glTexGenxOES
static 
var glTexGenxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexGenxvOES
static 
var glTexImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage1D
static 
var glTexImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage2D
static 
var glTexImage2DMultisample:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexImage2DMultisample
static 
var glTexImage2DMultisampleCoverageNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexImage2DMultisampleCoverageNV
static 
var glTexImage3D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage3D
static 
var glTexImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage3DEXT
static 
var glTexImage3DMultisample:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexImage3DMultisample
static 
var glTexImage3DMultisampleCoverageNV:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexImage3DMultisampleCoverageNV
static 
var glTexImage3DOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage3DOES
static 
var glTexImage4DSGIS:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexImage4DSGIS
static 
var glTexPageCommitmentARB:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexPageCommitmentARB
static 
var glTexPageCommitmentEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexPageCommitmentEXT
static 
var glTexParameterIiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexParameterIiv
static 
var glTexParameterIivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexParameterIivEXT
static 
var glTexParameterIivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexParameterIivOES
static 
var glTexParameterIuiv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexParameterIuiv
static 
var glTexParameterIuivEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexParameterIuivEXT
static 
var glTexParameterIuivOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTexParameterIuivOES
static 
var glTexParameterf:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glTexParameterf
static 
var glTexParameterfv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTexParameterfv
static 
var glTexParameteri:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glTexParameteri
static 
var glTexParameteriv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTexParameteriv
static 
var glTexParameterx:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glTexParameterx
static 
var glTexParameterxOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Fixed) -> () = _load_glTexParameterxOES
static 
var glTexParameterxv:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexParameterxv
static 
var glTexParameterxvOES:@convention(c) (OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Fixed>?) -> () = _load_glTexParameterxvOES
static 
var glTexRenderbufferNV:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glTexRenderbufferNV
static 
var glTexStorage1D:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size) -> () = _load_glTexStorage1D
static 
var glTexStorage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size) -> () = _load_glTexStorage1DEXT
static 
var glTexStorage2D:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glTexStorage2D
static 
var glTexStorage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glTexStorage2DEXT
static 
var glTexStorage2DMultisample:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexStorage2DMultisample
static 
var glTexStorage3D:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glTexStorage3D
static 
var glTexStorage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glTexStorage3DEXT
static 
var glTexStorage3DMultisample:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexStorage3DMultisample
static 
var glTexStorage3DMultisampleOES:@convention(c) (OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexStorage3DMultisampleOES
static 
var glTexStorageSparseAMD:@convention(c) (OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bitfield) -> () = _load_glTexStorageSparseAMD
static 
var glTexSubImage1D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage1D
static 
var glTexSubImage1DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage1DEXT
static 
var glTexSubImage2D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage2D
static 
var glTexSubImage2DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage2DEXT
static 
var glTexSubImage3D:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage3D
static 
var glTexSubImage3DEXT:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage3DEXT
static 
var glTexSubImage3DOES:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage3DOES
static 
var glTexSubImage4DSGIS:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTexSubImage4DSGIS
static 
var glTextureBarrier:@convention(c) () -> () = _load_glTextureBarrier
static 
var glTextureBarrierNV:@convention(c) () -> () = _load_glTextureBarrierNV
static 
var glTextureBuffer:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTextureBuffer
static 
var glTextureBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTextureBufferEXT
static 
var glTextureBufferRange:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTextureBufferRange
static 
var glTextureBufferRangeEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTextureBufferRangeEXT
static 
var glTextureColorMaskSGIS:@convention(c) (OpenGL.Bool, OpenGL.Bool, OpenGL.Bool, OpenGL.Bool) -> () = _load_glTextureColorMaskSGIS
static 
var glTextureImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureImage1DEXT
static 
var glTextureImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureImage2DEXT
static 
var glTextureImage2DMultisampleCoverageNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureImage2DMultisampleCoverageNV
static 
var glTextureImage2DMultisampleNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureImage2DMultisampleNV
static 
var glTextureImage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureImage3DEXT
static 
var glTextureImage3DMultisampleCoverageNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureImage3DMultisampleCoverageNV
static 
var glTextureImage3DMultisampleNV:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureImage3DMultisampleNV
static 
var glTextureLightEXT:@convention(c) (OpenGL.Enum) -> () = _load_glTextureLightEXT
static 
var glTextureMaterialEXT:@convention(c) (OpenGL.Enum, OpenGL.Enum) -> () = _load_glTextureMaterialEXT
static 
var glTextureNormalEXT:@convention(c) (OpenGL.Enum) -> () = _load_glTextureNormalEXT
static 
var glTexturePageCommitmentEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTexturePageCommitmentEXT
static 
var glTextureParameterIiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTextureParameterIiv
static 
var glTextureParameterIivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTextureParameterIivEXT
static 
var glTextureParameterIuiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTextureParameterIuiv
static 
var glTextureParameterIuivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glTextureParameterIuivEXT
static 
var glTextureParameterf:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Float) -> () = _load_glTextureParameterf
static 
var glTextureParameterfEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Float) -> () = _load_glTextureParameterfEXT
static 
var glTextureParameterfv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTextureParameterfv
static 
var glTextureParameterfvEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTextureParameterfvEXT
static 
var glTextureParameteri:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glTextureParameteri
static 
var glTextureParameteriEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Int) -> () = _load_glTextureParameteriEXT
static 
var glTextureParameteriv:@convention(c) (OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTextureParameteriv
static 
var glTextureParameterivEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glTextureParameterivEXT
static 
var glTextureRangeAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glTextureRangeAPPLE
static 
var glTextureRenderbufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt) -> () = _load_glTextureRenderbufferEXT
static 
var glTextureStorage1D:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size) -> () = _load_glTextureStorage1D
static 
var glTextureStorage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size) -> () = _load_glTextureStorage1DEXT
static 
var glTextureStorage2D:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glTextureStorage2D
static 
var glTextureStorage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size) -> () = _load_glTextureStorage2DEXT
static 
var glTextureStorage2DMultisample:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureStorage2DMultisample
static 
var glTextureStorage2DMultisampleEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureStorage2DMultisampleEXT
static 
var glTextureStorage3D:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glTextureStorage3D
static 
var glTextureStorage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size) -> () = _load_glTextureStorage3DEXT
static 
var glTextureStorage3DMultisample:@convention(c) (OpenGL.UInt, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureStorage3DMultisample
static 
var glTextureStorage3DMultisampleEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bool) -> () = _load_glTextureStorage3DMultisampleEXT
static 
var glTextureStorageSparseAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Bitfield) -> () = _load_glTextureStorageSparseAMD
static 
var glTextureSubImage1D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage1D
static 
var glTextureSubImage1DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage1DEXT
static 
var glTextureSubImage2D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage2D
static 
var glTextureSubImage2DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage2DEXT
static 
var glTextureSubImage3D:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage3D
static 
var glTextureSubImage3DEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size, OpenGL.Size, OpenGL.Enum, OpenGL.Enum, UnsafeRawPointer?) -> () = _load_glTextureSubImage3DEXT
static 
var glTextureView:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glTextureView
static 
var glTextureViewEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glTextureViewEXT
static 
var glTextureViewOES:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glTextureViewOES
static 
var glTrackMatrixNV:@convention(c) (OpenGL.Enum, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum) -> () = _load_glTrackMatrixNV
static 
var glTransformFeedbackAttribsNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Int>?, OpenGL.Enum) -> () = _load_glTransformFeedbackAttribsNV
static 
var glTransformFeedbackBufferBase:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glTransformFeedbackBufferBase
static 
var glTransformFeedbackBufferRange:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.SizePointer) -> () = _load_glTransformFeedbackBufferRange
static 
var glTransformFeedbackStreamAttribsNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.Int>?, OpenGL.Size, UnsafePointer<OpenGL.Int>?, OpenGL.Enum) -> () = _load_glTransformFeedbackStreamAttribsNV
static 
var glTransformFeedbackVaryings:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?, OpenGL.Enum) -> () = _load_glTransformFeedbackVaryings
static 
var glTransformFeedbackVaryingsEXT:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<UnsafePointer<OpenGL.Char>?>?, OpenGL.Enum) -> () = _load_glTransformFeedbackVaryingsEXT
static 
var glTransformFeedbackVaryingsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Int>?, OpenGL.Enum) -> () = _load_glTransformFeedbackVaryingsNV
static 
var glTransformPathNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glTransformPathNV
static 
var glTranslated:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glTranslated
static 
var glTranslatef:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glTranslatef
static 
var glTranslatex:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glTranslatex
static 
var glTranslatexOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glTranslatexOES
static 
var glUniform1d:@convention(c) (OpenGL.Int, OpenGL.Double) -> () = _load_glUniform1d
static 
var glUniform1dv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniform1dv
static 
var glUniform1f:@convention(c) (OpenGL.Int, OpenGL.Float) -> () = _load_glUniform1f
static 
var glUniform1fARB:@convention(c) (OpenGL.Int, OpenGL.Float) -> () = _load_glUniform1fARB
static 
var glUniform1fv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform1fv
static 
var glUniform1fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform1fvARB
static 
var glUniform1i:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glUniform1i
static 
var glUniform1i64ARB:@convention(c) (OpenGL.Int, OpenGL.Int64) -> () = _load_glUniform1i64ARB
static 
var glUniform1i64NV:@convention(c) (OpenGL.Int, OpenGL.Int64EXT) -> () = _load_glUniform1i64NV
static 
var glUniform1i64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glUniform1i64vARB
static 
var glUniform1i64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glUniform1i64vNV
static 
var glUniform1iARB:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glUniform1iARB
static 
var glUniform1iv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform1iv
static 
var glUniform1ivARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform1ivARB
static 
var glUniform1ui:@convention(c) (OpenGL.Int, OpenGL.UInt) -> () = _load_glUniform1ui
static 
var glUniform1ui64ARB:@convention(c) (OpenGL.Int, OpenGL.UInt64) -> () = _load_glUniform1ui64ARB
static 
var glUniform1ui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64EXT) -> () = _load_glUniform1ui64NV
static 
var glUniform1ui64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniform1ui64vARB
static 
var glUniform1ui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glUniform1ui64vNV
static 
var glUniform1uiEXT:@convention(c) (OpenGL.Int, OpenGL.UInt) -> () = _load_glUniform1uiEXT
static 
var glUniform1uiv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform1uiv
static 
var glUniform1uivEXT:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform1uivEXT
static 
var glUniform2d:@convention(c) (OpenGL.Int, OpenGL.Double, OpenGL.Double) -> () = _load_glUniform2d
static 
var glUniform2dv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniform2dv
static 
var glUniform2f:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform2f
static 
var glUniform2fARB:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform2fARB
static 
var glUniform2fv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform2fv
static 
var glUniform2fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform2fvARB
static 
var glUniform2i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform2i
static 
var glUniform2i64ARB:@convention(c) (OpenGL.Int, OpenGL.Int64, OpenGL.Int64) -> () = _load_glUniform2i64ARB
static 
var glUniform2i64NV:@convention(c) (OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glUniform2i64NV
static 
var glUniform2i64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glUniform2i64vARB
static 
var glUniform2i64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glUniform2i64vNV
static 
var glUniform2iARB:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform2iARB
static 
var glUniform2iv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform2iv
static 
var glUniform2ivARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform2ivARB
static 
var glUniform2ui:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform2ui
static 
var glUniform2ui64ARB:@convention(c) (OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glUniform2ui64ARB
static 
var glUniform2ui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glUniform2ui64NV
static 
var glUniform2ui64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniform2ui64vARB
static 
var glUniform2ui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glUniform2ui64vNV
static 
var glUniform2uiEXT:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform2uiEXT
static 
var glUniform2uiv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform2uiv
static 
var glUniform2uivEXT:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform2uivEXT
static 
var glUniform3d:@convention(c) (OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glUniform3d
static 
var glUniform3dv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniform3dv
static 
var glUniform3f:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform3f
static 
var glUniform3fARB:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform3fARB
static 
var glUniform3fv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform3fv
static 
var glUniform3fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform3fvARB
static 
var glUniform3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform3i
static 
var glUniform3i64ARB:@convention(c) (OpenGL.Int, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64) -> () = _load_glUniform3i64ARB
static 
var glUniform3i64NV:@convention(c) (OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glUniform3i64NV
static 
var glUniform3i64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glUniform3i64vARB
static 
var glUniform3i64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glUniform3i64vNV
static 
var glUniform3iARB:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform3iARB
static 
var glUniform3iv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform3iv
static 
var glUniform3ivARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform3ivARB
static 
var glUniform3ui:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform3ui
static 
var glUniform3ui64ARB:@convention(c) (OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glUniform3ui64ARB
static 
var glUniform3ui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glUniform3ui64NV
static 
var glUniform3ui64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniform3ui64vARB
static 
var glUniform3ui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glUniform3ui64vNV
static 
var glUniform3uiEXT:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform3uiEXT
static 
var glUniform3uiv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform3uiv
static 
var glUniform3uivEXT:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform3uivEXT
static 
var glUniform4d:@convention(c) (OpenGL.Int, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glUniform4d
static 
var glUniform4dv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniform4dv
static 
var glUniform4f:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform4f
static 
var glUniform4fARB:@convention(c) (OpenGL.Int, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glUniform4fARB
static 
var glUniform4fv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform4fv
static 
var glUniform4fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniform4fvARB
static 
var glUniform4i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform4i
static 
var glUniform4i64ARB:@convention(c) (OpenGL.Int, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64, OpenGL.Int64) -> () = _load_glUniform4i64ARB
static 
var glUniform4i64NV:@convention(c) (OpenGL.Int, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glUniform4i64NV
static 
var glUniform4i64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64>?) -> () = _load_glUniform4i64vARB
static 
var glUniform4i64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glUniform4i64vNV
static 
var glUniform4iARB:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glUniform4iARB
static 
var glUniform4iv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform4iv
static 
var glUniform4ivARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.Int>?) -> () = _load_glUniform4ivARB
static 
var glUniform4ui:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform4ui
static 
var glUniform4ui64ARB:@convention(c) (OpenGL.Int, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64, OpenGL.UInt64) -> () = _load_glUniform4ui64ARB
static 
var glUniform4ui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glUniform4ui64NV
static 
var glUniform4ui64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniform4ui64vARB
static 
var glUniform4ui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glUniform4ui64vNV
static 
var glUniform4uiEXT:@convention(c) (OpenGL.Int, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniform4uiEXT
static 
var glUniform4uiv:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform4uiv
static 
var glUniform4uivEXT:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniform4uivEXT
static 
var glUniformBlockBinding:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glUniformBlockBinding
static 
var glUniformBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.UInt) -> () = _load_glUniformBufferEXT
static 
var glUniformHandleui64ARB:@convention(c) (OpenGL.Int, OpenGL.UInt64) -> () = _load_glUniformHandleui64ARB
static 
var glUniformHandleui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64) -> () = _load_glUniformHandleui64NV
static 
var glUniformHandleui64vARB:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniformHandleui64vARB
static 
var glUniformHandleui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64>?) -> () = _load_glUniformHandleui64vNV
static 
var glUniformMatrix2dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix2dv
static 
var glUniformMatrix2fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2fv
static 
var glUniformMatrix2fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2fvARB
static 
var glUniformMatrix2x3dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix2x3dv
static 
var glUniformMatrix2x3fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2x3fv
static 
var glUniformMatrix2x3fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2x3fvNV
static 
var glUniformMatrix2x4dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix2x4dv
static 
var glUniformMatrix2x4fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2x4fv
static 
var glUniformMatrix2x4fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix2x4fvNV
static 
var glUniformMatrix3dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix3dv
static 
var glUniformMatrix3fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3fv
static 
var glUniformMatrix3fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3fvARB
static 
var glUniformMatrix3x2dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix3x2dv
static 
var glUniformMatrix3x2fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3x2fv
static 
var glUniformMatrix3x2fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3x2fvNV
static 
var glUniformMatrix3x4dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix3x4dv
static 
var glUniformMatrix3x4fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3x4fv
static 
var glUniformMatrix3x4fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix3x4fvNV
static 
var glUniformMatrix4dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix4dv
static 
var glUniformMatrix4fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4fv
static 
var glUniformMatrix4fvARB:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4fvARB
static 
var glUniformMatrix4x2dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix4x2dv
static 
var glUniformMatrix4x2fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4x2fv
static 
var glUniformMatrix4x2fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4x2fvNV
static 
var glUniformMatrix4x3dv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Double>?) -> () = _load_glUniformMatrix4x3dv
static 
var glUniformMatrix4x3fv:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4x3fv
static 
var glUniformMatrix4x3fvNV:@convention(c) (OpenGL.Int, OpenGL.Size, OpenGL.Bool, UnsafePointer<OpenGL.Float>?) -> () = _load_glUniformMatrix4x3fvNV
static 
var glUniformSubroutinesuiv:@convention(c) (OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> () = _load_glUniformSubroutinesuiv
static 
var glUniformui64NV:@convention(c) (OpenGL.Int, OpenGL.UInt64EXT) -> () = _load_glUniformui64NV
static 
var glUniformui64vNV:@convention(c) (OpenGL.Int, OpenGL.Size, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glUniformui64vNV
static 
var glUnlockArraysEXT:@convention(c) () -> () = _load_glUnlockArraysEXT
static 
var glUnmapBuffer:@convention(c) (OpenGL.Enum) -> OpenGL.Bool = _load_glUnmapBuffer
static 
var glUnmapBufferARB:@convention(c) (OpenGL.Enum) -> OpenGL.Bool = _load_glUnmapBufferARB
static 
var glUnmapBufferOES:@convention(c) (OpenGL.Enum) -> OpenGL.Bool = _load_glUnmapBufferOES
static 
var glUnmapNamedBuffer:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glUnmapNamedBuffer
static 
var glUnmapNamedBufferEXT:@convention(c) (OpenGL.UInt) -> OpenGL.Bool = _load_glUnmapNamedBufferEXT
static 
var glUnmapObjectBufferATI:@convention(c) (OpenGL.UInt) -> () = _load_glUnmapObjectBufferATI
static 
var glUnmapTexture2DINTEL:@convention(c) (OpenGL.UInt, OpenGL.Int) -> () = _load_glUnmapTexture2DINTEL
static 
var glUpdateObjectBufferATI:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafeRawPointer?, OpenGL.Enum) -> () = _load_glUpdateObjectBufferATI
static 
var glUseProgram:@convention(c) (OpenGL.UInt) -> () = _load_glUseProgram
static 
var glUseProgramObjectARB:@convention(c) (OpenGL.HandleARB) -> () = _load_glUseProgramObjectARB
static 
var glUseProgramStages:@convention(c) (OpenGL.UInt, OpenGL.Bitfield, OpenGL.UInt) -> () = _load_glUseProgramStages
static 
var glUseProgramStagesEXT:@convention(c) (OpenGL.UInt, OpenGL.Bitfield, OpenGL.UInt) -> () = _load_glUseProgramStagesEXT
static 
var glUseShaderProgramEXT:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glUseShaderProgramEXT
static 
var glVDPAUFiniNV:@convention(c) () -> () = _load_glVDPAUFiniNV
static 
var glVDPAUGetSurfaceivNV:@convention(c) (OpenGL.VdpauSurfaceNV, OpenGL.Enum, OpenGL.Size, UnsafeMutablePointer<OpenGL.Size>?, UnsafeMutablePointer<OpenGL.Int>?) -> () = _load_glVDPAUGetSurfaceivNV
static 
var glVDPAUInitNV:@convention(c) (UnsafeRawPointer?, UnsafeRawPointer?) -> () = _load_glVDPAUInitNV
static 
var glVDPAUIsSurfaceNV:@convention(c) (OpenGL.VdpauSurfaceNV) -> OpenGL.Bool = _load_glVDPAUIsSurfaceNV
static 
var glVDPAUMapSurfacesNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.VdpauSurfaceNV>?) -> () = _load_glVDPAUMapSurfacesNV
static 
var glVDPAURegisterOutputSurfaceNV:@convention(c) (UnsafeRawPointer?, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> OpenGL.VdpauSurfaceNV = _load_glVDPAURegisterOutputSurfaceNV
static 
var glVDPAURegisterVideoSurfaceNV:@convention(c) (UnsafeRawPointer?, OpenGL.Enum, OpenGL.Size, UnsafePointer<OpenGL.UInt>?) -> OpenGL.VdpauSurfaceNV = _load_glVDPAURegisterVideoSurfaceNV
static 
var glVDPAUSurfaceAccessNV:@convention(c) (OpenGL.VdpauSurfaceNV, OpenGL.Enum) -> () = _load_glVDPAUSurfaceAccessNV
static 
var glVDPAUUnmapSurfacesNV:@convention(c) (OpenGL.Size, UnsafePointer<OpenGL.VdpauSurfaceNV>?) -> () = _load_glVDPAUUnmapSurfacesNV
static 
var glVDPAUUnregisterSurfaceNV:@convention(c) (OpenGL.VdpauSurfaceNV) -> () = _load_glVDPAUUnregisterSurfaceNV
static 
var glValidateProgram:@convention(c) (OpenGL.UInt) -> () = _load_glValidateProgram
static 
var glValidateProgramARB:@convention(c) (OpenGL.HandleARB) -> () = _load_glValidateProgramARB
static 
var glValidateProgramPipeline:@convention(c) (OpenGL.UInt) -> () = _load_glValidateProgramPipeline
static 
var glValidateProgramPipelineEXT:@convention(c) (OpenGL.UInt) -> () = _load_glValidateProgramPipelineEXT
static 
var glVariantArrayObjectATI:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVariantArrayObjectATI
static 
var glVariantPointerEXT:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.UInt, UnsafeRawPointer?) -> () = _load_glVariantPointerEXT
static 
var glVariantbvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVariantbvEXT
static 
var glVariantdvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVariantdvEXT
static 
var glVariantfvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVariantfvEXT
static 
var glVariantivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVariantivEXT
static 
var glVariantsvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVariantsvEXT
static 
var glVariantubvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVariantubvEXT
static 
var glVariantuivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVariantuivEXT
static 
var glVariantusvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVariantusvEXT
static 
var glVertex2bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte) -> () = _load_glVertex2bOES
static 
var glVertex2bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertex2bvOES
static 
var glVertex2d:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glVertex2d
static 
var glVertex2dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glVertex2dv
static 
var glVertex2f:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glVertex2f
static 
var glVertex2fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glVertex2fv
static 
var glVertex2hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertex2hNV
static 
var glVertex2hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertex2hvNV
static 
var glVertex2i:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glVertex2i
static 
var glVertex2iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glVertex2iv
static 
var glVertex2s:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glVertex2s
static 
var glVertex2sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glVertex2sv
static 
var glVertex2xOES:@convention(c) (OpenGL.Fixed) -> () = _load_glVertex2xOES
static 
var glVertex2xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glVertex2xvOES
static 
var glVertex3bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glVertex3bOES
static 
var glVertex3bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertex3bvOES
static 
var glVertex3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertex3d
static 
var glVertex3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glVertex3dv
static 
var glVertex3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertex3f
static 
var glVertex3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glVertex3fv
static 
var glVertex3hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertex3hNV
static 
var glVertex3hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertex3hvNV
static 
var glVertex3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertex3i
static 
var glVertex3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glVertex3iv
static 
var glVertex3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertex3s
static 
var glVertex3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glVertex3sv
static 
var glVertex3xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glVertex3xOES
static 
var glVertex3xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glVertex3xvOES
static 
var glVertex4bOES:@convention(c) (OpenGL.Byte, OpenGL.Byte, OpenGL.Byte, OpenGL.Byte) -> () = _load_glVertex4bOES
static 
var glVertex4bvOES:@convention(c) (UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertex4bvOES
static 
var glVertex4d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertex4d
static 
var glVertex4dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glVertex4dv
static 
var glVertex4f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertex4f
static 
var glVertex4fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glVertex4fv
static 
var glVertex4hNV:@convention(c) (OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertex4hNV
static 
var glVertex4hvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertex4hvNV
static 
var glVertex4i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertex4i
static 
var glVertex4iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glVertex4iv
static 
var glVertex4s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertex4s
static 
var glVertex4sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glVertex4sv
static 
var glVertex4xOES:@convention(c) (OpenGL.Fixed, OpenGL.Fixed, OpenGL.Fixed) -> () = _load_glVertex4xOES
static 
var glVertex4xvOES:@convention(c) (UnsafePointer<OpenGL.Fixed>?) -> () = _load_glVertex4xvOES
static 
var glVertexArrayAttribBinding:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayAttribBinding
static 
var glVertexArrayAttribFormat:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexArrayAttribFormat
static 
var glVertexArrayAttribIFormat:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexArrayAttribIFormat
static 
var glVertexArrayAttribLFormat:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexArrayAttribLFormat
static 
var glVertexArrayBindVertexBufferEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.Size) -> () = _load_glVertexArrayBindVertexBufferEXT
static 
var glVertexArrayBindingDivisor:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayBindingDivisor
static 
var glVertexArrayColorOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayColorOffsetEXT
static 
var glVertexArrayEdgeFlagOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayEdgeFlagOffsetEXT
static 
var glVertexArrayElementBuffer:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayElementBuffer
static 
var glVertexArrayFogCoordOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayFogCoordOffsetEXT
static 
var glVertexArrayIndexOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayIndexOffsetEXT
static 
var glVertexArrayMultiTexCoordOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayMultiTexCoordOffsetEXT
static 
var glVertexArrayNormalOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayNormalOffsetEXT
static 
var glVertexArrayParameteriAPPLE:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glVertexArrayParameteriAPPLE
static 
var glVertexArrayRangeAPPLE:@convention(c) (OpenGL.Size, UnsafeMutableRawPointer?) -> () = _load_glVertexArrayRangeAPPLE
static 
var glVertexArrayRangeNV:@convention(c) (OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexArrayRangeNV
static 
var glVertexArraySecondaryColorOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArraySecondaryColorOffsetEXT
static 
var glVertexArrayTexCoordOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayTexCoordOffsetEXT
static 
var glVertexArrayVertexAttribBindingEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayVertexAttribBindingEXT
static 
var glVertexArrayVertexAttribDivisorEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayVertexAttribDivisorEXT
static 
var glVertexArrayVertexAttribFormatEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexArrayVertexAttribFormatEXT
static 
var glVertexArrayVertexAttribIFormatEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexArrayVertexAttribIFormatEXT
static 
var glVertexArrayVertexAttribIOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayVertexAttribIOffsetEXT
static 
var glVertexArrayVertexAttribLFormatEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexArrayVertexAttribLFormatEXT
static 
var glVertexArrayVertexAttribLOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayVertexAttribLOffsetEXT
static 
var glVertexArrayVertexAttribOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayVertexAttribOffsetEXT
static 
var glVertexArrayVertexBindingDivisorEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexArrayVertexBindingDivisorEXT
static 
var glVertexArrayVertexBuffer:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.IntPointer, OpenGL.Size) -> () = _load_glVertexArrayVertexBuffer
static 
var glVertexArrayVertexBuffers:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.IntPointer>?, UnsafePointer<OpenGL.Size>?) -> () = _load_glVertexArrayVertexBuffers
static 
var glVertexArrayVertexOffsetEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.IntPointer) -> () = _load_glVertexArrayVertexOffsetEXT
static 
var glVertexAttrib1d:@convention(c) (OpenGL.UInt, OpenGL.Double) -> () = _load_glVertexAttrib1d
static 
var glVertexAttrib1dARB:@convention(c) (OpenGL.UInt, OpenGL.Double) -> () = _load_glVertexAttrib1dARB
static 
var glVertexAttrib1dNV:@convention(c) (OpenGL.UInt, OpenGL.Double) -> () = _load_glVertexAttrib1dNV
static 
var glVertexAttrib1dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib1dv
static 
var glVertexAttrib1dvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib1dvARB
static 
var glVertexAttrib1dvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib1dvNV
static 
var glVertexAttrib1f:@convention(c) (OpenGL.UInt, OpenGL.Float) -> () = _load_glVertexAttrib1f
static 
var glVertexAttrib1fARB:@convention(c) (OpenGL.UInt, OpenGL.Float) -> () = _load_glVertexAttrib1fARB
static 
var glVertexAttrib1fNV:@convention(c) (OpenGL.UInt, OpenGL.Float) -> () = _load_glVertexAttrib1fNV
static 
var glVertexAttrib1fv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib1fv
static 
var glVertexAttrib1fvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib1fvARB
static 
var glVertexAttrib1fvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib1fvNV
static 
var glVertexAttrib1hNV:@convention(c) (OpenGL.UInt, OpenGL.HalfNV) -> () = _load_glVertexAttrib1hNV
static 
var glVertexAttrib1hvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttrib1hvNV
static 
var glVertexAttrib1s:@convention(c) (OpenGL.UInt, OpenGL.Short) -> () = _load_glVertexAttrib1s
static 
var glVertexAttrib1sARB:@convention(c) (OpenGL.UInt, OpenGL.Short) -> () = _load_glVertexAttrib1sARB
static 
var glVertexAttrib1sNV:@convention(c) (OpenGL.UInt, OpenGL.Short) -> () = _load_glVertexAttrib1sNV
static 
var glVertexAttrib1sv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib1sv
static 
var glVertexAttrib1svARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib1svARB
static 
var glVertexAttrib1svNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib1svNV
static 
var glVertexAttrib2d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib2d
static 
var glVertexAttrib2dARB:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib2dARB
static 
var glVertexAttrib2dNV:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib2dNV
static 
var glVertexAttrib2dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib2dv
static 
var glVertexAttrib2dvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib2dvARB
static 
var glVertexAttrib2dvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib2dvNV
static 
var glVertexAttrib2f:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib2f
static 
var glVertexAttrib2fARB:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib2fARB
static 
var glVertexAttrib2fNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib2fNV
static 
var glVertexAttrib2fv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib2fv
static 
var glVertexAttrib2fvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib2fvARB
static 
var glVertexAttrib2fvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib2fvNV
static 
var glVertexAttrib2hNV:@convention(c) (OpenGL.UInt, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertexAttrib2hNV
static 
var glVertexAttrib2hvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttrib2hvNV
static 
var glVertexAttrib2s:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib2s
static 
var glVertexAttrib2sARB:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib2sARB
static 
var glVertexAttrib2sNV:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib2sNV
static 
var glVertexAttrib2sv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib2sv
static 
var glVertexAttrib2svARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib2svARB
static 
var glVertexAttrib2svNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib2svNV
static 
var glVertexAttrib3d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib3d
static 
var glVertexAttrib3dARB:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib3dARB
static 
var glVertexAttrib3dNV:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib3dNV
static 
var glVertexAttrib3dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib3dv
static 
var glVertexAttrib3dvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib3dvARB
static 
var glVertexAttrib3dvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib3dvNV
static 
var glVertexAttrib3f:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib3f
static 
var glVertexAttrib3fARB:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib3fARB
static 
var glVertexAttrib3fNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib3fNV
static 
var glVertexAttrib3fv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib3fv
static 
var glVertexAttrib3fvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib3fvARB
static 
var glVertexAttrib3fvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib3fvNV
static 
var glVertexAttrib3hNV:@convention(c) (OpenGL.UInt, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertexAttrib3hNV
static 
var glVertexAttrib3hvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttrib3hvNV
static 
var glVertexAttrib3s:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib3s
static 
var glVertexAttrib3sARB:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib3sARB
static 
var glVertexAttrib3sNV:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib3sNV
static 
var glVertexAttrib3sv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib3sv
static 
var glVertexAttrib3svARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib3svARB
static 
var glVertexAttrib3svNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib3svNV
static 
var glVertexAttrib4Nbv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttrib4Nbv
static 
var glVertexAttrib4NbvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttrib4NbvARB
static 
var glVertexAttrib4Niv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttrib4Niv
static 
var glVertexAttrib4NivARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttrib4NivARB
static 
var glVertexAttrib4Nsv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib4Nsv
static 
var glVertexAttrib4NsvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib4NsvARB
static 
var glVertexAttrib4Nub:@convention(c) (OpenGL.UInt, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glVertexAttrib4Nub
static 
var glVertexAttrib4NubARB:@convention(c) (OpenGL.UInt, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glVertexAttrib4NubARB
static 
var glVertexAttrib4Nubv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttrib4Nubv
static 
var glVertexAttrib4NubvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttrib4NubvARB
static 
var glVertexAttrib4Nuiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttrib4Nuiv
static 
var glVertexAttrib4NuivARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttrib4NuivARB
static 
var glVertexAttrib4Nusv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttrib4Nusv
static 
var glVertexAttrib4NusvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttrib4NusvARB
static 
var glVertexAttrib4bv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttrib4bv
static 
var glVertexAttrib4bvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttrib4bvARB
static 
var glVertexAttrib4d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib4d
static 
var glVertexAttrib4dARB:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib4dARB
static 
var glVertexAttrib4dNV:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttrib4dNV
static 
var glVertexAttrib4dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib4dv
static 
var glVertexAttrib4dvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib4dvARB
static 
var glVertexAttrib4dvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttrib4dvNV
static 
var glVertexAttrib4f:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib4f
static 
var glVertexAttrib4fARB:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib4fARB
static 
var glVertexAttrib4fNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexAttrib4fNV
static 
var glVertexAttrib4fv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib4fv
static 
var glVertexAttrib4fvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib4fvARB
static 
var glVertexAttrib4fvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttrib4fvNV
static 
var glVertexAttrib4hNV:@convention(c) (OpenGL.UInt, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV, OpenGL.HalfNV) -> () = _load_glVertexAttrib4hNV
static 
var glVertexAttrib4hvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttrib4hvNV
static 
var glVertexAttrib4iv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttrib4iv
static 
var glVertexAttrib4ivARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttrib4ivARB
static 
var glVertexAttrib4s:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib4s
static 
var glVertexAttrib4sARB:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib4sARB
static 
var glVertexAttrib4sNV:@convention(c) (OpenGL.UInt, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexAttrib4sNV
static 
var glVertexAttrib4sv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib4sv
static 
var glVertexAttrib4svARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib4svARB
static 
var glVertexAttrib4svNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttrib4svNV
static 
var glVertexAttrib4ubNV:@convention(c) (OpenGL.UInt, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte, OpenGL.UByte) -> () = _load_glVertexAttrib4ubNV
static 
var glVertexAttrib4ubv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttrib4ubv
static 
var glVertexAttrib4ubvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttrib4ubvARB
static 
var glVertexAttrib4ubvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttrib4ubvNV
static 
var glVertexAttrib4uiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttrib4uiv
static 
var glVertexAttrib4uivARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttrib4uivARB
static 
var glVertexAttrib4usv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttrib4usv
static 
var glVertexAttrib4usvARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttrib4usvARB
static 
var glVertexAttribArrayObjectATI:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.Size, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribArrayObjectATI
static 
var glVertexAttribBinding:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribBinding
static 
var glVertexAttribDivisor:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribDivisor
static 
var glVertexAttribDivisorANGLE:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribDivisorANGLE
static 
var glVertexAttribDivisorARB:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribDivisorARB
static 
var glVertexAttribDivisorEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribDivisorEXT
static 
var glVertexAttribDivisorNV:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribDivisorNV
static 
var glVertexAttribFormat:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexAttribFormat
static 
var glVertexAttribFormatNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.Size) -> () = _load_glVertexAttribFormatNV
static 
var glVertexAttribI1i:@convention(c) (OpenGL.UInt, OpenGL.Int) -> () = _load_glVertexAttribI1i
static 
var glVertexAttribI1iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int) -> () = _load_glVertexAttribI1iEXT
static 
var glVertexAttribI1iv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI1iv
static 
var glVertexAttribI1ivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI1ivEXT
static 
var glVertexAttribI1ui:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI1ui
static 
var glVertexAttribI1uiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI1uiEXT
static 
var glVertexAttribI1uiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI1uiv
static 
var glVertexAttribI1uivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI1uivEXT
static 
var glVertexAttribI2i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI2i
static 
var glVertexAttribI2iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI2iEXT
static 
var glVertexAttribI2iv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI2iv
static 
var glVertexAttribI2ivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI2ivEXT
static 
var glVertexAttribI2ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI2ui
static 
var glVertexAttribI2uiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI2uiEXT
static 
var glVertexAttribI2uiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI2uiv
static 
var glVertexAttribI2uivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI2uivEXT
static 
var glVertexAttribI3i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI3i
static 
var glVertexAttribI3iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI3iEXT
static 
var glVertexAttribI3iv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI3iv
static 
var glVertexAttribI3ivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI3ivEXT
static 
var glVertexAttribI3ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI3ui
static 
var glVertexAttribI3uiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI3uiEXT
static 
var glVertexAttribI3uiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI3uiv
static 
var glVertexAttribI3uivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI3uivEXT
static 
var glVertexAttribI4bv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttribI4bv
static 
var glVertexAttribI4bvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Byte>?) -> () = _load_glVertexAttribI4bvEXT
static 
var glVertexAttribI4i:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI4i
static 
var glVertexAttribI4iEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexAttribI4iEXT
static 
var glVertexAttribI4iv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI4iv
static 
var glVertexAttribI4ivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexAttribI4ivEXT
static 
var glVertexAttribI4sv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribI4sv
static 
var glVertexAttribI4svEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribI4svEXT
static 
var glVertexAttribI4ubv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttribI4ubv
static 
var glVertexAttribI4ubvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttribI4ubvEXT
static 
var glVertexAttribI4ui:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI4ui
static 
var glVertexAttribI4uiEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexAttribI4uiEXT
static 
var glVertexAttribI4uiv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI4uiv
static 
var glVertexAttribI4uivEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribI4uivEXT
static 
var glVertexAttribI4usv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttribI4usv
static 
var glVertexAttribI4usvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UShort>?) -> () = _load_glVertexAttribI4usvEXT
static 
var glVertexAttribIFormat:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexAttribIFormat
static 
var glVertexAttribIFormatNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glVertexAttribIFormatNV
static 
var glVertexAttribIPointer:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribIPointer
static 
var glVertexAttribIPointerEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribIPointerEXT
static 
var glVertexAttribL1d:@convention(c) (OpenGL.UInt, OpenGL.Double) -> () = _load_glVertexAttribL1d
static 
var glVertexAttribL1dEXT:@convention(c) (OpenGL.UInt, OpenGL.Double) -> () = _load_glVertexAttribL1dEXT
static 
var glVertexAttribL1dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL1dv
static 
var glVertexAttribL1dvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL1dvEXT
static 
var glVertexAttribL1i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int64EXT) -> () = _load_glVertexAttribL1i64NV
static 
var glVertexAttribL1i64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glVertexAttribL1i64vNV
static 
var glVertexAttribL1ui64ARB:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT) -> () = _load_glVertexAttribL1ui64ARB
static 
var glVertexAttribL1ui64NV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT) -> () = _load_glVertexAttribL1ui64NV
static 
var glVertexAttribL1ui64vARB:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glVertexAttribL1ui64vARB
static 
var glVertexAttribL1ui64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glVertexAttribL1ui64vNV
static 
var glVertexAttribL2d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL2d
static 
var glVertexAttribL2dEXT:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL2dEXT
static 
var glVertexAttribL2dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL2dv
static 
var glVertexAttribL2dvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL2dvEXT
static 
var glVertexAttribL2i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glVertexAttribL2i64NV
static 
var glVertexAttribL2i64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glVertexAttribL2i64vNV
static 
var glVertexAttribL2ui64NV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glVertexAttribL2ui64NV
static 
var glVertexAttribL2ui64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glVertexAttribL2ui64vNV
static 
var glVertexAttribL3d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL3d
static 
var glVertexAttribL3dEXT:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL3dEXT
static 
var glVertexAttribL3dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL3dv
static 
var glVertexAttribL3dvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL3dvEXT
static 
var glVertexAttribL3i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glVertexAttribL3i64NV
static 
var glVertexAttribL3i64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glVertexAttribL3i64vNV
static 
var glVertexAttribL3ui64NV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glVertexAttribL3ui64NV
static 
var glVertexAttribL3ui64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glVertexAttribL3ui64vNV
static 
var glVertexAttribL4d:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL4d
static 
var glVertexAttribL4dEXT:@convention(c) (OpenGL.UInt, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexAttribL4dEXT
static 
var glVertexAttribL4dv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL4dv
static 
var glVertexAttribL4dvEXT:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribL4dvEXT
static 
var glVertexAttribL4i64NV:@convention(c) (OpenGL.UInt, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT, OpenGL.Int64EXT) -> () = _load_glVertexAttribL4i64NV
static 
var glVertexAttribL4i64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Int64EXT>?) -> () = _load_glVertexAttribL4i64vNV
static 
var glVertexAttribL4ui64NV:@convention(c) (OpenGL.UInt, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT, OpenGL.UInt64EXT) -> () = _load_glVertexAttribL4ui64NV
static 
var glVertexAttribL4ui64vNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.UInt64EXT>?) -> () = _load_glVertexAttribL4ui64vNV
static 
var glVertexAttribLFormat:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexAttribLFormat
static 
var glVertexAttribLFormatNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glVertexAttribLFormatNV
static 
var glVertexAttribLPointer:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribLPointer
static 
var glVertexAttribLPointerEXT:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribLPointerEXT
static 
var glVertexAttribP1ui:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexAttribP1ui
static 
var glVertexAttribP1uiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribP1uiv
static 
var glVertexAttribP2ui:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexAttribP2ui
static 
var glVertexAttribP2uiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribP2uiv
static 
var glVertexAttribP3ui:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexAttribP3ui
static 
var glVertexAttribP3uiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribP3uiv
static 
var glVertexAttribP4ui:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, OpenGL.UInt) -> () = _load_glVertexAttribP4ui
static 
var glVertexAttribP4uiv:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Bool, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexAttribP4uiv
static 
var glVertexAttribParameteriAMD:@convention(c) (OpenGL.UInt, OpenGL.Enum, OpenGL.Int) -> () = _load_glVertexAttribParameteriAMD
static 
var glVertexAttribPointer:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribPointer
static 
var glVertexAttribPointerARB:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Bool, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribPointerARB
static 
var glVertexAttribPointerNV:@convention(c) (OpenGL.UInt, OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexAttribPointerNV
static 
var glVertexAttribs1dvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribs1dvNV
static 
var glVertexAttribs1fvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttribs1fvNV
static 
var glVertexAttribs1hvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttribs1hvNV
static 
var glVertexAttribs1svNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribs1svNV
static 
var glVertexAttribs2dvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribs2dvNV
static 
var glVertexAttribs2fvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttribs2fvNV
static 
var glVertexAttribs2hvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttribs2hvNV
static 
var glVertexAttribs2svNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribs2svNV
static 
var glVertexAttribs3dvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribs3dvNV
static 
var glVertexAttribs3fvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttribs3fvNV
static 
var glVertexAttribs3hvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttribs3hvNV
static 
var glVertexAttribs3svNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribs3svNV
static 
var glVertexAttribs4dvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexAttribs4dvNV
static 
var glVertexAttribs4fvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexAttribs4fvNV
static 
var glVertexAttribs4hvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexAttribs4hvNV
static 
var glVertexAttribs4svNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexAttribs4svNV
static 
var glVertexAttribs4ubvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UByte>?) -> () = _load_glVertexAttribs4ubvNV
static 
var glVertexBindingDivisor:@convention(c) (OpenGL.UInt, OpenGL.UInt) -> () = _load_glVertexBindingDivisor
static 
var glVertexBlendARB:@convention(c) (OpenGL.Int) -> () = _load_glVertexBlendARB
static 
var glVertexBlendEnvfATI:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glVertexBlendEnvfATI
static 
var glVertexBlendEnviATI:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glVertexBlendEnviATI
static 
var glVertexFormatNV:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size) -> () = _load_glVertexFormatNV
static 
var glVertexP2ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexP2ui
static 
var glVertexP2uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexP2uiv
static 
var glVertexP3ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexP3ui
static 
var glVertexP3uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexP3uiv
static 
var glVertexP4ui:@convention(c) (OpenGL.Enum, OpenGL.UInt) -> () = _load_glVertexP4ui
static 
var glVertexP4uiv:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.UInt>?) -> () = _load_glVertexP4uiv
static 
var glVertexPointer:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexPointer
static 
var glVertexPointerEXT:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexPointerEXT
static 
var glVertexPointerListIBM:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, OpenGL.Int) -> () = _load_glVertexPointerListIBM
static 
var glVertexPointervINTEL:@convention(c) (OpenGL.Int, OpenGL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = _load_glVertexPointervINTEL
static 
var glVertexStream1dATI:@convention(c) (OpenGL.Enum, OpenGL.Double) -> () = _load_glVertexStream1dATI
static 
var glVertexStream1dvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexStream1dvATI
static 
var glVertexStream1fATI:@convention(c) (OpenGL.Enum, OpenGL.Float) -> () = _load_glVertexStream1fATI
static 
var glVertexStream1fvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexStream1fvATI
static 
var glVertexStream1iATI:@convention(c) (OpenGL.Enum, OpenGL.Int) -> () = _load_glVertexStream1iATI
static 
var glVertexStream1ivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexStream1ivATI
static 
var glVertexStream1sATI:@convention(c) (OpenGL.Enum, OpenGL.Short) -> () = _load_glVertexStream1sATI
static 
var glVertexStream1svATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexStream1svATI
static 
var glVertexStream2dATI:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexStream2dATI
static 
var glVertexStream2dvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexStream2dvATI
static 
var glVertexStream2fATI:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexStream2fATI
static 
var glVertexStream2fvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexStream2fvATI
static 
var glVertexStream2iATI:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexStream2iATI
static 
var glVertexStream2ivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexStream2ivATI
static 
var glVertexStream2sATI:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexStream2sATI
static 
var glVertexStream2svATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexStream2svATI
static 
var glVertexStream3dATI:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexStream3dATI
static 
var glVertexStream3dvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexStream3dvATI
static 
var glVertexStream3fATI:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexStream3fATI
static 
var glVertexStream3fvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexStream3fvATI
static 
var glVertexStream3iATI:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexStream3iATI
static 
var glVertexStream3ivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexStream3ivATI
static 
var glVertexStream3sATI:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexStream3sATI
static 
var glVertexStream3svATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexStream3svATI
static 
var glVertexStream4dATI:@convention(c) (OpenGL.Enum, OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glVertexStream4dATI
static 
var glVertexStream4dvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glVertexStream4dvATI
static 
var glVertexStream4fATI:@convention(c) (OpenGL.Enum, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glVertexStream4fATI
static 
var glVertexStream4fvATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexStream4fvATI
static 
var glVertexStream4iATI:@convention(c) (OpenGL.Enum, OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glVertexStream4iATI
static 
var glVertexStream4ivATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glVertexStream4ivATI
static 
var glVertexStream4sATI:@convention(c) (OpenGL.Enum, OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glVertexStream4sATI
static 
var glVertexStream4svATI:@convention(c) (OpenGL.Enum, UnsafePointer<OpenGL.Short>?) -> () = _load_glVertexStream4svATI
static 
var glVertexWeightPointerEXT:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glVertexWeightPointerEXT
static 
var glVertexWeightfEXT:@convention(c) (OpenGL.Float) -> () = _load_glVertexWeightfEXT
static 
var glVertexWeightfvEXT:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glVertexWeightfvEXT
static 
var glVertexWeighthNV:@convention(c) (OpenGL.HalfNV) -> () = _load_glVertexWeighthNV
static 
var glVertexWeighthvNV:@convention(c) (UnsafePointer<OpenGL.HalfNV>?) -> () = _load_glVertexWeighthvNV
static 
var glVideoCaptureNV:@convention(c) (OpenGL.UInt, UnsafeMutablePointer<OpenGL.UInt>?, UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> OpenGL.Enum = _load_glVideoCaptureNV
static 
var glVideoCaptureStreamParameterdvNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Double>?) -> () = _load_glVideoCaptureStreamParameterdvNV
static 
var glVideoCaptureStreamParameterfvNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Float>?) -> () = _load_glVideoCaptureStreamParameterfvNV
static 
var glVideoCaptureStreamParameterivNV:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, UnsafePointer<OpenGL.Int>?) -> () = _load_glVideoCaptureStreamParameterivNV
static 
var glViewport:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Size, OpenGL.Size) -> () = _load_glViewport
static 
var glViewportArrayv:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glViewportArrayv
static 
var glViewportArrayvNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.Float>?) -> () = _load_glViewportArrayvNV
static 
var glViewportIndexedf:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glViewportIndexedf
static 
var glViewportIndexedfNV:@convention(c) (OpenGL.UInt, OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glViewportIndexedfNV
static 
var glViewportIndexedfv:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glViewportIndexedfv
static 
var glViewportIndexedfvNV:@convention(c) (OpenGL.UInt, UnsafePointer<OpenGL.Float>?) -> () = _load_glViewportIndexedfvNV
static 
var glWaitSync:@convention(c) (OpenGL.Sync, OpenGL.Bitfield, OpenGL.UInt64) -> () = _load_glWaitSync
static 
var glWaitSyncAPPLE:@convention(c) (OpenGL.Sync, OpenGL.Bitfield, OpenGL.UInt64) -> () = _load_glWaitSyncAPPLE
static 
var glWeightPathsNV:@convention(c) (OpenGL.UInt, OpenGL.Size, UnsafePointer<OpenGL.UInt>?, UnsafePointer<OpenGL.Float>?) -> () = _load_glWeightPathsNV
static 
var glWeightPointerARB:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glWeightPointerARB
static 
var glWeightPointerOES:@convention(c) (OpenGL.Int, OpenGL.Enum, OpenGL.Size, UnsafeRawPointer?) -> () = _load_glWeightPointerOES
static 
var glWeightbvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Byte>?) -> () = _load_glWeightbvARB
static 
var glWeightdvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Double>?) -> () = _load_glWeightdvARB
static 
var glWeightfvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Float>?) -> () = _load_glWeightfvARB
static 
var glWeightivARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Int>?) -> () = _load_glWeightivARB
static 
var glWeightsvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.Short>?) -> () = _load_glWeightsvARB
static 
var glWeightubvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UByte>?) -> () = _load_glWeightubvARB
static 
var glWeightuivARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UInt>?) -> () = _load_glWeightuivARB
static 
var glWeightusvARB:@convention(c) (OpenGL.Int, UnsafePointer<OpenGL.UShort>?) -> () = _load_glWeightusvARB
static 
var glWindowPos2d:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos2d
static 
var glWindowPos2dARB:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos2dARB
static 
var glWindowPos2dMESA:@convention(c) (OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos2dMESA
static 
var glWindowPos2dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos2dv
static 
var glWindowPos2dvARB:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos2dvARB
static 
var glWindowPos2dvMESA:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos2dvMESA
static 
var glWindowPos2f:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos2f
static 
var glWindowPos2fARB:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos2fARB
static 
var glWindowPos2fMESA:@convention(c) (OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos2fMESA
static 
var glWindowPos2fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos2fv
static 
var glWindowPos2fvARB:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos2fvARB
static 
var glWindowPos2fvMESA:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos2fvMESA
static 
var glWindowPos2i:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos2i
static 
var glWindowPos2iARB:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos2iARB
static 
var glWindowPos2iMESA:@convention(c) (OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos2iMESA
static 
var glWindowPos2iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos2iv
static 
var glWindowPos2ivARB:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos2ivARB
static 
var glWindowPos2ivMESA:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos2ivMESA
static 
var glWindowPos2s:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos2s
static 
var glWindowPos2sARB:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos2sARB
static 
var glWindowPos2sMESA:@convention(c) (OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos2sMESA
static 
var glWindowPos2sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos2sv
static 
var glWindowPos2svARB:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos2svARB
static 
var glWindowPos2svMESA:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos2svMESA
static 
var glWindowPos3d:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos3d
static 
var glWindowPos3dARB:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos3dARB
static 
var glWindowPos3dMESA:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos3dMESA
static 
var glWindowPos3dv:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos3dv
static 
var glWindowPos3dvARB:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos3dvARB
static 
var glWindowPos3dvMESA:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos3dvMESA
static 
var glWindowPos3f:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos3f
static 
var glWindowPos3fARB:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos3fARB
static 
var glWindowPos3fMESA:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos3fMESA
static 
var glWindowPos3fv:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos3fv
static 
var glWindowPos3fvARB:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos3fvARB
static 
var glWindowPos3fvMESA:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos3fvMESA
static 
var glWindowPos3i:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos3i
static 
var glWindowPos3iARB:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos3iARB
static 
var glWindowPos3iMESA:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos3iMESA
static 
var glWindowPos3iv:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos3iv
static 
var glWindowPos3ivARB:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos3ivARB
static 
var glWindowPos3ivMESA:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos3ivMESA
static 
var glWindowPos3s:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos3s
static 
var glWindowPos3sARB:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos3sARB
static 
var glWindowPos3sMESA:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos3sMESA
static 
var glWindowPos3sv:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos3sv
static 
var glWindowPos3svARB:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos3svARB
static 
var glWindowPos3svMESA:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos3svMESA
static 
var glWindowPos4dMESA:@convention(c) (OpenGL.Double, OpenGL.Double, OpenGL.Double, OpenGL.Double) -> () = _load_glWindowPos4dMESA
static 
var glWindowPos4dvMESA:@convention(c) (UnsafePointer<OpenGL.Double>?) -> () = _load_glWindowPos4dvMESA
static 
var glWindowPos4fMESA:@convention(c) (OpenGL.Float, OpenGL.Float, OpenGL.Float, OpenGL.Float) -> () = _load_glWindowPos4fMESA
static 
var glWindowPos4fvMESA:@convention(c) (UnsafePointer<OpenGL.Float>?) -> () = _load_glWindowPos4fvMESA
static 
var glWindowPos4iMESA:@convention(c) (OpenGL.Int, OpenGL.Int, OpenGL.Int, OpenGL.Int) -> () = _load_glWindowPos4iMESA
static 
var glWindowPos4ivMESA:@convention(c) (UnsafePointer<OpenGL.Int>?) -> () = _load_glWindowPos4ivMESA
static 
var glWindowPos4sMESA:@convention(c) (OpenGL.Short, OpenGL.Short, OpenGL.Short, OpenGL.Short) -> () = _load_glWindowPos4sMESA
static 
var glWindowPos4svMESA:@convention(c) (UnsafePointer<OpenGL.Short>?) -> () = _load_glWindowPos4svMESA
static 
var glWriteMaskEXT:@convention(c) (OpenGL.UInt, OpenGL.UInt, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum, OpenGL.Enum) -> () = _load_glWriteMaskEXT

}
fileprivate 
func _load_glAccum(op:OpenGL.Enum, value:OpenGL.Float)
{
    OpenGL.glAccum = unsafeBitCast(OpenGL.getfp("glAccum", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glAccum))
    OpenGL.glAccum(op, value)
}
fileprivate 
func _load_glAccumxOES(op:OpenGL.Enum, value:OpenGL.Fixed)
{
    OpenGL.glAccumxOES = unsafeBitCast(OpenGL.getfp("glAccumxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glAccumxOES))
    OpenGL.glAccumxOES(op, value)
}
fileprivate 
func _load_glActiveProgramEXT(program:OpenGL.UInt)
{
    OpenGL.glActiveProgramEXT = unsafeBitCast(OpenGL.getfp("glActiveProgramEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glActiveProgramEXT))
    OpenGL.glActiveProgramEXT(program)
}
fileprivate 
func _load_glActiveShaderProgram(pipeline:OpenGL.UInt, program:OpenGL.UInt)
{
    OpenGL.glActiveShaderProgram = unsafeBitCast(OpenGL.getfp("glActiveShaderProgram", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glActiveShaderProgram))
    OpenGL.glActiveShaderProgram(pipeline, program)
}
fileprivate 
func _load_glActiveShaderProgramEXT(pipeline:OpenGL.UInt, program:OpenGL.UInt)
{
    OpenGL.glActiveShaderProgramEXT = unsafeBitCast(OpenGL.getfp("glActiveShaderProgramEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glActiveShaderProgramEXT))
    OpenGL.glActiveShaderProgramEXT(pipeline, program)
}
fileprivate 
func _load_glActiveStencilFaceEXT(face:OpenGL.Enum)
{
    OpenGL.glActiveStencilFaceEXT = unsafeBitCast(OpenGL.getfp("glActiveStencilFaceEXT", support: [OpenGL.ss186]), to: Swift.type(of: OpenGL.glActiveStencilFaceEXT))
    OpenGL.glActiveStencilFaceEXT(face)
}
fileprivate 
func _load_glActiveTexture(texture:OpenGL.Enum)
{
    OpenGL.glActiveTexture = unsafeBitCast(OpenGL.getfp("glActiveTexture", support: [OpenGL.ss349, OpenGL.ss365]), to: Swift.type(of: OpenGL.glActiveTexture))
    OpenGL.glActiveTexture(texture)
}
fileprivate 
func _load_glActiveTextureARB(texture:OpenGL.Enum)
{
    OpenGL.glActiveTextureARB = unsafeBitCast(OpenGL.getfp("glActiveTextureARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glActiveTextureARB))
    OpenGL.glActiveTextureARB(texture)
}
fileprivate 
func _load_glActiveVaryingNV(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glActiveVaryingNV = unsafeBitCast(OpenGL.getfp("glActiveVaryingNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glActiveVaryingNV))
    OpenGL.glActiveVaryingNV(program, name)
}
fileprivate 
func _load_glAlphaFragmentOp1ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt)
{
    OpenGL.glAlphaFragmentOp1ATI = unsafeBitCast(OpenGL.getfp("glAlphaFragmentOp1ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glAlphaFragmentOp1ATI))
    OpenGL.glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)
}
fileprivate 
func _load_glAlphaFragmentOp2ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt, arg2:OpenGL.UInt, arg2Rep:OpenGL.UInt, arg2Mod:OpenGL.UInt)
{
    OpenGL.glAlphaFragmentOp2ATI = unsafeBitCast(OpenGL.getfp("glAlphaFragmentOp2ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glAlphaFragmentOp2ATI))
    OpenGL.glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
fileprivate 
func _load_glAlphaFragmentOp3ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt, arg2:OpenGL.UInt, arg2Rep:OpenGL.UInt, arg2Mod:OpenGL.UInt, arg3:OpenGL.UInt, arg3Rep:OpenGL.UInt, arg3Mod:OpenGL.UInt)
{
    OpenGL.glAlphaFragmentOp3ATI = unsafeBitCast(OpenGL.getfp("glAlphaFragmentOp3ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glAlphaFragmentOp3ATI))
    OpenGL.glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
fileprivate 
func _load_glAlphaFunc(f:OpenGL.Enum, ref:OpenGL.Float)
{
    OpenGL.glAlphaFunc = unsafeBitCast(OpenGL.getfp("glAlphaFunc", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glAlphaFunc))
    OpenGL.glAlphaFunc(f, ref)
}
fileprivate 
func _load_glAlphaFuncQCOM(f:OpenGL.Enum, ref:OpenGL.ClampFloat)
{
    OpenGL.glAlphaFuncQCOM = unsafeBitCast(OpenGL.getfp("glAlphaFuncQCOM", support: [OpenGL.ss314]), to: Swift.type(of: OpenGL.glAlphaFuncQCOM))
    OpenGL.glAlphaFuncQCOM(f, ref)
}
fileprivate 
func _load_glAlphaFuncx(f:OpenGL.Enum, ref:OpenGL.Fixed)
{
    OpenGL.glAlphaFuncx = unsafeBitCast(OpenGL.getfp("glAlphaFuncx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glAlphaFuncx))
    OpenGL.glAlphaFuncx(f, ref)
}
fileprivate 
func _load_glAlphaFuncxOES(f:OpenGL.Enum, ref:OpenGL.Fixed)
{
    OpenGL.glAlphaFuncxOES = unsafeBitCast(OpenGL.getfp("glAlphaFuncxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glAlphaFuncxOES))
    OpenGL.glAlphaFuncxOES(f, ref)
}
fileprivate 
func _load_glApplyFramebufferAttachmentCMAAINTEL()
{
    OpenGL.glApplyFramebufferAttachmentCMAAINTEL = unsafeBitCast(OpenGL.getfp("glApplyFramebufferAttachmentCMAAINTEL", support: [OpenGL.ss216]), to: Swift.type(of: OpenGL.glApplyFramebufferAttachmentCMAAINTEL))
    OpenGL.glApplyFramebufferAttachmentCMAAINTEL()
}
fileprivate 
func _load_glApplyTextureEXT(mode:OpenGL.Enum)
{
    OpenGL.glApplyTextureEXT = unsafeBitCast(OpenGL.getfp("glApplyTextureEXT", support: [OpenGL.ss164]), to: Swift.type(of: OpenGL.glApplyTextureEXT))
    OpenGL.glApplyTextureEXT(mode)
}
fileprivate 
func _load_glAreProgramsResidentNV(n:OpenGL.Size, programs:UnsafePointer<OpenGL.UInt>?, residences:UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool
{
    OpenGL.glAreProgramsResidentNV = unsafeBitCast(OpenGL.getfp("glAreProgramsResidentNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glAreProgramsResidentNV))
    return OpenGL.glAreProgramsResidentNV(n, programs, residences)
}
fileprivate 
func _load_glAreTexturesResident(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?, residences:UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool
{
    OpenGL.glAreTexturesResident = unsafeBitCast(OpenGL.getfp("glAreTexturesResident", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glAreTexturesResident))
    return OpenGL.glAreTexturesResident(n, textures, residences)
}
fileprivate 
func _load_glAreTexturesResidentEXT(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?, residences:UnsafeMutablePointer<OpenGL.Bool>?) -> OpenGL.Bool
{
    OpenGL.glAreTexturesResidentEXT = unsafeBitCast(OpenGL.getfp("glAreTexturesResidentEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glAreTexturesResidentEXT))
    return OpenGL.glAreTexturesResidentEXT(n, textures, residences)
}
fileprivate 
func _load_glArrayElement(i:OpenGL.Int)
{
    OpenGL.glArrayElement = unsafeBitCast(OpenGL.getfp("glArrayElement", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glArrayElement))
    OpenGL.glArrayElement(i)
}
fileprivate 
func _load_glArrayElementEXT(i:OpenGL.Int)
{
    OpenGL.glArrayElementEXT = unsafeBitCast(OpenGL.getfp("glArrayElementEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glArrayElementEXT))
    OpenGL.glArrayElementEXT(i)
}
fileprivate 
func _load_glArrayObjectATI(array:OpenGL.Enum, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, buffer:OpenGL.UInt, offset:OpenGL.UInt)
{
    OpenGL.glArrayObjectATI = unsafeBitCast(OpenGL.getfp("glArrayObjectATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glArrayObjectATI))
    OpenGL.glArrayObjectATI(array, size, type, stride, buffer, offset)
}
fileprivate 
func _load_glAsyncMarkerSGIX(marker:OpenGL.UInt)
{
    OpenGL.glAsyncMarkerSGIX = unsafeBitCast(OpenGL.getfp("glAsyncMarkerSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glAsyncMarkerSGIX))
    OpenGL.glAsyncMarkerSGIX(marker)
}
fileprivate 
func _load_glAttachObjectARB(containerObj:OpenGL.HandleARB, obj:OpenGL.HandleARB)
{
    OpenGL.glAttachObjectARB = unsafeBitCast(OpenGL.getfp("glAttachObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glAttachObjectARB))
    OpenGL.glAttachObjectARB(containerObj, obj)
}
fileprivate 
func _load_glAttachShader(program:OpenGL.UInt, shader:OpenGL.UInt)
{
    OpenGL.glAttachShader = unsafeBitCast(OpenGL.getfp("glAttachShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glAttachShader))
    OpenGL.glAttachShader(program, shader)
}
fileprivate 
func _load_glBegin(mode:OpenGL.Enum)
{
    OpenGL.glBegin = unsafeBitCast(OpenGL.getfp("glBegin", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glBegin))
    OpenGL.glBegin(mode)
}
fileprivate 
func _load_glBeginConditionalRender(id:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBeginConditionalRender = unsafeBitCast(OpenGL.getfp("glBeginConditionalRender", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glBeginConditionalRender))
    OpenGL.glBeginConditionalRender(id, mode)
}
fileprivate 
func _load_glBeginConditionalRenderNV(id:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBeginConditionalRenderNV = unsafeBitCast(OpenGL.getfp("glBeginConditionalRenderNV", support: [OpenGL.ss231]), to: Swift.type(of: OpenGL.glBeginConditionalRenderNV))
    OpenGL.glBeginConditionalRenderNV(id, mode)
}
fileprivate 
func _load_glBeginConditionalRenderNVX(id:OpenGL.UInt)
{
    OpenGL.glBeginConditionalRenderNVX = unsafeBitCast(OpenGL.getfp("glBeginConditionalRenderNVX", support: [OpenGL.ss225]), to: Swift.type(of: OpenGL.glBeginConditionalRenderNVX))
    OpenGL.glBeginConditionalRenderNVX(id)
}
fileprivate 
func _load_glBeginFragmentShaderATI()
{
    OpenGL.glBeginFragmentShaderATI = unsafeBitCast(OpenGL.getfp("glBeginFragmentShaderATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glBeginFragmentShaderATI))
    OpenGL.glBeginFragmentShaderATI()
}
fileprivate 
func _load_glBeginOcclusionQueryNV(id:OpenGL.UInt)
{
    OpenGL.glBeginOcclusionQueryNV = unsafeBitCast(OpenGL.getfp("glBeginOcclusionQueryNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glBeginOcclusionQueryNV))
    OpenGL.glBeginOcclusionQueryNV(id)
}
fileprivate 
func _load_glBeginPerfMonitorAMD(monitor:OpenGL.UInt)
{
    OpenGL.glBeginPerfMonitorAMD = unsafeBitCast(OpenGL.getfp("glBeginPerfMonitorAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glBeginPerfMonitorAMD))
    OpenGL.glBeginPerfMonitorAMD(monitor)
}
fileprivate 
func _load_glBeginPerfQueryINTEL(queryHandle:OpenGL.UInt)
{
    OpenGL.glBeginPerfQueryINTEL = unsafeBitCast(OpenGL.getfp("glBeginPerfQueryINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glBeginPerfQueryINTEL))
    OpenGL.glBeginPerfQueryINTEL(queryHandle)
}
fileprivate 
func _load_glBeginQuery(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBeginQuery = unsafeBitCast(OpenGL.getfp("glBeginQuery", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glBeginQuery))
    OpenGL.glBeginQuery(target, id)
}
fileprivate 
func _load_glBeginQueryARB(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBeginQueryARB = unsafeBitCast(OpenGL.getfp("glBeginQueryARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glBeginQueryARB))
    OpenGL.glBeginQueryARB(target, id)
}
fileprivate 
func _load_glBeginQueryEXT(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBeginQueryEXT = unsafeBitCast(OpenGL.getfp("glBeginQueryEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glBeginQueryEXT))
    OpenGL.glBeginQueryEXT(target, id)
}
fileprivate 
func _load_glBeginQueryIndexed(target:OpenGL.Enum, index:OpenGL.UInt, id:OpenGL.UInt)
{
    OpenGL.glBeginQueryIndexed = unsafeBitCast(OpenGL.getfp("glBeginQueryIndexed", support: [OpenGL.ss358, OpenGL.ss101]), to: Swift.type(of: OpenGL.glBeginQueryIndexed))
    OpenGL.glBeginQueryIndexed(target, index, id)
}
fileprivate 
func _load_glBeginTransformFeedback(primitiveMode:OpenGL.Enum)
{
    OpenGL.glBeginTransformFeedback = unsafeBitCast(OpenGL.getfp("glBeginTransformFeedback", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glBeginTransformFeedback))
    OpenGL.glBeginTransformFeedback(primitiveMode)
}
fileprivate 
func _load_glBeginTransformFeedbackEXT(primitiveMode:OpenGL.Enum)
{
    OpenGL.glBeginTransformFeedbackEXT = unsafeBitCast(OpenGL.getfp("glBeginTransformFeedbackEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glBeginTransformFeedbackEXT))
    OpenGL.glBeginTransformFeedbackEXT(primitiveMode)
}
fileprivate 
func _load_glBeginTransformFeedbackNV(primitiveMode:OpenGL.Enum)
{
    OpenGL.glBeginTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glBeginTransformFeedbackNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glBeginTransformFeedbackNV))
    OpenGL.glBeginTransformFeedbackNV(primitiveMode)
}
fileprivate 
func _load_glBeginVertexShaderEXT()
{
    OpenGL.glBeginVertexShaderEXT = unsafeBitCast(OpenGL.getfp("glBeginVertexShaderEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBeginVertexShaderEXT))
    OpenGL.glBeginVertexShaderEXT()
}
fileprivate 
func _load_glBeginVideoCaptureNV(video_capture_slot:OpenGL.UInt)
{
    OpenGL.glBeginVideoCaptureNV = unsafeBitCast(OpenGL.getfp("glBeginVideoCaptureNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glBeginVideoCaptureNV))
    OpenGL.glBeginVideoCaptureNV(video_capture_slot)
}
fileprivate 
func _load_glBindAttribLocation(program:OpenGL.UInt, index:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glBindAttribLocation = unsafeBitCast(OpenGL.getfp("glBindAttribLocation", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBindAttribLocation))
    OpenGL.glBindAttribLocation(program, index, name)
}
fileprivate 
func _load_glBindAttribLocationARB(programObj:OpenGL.HandleARB, index:OpenGL.UInt, name:UnsafePointer<OpenGL.CharARB>?)
{
    OpenGL.glBindAttribLocationARB = unsafeBitCast(OpenGL.getfp("glBindAttribLocationARB", support: [OpenGL.ss111]), to: Swift.type(of: OpenGL.glBindAttribLocationARB))
    OpenGL.glBindAttribLocationARB(programObj, index, name)
}
fileprivate 
func _load_glBindBuffer(target:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glBindBuffer = unsafeBitCast(OpenGL.getfp("glBindBuffer", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBindBuffer))
    OpenGL.glBindBuffer(target, buffer)
}
fileprivate 
func _load_glBindBufferARB(target:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glBindBufferARB = unsafeBitCast(OpenGL.getfp("glBindBufferARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glBindBufferARB))
    OpenGL.glBindBufferARB(target, buffer)
}
fileprivate 
func _load_glBindBufferBase(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt)
{
    OpenGL.glBindBufferBase = unsafeBitCast(OpenGL.getfp("glBindBufferBase", support: [OpenGL.ss354, OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glBindBufferBase))
    OpenGL.glBindBufferBase(target, index, buffer)
}
fileprivate 
func _load_glBindBufferBaseEXT(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt)
{
    OpenGL.glBindBufferBaseEXT = unsafeBitCast(OpenGL.getfp("glBindBufferBaseEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glBindBufferBaseEXT))
    OpenGL.glBindBufferBaseEXT(target, index, buffer)
}
fileprivate 
func _load_glBindBufferBaseNV(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt)
{
    OpenGL.glBindBufferBaseNV = unsafeBitCast(OpenGL.getfp("glBindBufferBaseNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glBindBufferBaseNV))
    OpenGL.glBindBufferBaseNV(target, index, buffer)
}
fileprivate 
func _load_glBindBufferOffsetEXT(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer)
{
    OpenGL.glBindBufferOffsetEXT = unsafeBitCast(OpenGL.getfp("glBindBufferOffsetEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glBindBufferOffsetEXT))
    OpenGL.glBindBufferOffsetEXT(target, index, buffer, offset)
}
fileprivate 
func _load_glBindBufferOffsetNV(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer)
{
    OpenGL.glBindBufferOffsetNV = unsafeBitCast(OpenGL.getfp("glBindBufferOffsetNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glBindBufferOffsetNV))
    OpenGL.glBindBufferOffsetNV(target, index, buffer, offset)
}
fileprivate 
func _load_glBindBufferRange(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glBindBufferRange = unsafeBitCast(OpenGL.getfp("glBindBufferRange", support: [OpenGL.ss354, OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glBindBufferRange))
    OpenGL.glBindBufferRange(target, index, buffer, offset, size)
}
fileprivate 
func _load_glBindBufferRangeEXT(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glBindBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glBindBufferRangeEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glBindBufferRangeEXT))
    OpenGL.glBindBufferRangeEXT(target, index, buffer, offset, size)
}
fileprivate 
func _load_glBindBufferRangeNV(target:OpenGL.Enum, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glBindBufferRangeNV = unsafeBitCast(OpenGL.getfp("glBindBufferRangeNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glBindBufferRangeNV))
    OpenGL.glBindBufferRangeNV(target, index, buffer, offset, size)
}
fileprivate 
func _load_glBindBuffersBase(target:OpenGL.Enum, first:OpenGL.UInt, count:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glBindBuffersBase = unsafeBitCast(OpenGL.getfp("glBindBuffersBase", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindBuffersBase))
    OpenGL.glBindBuffersBase(target, first, count, buffers)
}
fileprivate 
func _load_glBindBuffersRange(target:OpenGL.Enum, first:OpenGL.UInt, count:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?, offsets:UnsafePointer<OpenGL.IntPointer>?, sizes:UnsafePointer<OpenGL.SizePointer>?)
{
    OpenGL.glBindBuffersRange = unsafeBitCast(OpenGL.getfp("glBindBuffersRange", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindBuffersRange))
    OpenGL.glBindBuffersRange(target, first, count, buffers, offsets, sizes)
}
fileprivate 
func _load_glBindFragDataLocation(program:OpenGL.UInt, color:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glBindFragDataLocation = unsafeBitCast(OpenGL.getfp("glBindFragDataLocation", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glBindFragDataLocation))
    OpenGL.glBindFragDataLocation(program, color, name)
}
fileprivate 
func _load_glBindFragDataLocationEXT(program:OpenGL.UInt, color:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glBindFragDataLocationEXT = unsafeBitCast(OpenGL.getfp("glBindFragDataLocationEXT", support: [OpenGL.ss129, OpenGL.ss159]), to: Swift.type(of: OpenGL.glBindFragDataLocationEXT))
    OpenGL.glBindFragDataLocationEXT(program, color, name)
}
fileprivate 
func _load_glBindFragDataLocationIndexed(program:OpenGL.UInt, colorNumber:OpenGL.UInt, index:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glBindFragDataLocationIndexed = unsafeBitCast(OpenGL.getfp("glBindFragDataLocationIndexed", support: [OpenGL.ss357, OpenGL.ss33]), to: Swift.type(of: OpenGL.glBindFragDataLocationIndexed))
    OpenGL.glBindFragDataLocationIndexed(program, colorNumber, index, name)
}
fileprivate 
func _load_glBindFragDataLocationIndexedEXT(program:OpenGL.UInt, colorNumber:OpenGL.UInt, index:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glBindFragDataLocationIndexedEXT = unsafeBitCast(OpenGL.getfp("glBindFragDataLocationIndexedEXT", support: [OpenGL.ss129]), to: Swift.type(of: OpenGL.glBindFragDataLocationIndexedEXT))
    OpenGL.glBindFragDataLocationIndexedEXT(program, colorNumber, index, name)
}
fileprivate 
func _load_glBindFragmentShaderATI(id:OpenGL.UInt)
{
    OpenGL.glBindFragmentShaderATI = unsafeBitCast(OpenGL.getfp("glBindFragmentShaderATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glBindFragmentShaderATI))
    OpenGL.glBindFragmentShaderATI(id)
}
fileprivate 
func _load_glBindFramebuffer(target:OpenGL.Enum, framebuffer:OpenGL.UInt)
{
    OpenGL.glBindFramebuffer = unsafeBitCast(OpenGL.getfp("glBindFramebuffer", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glBindFramebuffer))
    OpenGL.glBindFramebuffer(target, framebuffer)
}
fileprivate 
func _load_glBindFramebufferEXT(target:OpenGL.Enum, framebuffer:OpenGL.UInt)
{
    OpenGL.glBindFramebufferEXT = unsafeBitCast(OpenGL.getfp("glBindFramebufferEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glBindFramebufferEXT))
    OpenGL.glBindFramebufferEXT(target, framebuffer)
}
fileprivate 
func _load_glBindFramebufferOES(target:OpenGL.Enum, framebuffer:OpenGL.UInt)
{
    OpenGL.glBindFramebufferOES = unsafeBitCast(OpenGL.getfp("glBindFramebufferOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glBindFramebufferOES))
    OpenGL.glBindFramebufferOES(target, framebuffer)
}
fileprivate 
func _load_glBindImageTexture(unit:OpenGL.UInt, texture:OpenGL.UInt, level:OpenGL.Int, layered:OpenGL.Bool, layer:OpenGL.Int, access:OpenGL.Enum, format:OpenGL.Enum)
{
    OpenGL.glBindImageTexture = unsafeBitCast(OpenGL.getfp("glBindImageTexture", support: [OpenGL.ss360, OpenGL.ss367, OpenGL.ss82]), to: Swift.type(of: OpenGL.glBindImageTexture))
    OpenGL.glBindImageTexture(unit, texture, level, layered, layer, access, format)
}
fileprivate 
func _load_glBindImageTextureEXT(index:OpenGL.UInt, texture:OpenGL.UInt, level:OpenGL.Int, layered:OpenGL.Bool, layer:OpenGL.Int, access:OpenGL.Enum, format:OpenGL.Int)
{
    OpenGL.glBindImageTextureEXT = unsafeBitCast(OpenGL.getfp("glBindImageTextureEXT", support: [OpenGL.ss183]), to: Swift.type(of: OpenGL.glBindImageTextureEXT))
    OpenGL.glBindImageTextureEXT(index, texture, level, layered, layer, access, format)
}
fileprivate 
func _load_glBindImageTextures(first:OpenGL.UInt, count:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glBindImageTextures = unsafeBitCast(OpenGL.getfp("glBindImageTextures", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindImageTextures))
    OpenGL.glBindImageTextures(first, count, textures)
}
fileprivate 
func _load_glBindLightParameterEXT(light:OpenGL.Enum, value:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glBindLightParameterEXT = unsafeBitCast(OpenGL.getfp("glBindLightParameterEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindLightParameterEXT))
    return OpenGL.glBindLightParameterEXT(light, value)
}
fileprivate 
func _load_glBindMaterialParameterEXT(face:OpenGL.Enum, value:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glBindMaterialParameterEXT = unsafeBitCast(OpenGL.getfp("glBindMaterialParameterEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindMaterialParameterEXT))
    return OpenGL.glBindMaterialParameterEXT(face, value)
}
fileprivate 
func _load_glBindMultiTextureEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, texture:OpenGL.UInt)
{
    OpenGL.glBindMultiTextureEXT = unsafeBitCast(OpenGL.getfp("glBindMultiTextureEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glBindMultiTextureEXT))
    OpenGL.glBindMultiTextureEXT(texunit, target, texture)
}
fileprivate 
func _load_glBindParameterEXT(value:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glBindParameterEXT = unsafeBitCast(OpenGL.getfp("glBindParameterEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindParameterEXT))
    return OpenGL.glBindParameterEXT(value)
}
fileprivate 
func _load_glBindProgramARB(target:OpenGL.Enum, program:OpenGL.UInt)
{
    OpenGL.glBindProgramARB = unsafeBitCast(OpenGL.getfp("glBindProgramARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glBindProgramARB))
    OpenGL.glBindProgramARB(target, program)
}
fileprivate 
func _load_glBindProgramNV(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBindProgramNV = unsafeBitCast(OpenGL.getfp("glBindProgramNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glBindProgramNV))
    OpenGL.glBindProgramNV(target, id)
}
fileprivate 
func _load_glBindProgramPipeline(pipeline:OpenGL.UInt)
{
    OpenGL.glBindProgramPipeline = unsafeBitCast(OpenGL.getfp("glBindProgramPipeline", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glBindProgramPipeline))
    OpenGL.glBindProgramPipeline(pipeline)
}
fileprivate 
func _load_glBindProgramPipelineEXT(pipeline:OpenGL.UInt)
{
    OpenGL.glBindProgramPipelineEXT = unsafeBitCast(OpenGL.getfp("glBindProgramPipelineEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glBindProgramPipelineEXT))
    OpenGL.glBindProgramPipelineEXT(pipeline)
}
fileprivate 
func _load_glBindRenderbuffer(target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glBindRenderbuffer = unsafeBitCast(OpenGL.getfp("glBindRenderbuffer", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glBindRenderbuffer))
    OpenGL.glBindRenderbuffer(target, renderbuffer)
}
fileprivate 
func _load_glBindRenderbufferEXT(target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glBindRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glBindRenderbufferEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glBindRenderbufferEXT))
    OpenGL.glBindRenderbufferEXT(target, renderbuffer)
}
fileprivate 
func _load_glBindRenderbufferOES(target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glBindRenderbufferOES = unsafeBitCast(OpenGL.getfp("glBindRenderbufferOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glBindRenderbufferOES))
    OpenGL.glBindRenderbufferOES(target, renderbuffer)
}
fileprivate 
func _load_glBindSampler(unit:OpenGL.UInt, sampler:OpenGL.UInt)
{
    OpenGL.glBindSampler = unsafeBitCast(OpenGL.getfp("glBindSampler", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glBindSampler))
    OpenGL.glBindSampler(unit, sampler)
}
fileprivate 
func _load_glBindSamplers(first:OpenGL.UInt, count:OpenGL.Size, samplers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glBindSamplers = unsafeBitCast(OpenGL.getfp("glBindSamplers", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindSamplers))
    OpenGL.glBindSamplers(first, count, samplers)
}
fileprivate 
func _load_glBindTexGenParameterEXT(unit:OpenGL.Enum, coord:OpenGL.Enum, value:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glBindTexGenParameterEXT = unsafeBitCast(OpenGL.getfp("glBindTexGenParameterEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindTexGenParameterEXT))
    return OpenGL.glBindTexGenParameterEXT(unit, coord, value)
}
fileprivate 
func _load_glBindTexture(target:OpenGL.Enum, texture:OpenGL.UInt)
{
    OpenGL.glBindTexture = unsafeBitCast(OpenGL.getfp("glBindTexture", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBindTexture))
    OpenGL.glBindTexture(target, texture)
}
fileprivate 
func _load_glBindTextureEXT(target:OpenGL.Enum, texture:OpenGL.UInt)
{
    OpenGL.glBindTextureEXT = unsafeBitCast(OpenGL.getfp("glBindTextureEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glBindTextureEXT))
    OpenGL.glBindTextureEXT(target, texture)
}
fileprivate 
func _load_glBindTextureUnit(unit:OpenGL.UInt, texture:OpenGL.UInt)
{
    OpenGL.glBindTextureUnit = unsafeBitCast(OpenGL.getfp("glBindTextureUnit", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glBindTextureUnit))
    OpenGL.glBindTextureUnit(unit, texture)
}
fileprivate 
func _load_glBindTextureUnitParameterEXT(unit:OpenGL.Enum, value:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glBindTextureUnitParameterEXT = unsafeBitCast(OpenGL.getfp("glBindTextureUnitParameterEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindTextureUnitParameterEXT))
    return OpenGL.glBindTextureUnitParameterEXT(unit, value)
}
fileprivate 
func _load_glBindTextures(first:OpenGL.UInt, count:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glBindTextures = unsafeBitCast(OpenGL.getfp("glBindTextures", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindTextures))
    OpenGL.glBindTextures(first, count, textures)
}
fileprivate 
func _load_glBindTransformFeedback(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBindTransformFeedback = unsafeBitCast(OpenGL.getfp("glBindTransformFeedback", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glBindTransformFeedback))
    OpenGL.glBindTransformFeedback(target, id)
}
fileprivate 
func _load_glBindTransformFeedbackNV(target:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glBindTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glBindTransformFeedbackNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glBindTransformFeedbackNV))
    OpenGL.glBindTransformFeedbackNV(target, id)
}
fileprivate 
func _load_glBindVertexArray(array:OpenGL.UInt)
{
    OpenGL.glBindVertexArray = unsafeBitCast(OpenGL.getfp("glBindVertexArray", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss105]), to: Swift.type(of: OpenGL.glBindVertexArray))
    OpenGL.glBindVertexArray(array)
}
fileprivate 
func _load_glBindVertexArrayAPPLE(array:OpenGL.UInt)
{
    OpenGL.glBindVertexArrayAPPLE = unsafeBitCast(OpenGL.getfp("glBindVertexArrayAPPLE", support: [OpenGL.ss25]), to: Swift.type(of: OpenGL.glBindVertexArrayAPPLE))
    OpenGL.glBindVertexArrayAPPLE(array)
}
fileprivate 
func _load_glBindVertexArrayOES(array:OpenGL.UInt)
{
    OpenGL.glBindVertexArrayOES = unsafeBitCast(OpenGL.getfp("glBindVertexArrayOES", support: [OpenGL.ss310]), to: Swift.type(of: OpenGL.glBindVertexArrayOES))
    OpenGL.glBindVertexArrayOES(array)
}
fileprivate 
func _load_glBindVertexBuffer(bindingindex:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, stride:OpenGL.Size)
{
    OpenGL.glBindVertexBuffer = unsafeBitCast(OpenGL.getfp("glBindVertexBuffer", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss107]), to: Swift.type(of: OpenGL.glBindVertexBuffer))
    OpenGL.glBindVertexBuffer(bindingindex, buffer, offset, stride)
}
fileprivate 
func _load_glBindVertexBuffers(first:OpenGL.UInt, count:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?, offsets:UnsafePointer<OpenGL.IntPointer>?, strides:UnsafePointer<OpenGL.Size>?)
{
    OpenGL.glBindVertexBuffers = unsafeBitCast(OpenGL.getfp("glBindVertexBuffers", support: [OpenGL.ss362, OpenGL.ss67]), to: Swift.type(of: OpenGL.glBindVertexBuffers))
    OpenGL.glBindVertexBuffers(first, count, buffers, offsets, strides)
}
fileprivate 
func _load_glBindVertexShaderEXT(id:OpenGL.UInt)
{
    OpenGL.glBindVertexShaderEXT = unsafeBitCast(OpenGL.getfp("glBindVertexShaderEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glBindVertexShaderEXT))
    OpenGL.glBindVertexShaderEXT(id)
}
fileprivate 
func _load_glBindVideoCaptureStreamBufferNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, frame_region:OpenGL.Enum, offset:OpenGL.IntPointerARB)
{
    OpenGL.glBindVideoCaptureStreamBufferNV = unsafeBitCast(OpenGL.getfp("glBindVideoCaptureStreamBufferNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glBindVideoCaptureStreamBufferNV))
    OpenGL.glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset)
}
fileprivate 
func _load_glBindVideoCaptureStreamTextureNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, frame_region:OpenGL.Enum, target:OpenGL.Enum, texture:OpenGL.UInt)
{
    OpenGL.glBindVideoCaptureStreamTextureNV = unsafeBitCast(OpenGL.getfp("glBindVideoCaptureStreamTextureNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glBindVideoCaptureStreamTextureNV))
    OpenGL.glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture)
}
fileprivate 
func _load_glBinormal3bEXT(bx:OpenGL.Byte, by:OpenGL.Byte, bz:OpenGL.Byte)
{
    OpenGL.glBinormal3bEXT = unsafeBitCast(OpenGL.getfp("glBinormal3bEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3bEXT))
    OpenGL.glBinormal3bEXT(bx, by, bz)
}
fileprivate 
func _load_glBinormal3bvEXT(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glBinormal3bvEXT = unsafeBitCast(OpenGL.getfp("glBinormal3bvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3bvEXT))
    OpenGL.glBinormal3bvEXT(v)
}
fileprivate 
func _load_glBinormal3dEXT(bx:OpenGL.Double, by:OpenGL.Double, bz:OpenGL.Double)
{
    OpenGL.glBinormal3dEXT = unsafeBitCast(OpenGL.getfp("glBinormal3dEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3dEXT))
    OpenGL.glBinormal3dEXT(bx, by, bz)
}
fileprivate 
func _load_glBinormal3dvEXT(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glBinormal3dvEXT = unsafeBitCast(OpenGL.getfp("glBinormal3dvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3dvEXT))
    OpenGL.glBinormal3dvEXT(v)
}
fileprivate 
func _load_glBinormal3fEXT(bx:OpenGL.Float, by:OpenGL.Float, bz:OpenGL.Float)
{
    OpenGL.glBinormal3fEXT = unsafeBitCast(OpenGL.getfp("glBinormal3fEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3fEXT))
    OpenGL.glBinormal3fEXT(bx, by, bz)
}
fileprivate 
func _load_glBinormal3fvEXT(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glBinormal3fvEXT = unsafeBitCast(OpenGL.getfp("glBinormal3fvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3fvEXT))
    OpenGL.glBinormal3fvEXT(v)
}
fileprivate 
func _load_glBinormal3iEXT(bx:OpenGL.Int, by:OpenGL.Int, bz:OpenGL.Int)
{
    OpenGL.glBinormal3iEXT = unsafeBitCast(OpenGL.getfp("glBinormal3iEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3iEXT))
    OpenGL.glBinormal3iEXT(bx, by, bz)
}
fileprivate 
func _load_glBinormal3ivEXT(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glBinormal3ivEXT = unsafeBitCast(OpenGL.getfp("glBinormal3ivEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3ivEXT))
    OpenGL.glBinormal3ivEXT(v)
}
fileprivate 
func _load_glBinormal3sEXT(bx:OpenGL.Short, by:OpenGL.Short, bz:OpenGL.Short)
{
    OpenGL.glBinormal3sEXT = unsafeBitCast(OpenGL.getfp("glBinormal3sEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3sEXT))
    OpenGL.glBinormal3sEXT(bx, by, bz)
}
fileprivate 
func _load_glBinormal3svEXT(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glBinormal3svEXT = unsafeBitCast(OpenGL.getfp("glBinormal3svEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormal3svEXT))
    OpenGL.glBinormal3svEXT(v)
}
fileprivate 
func _load_glBinormalPointerEXT(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glBinormalPointerEXT = unsafeBitCast(OpenGL.getfp("glBinormalPointerEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glBinormalPointerEXT))
    OpenGL.glBinormalPointerEXT(type, stride, pointer)
}
fileprivate 
func _load_glBitmap(width:OpenGL.Size, height:OpenGL.Size, xorig:OpenGL.Float, yorig:OpenGL.Float, xmove:OpenGL.Float, ymove:OpenGL.Float, bitmap:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glBitmap = unsafeBitCast(OpenGL.getfp("glBitmap", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glBitmap))
    OpenGL.glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)
}
fileprivate 
func _load_glBitmapxOES(width:OpenGL.Size, height:OpenGL.Size, xorig:OpenGL.Fixed, yorig:OpenGL.Fixed, xmove:OpenGL.Fixed, ymove:OpenGL.Fixed, bitmap:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glBitmapxOES = unsafeBitCast(OpenGL.getfp("glBitmapxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glBitmapxOES))
    OpenGL.glBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap)
}
fileprivate 
func _load_glBlendBarrier()
{
    OpenGL.glBlendBarrier = unsafeBitCast(OpenGL.getfp("glBlendBarrier", support: [OpenGL.ss368]), to: Swift.type(of: OpenGL.glBlendBarrier))
    OpenGL.glBlendBarrier()
}
fileprivate 
func _load_glBlendBarrierKHR()
{
    OpenGL.glBlendBarrierKHR = unsafeBitCast(OpenGL.getfp("glBlendBarrierKHR", support: [OpenGL.ss220]), to: Swift.type(of: OpenGL.glBlendBarrierKHR))
    OpenGL.glBlendBarrierKHR()
}
fileprivate 
func _load_glBlendBarrierNV()
{
    OpenGL.glBlendBarrierNV = unsafeBitCast(OpenGL.getfp("glBlendBarrierNV", support: [OpenGL.ss229]), to: Swift.type(of: OpenGL.glBlendBarrierNV))
    OpenGL.glBlendBarrierNV()
}
fileprivate 
func _load_glBlendColor(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float, alpha:OpenGL.Float)
{
    OpenGL.glBlendColor = unsafeBitCast(OpenGL.getfp("glBlendColor", support: [OpenGL.ss350, OpenGL.ss365, OpenGL.ss59]), to: Swift.type(of: OpenGL.glBlendColor))
    OpenGL.glBlendColor(red, green, blue, alpha)
}
fileprivate 
func _load_glBlendColorEXT(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float, alpha:OpenGL.Float)
{
    OpenGL.glBlendColorEXT = unsafeBitCast(OpenGL.getfp("glBlendColorEXT", support: [OpenGL.ss127]), to: Swift.type(of: OpenGL.glBlendColorEXT))
    OpenGL.glBlendColorEXT(red, green, blue, alpha)
}
fileprivate 
func _load_glBlendColorxOES(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glBlendColorxOES = unsafeBitCast(OpenGL.getfp("glBlendColorxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glBlendColorxOES))
    OpenGL.glBlendColorxOES(red, green, blue, alpha)
}
fileprivate 
func _load_glBlendEquation(mode:OpenGL.Enum)
{
    OpenGL.glBlendEquation = unsafeBitCast(OpenGL.getfp("glBlendEquation", support: [OpenGL.ss350, OpenGL.ss365, OpenGL.ss59]), to: Swift.type(of: OpenGL.glBlendEquation))
    OpenGL.glBlendEquation(mode)
}
fileprivate 
func _load_glBlendEquationEXT(mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationEXT = unsafeBitCast(OpenGL.getfp("glBlendEquationEXT", support: [OpenGL.ss131]), to: Swift.type(of: OpenGL.glBlendEquationEXT))
    OpenGL.glBlendEquationEXT(mode)
}
fileprivate 
func _load_glBlendEquationIndexedAMD(buf:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationIndexedAMD = unsafeBitCast(OpenGL.getfp("glBlendEquationIndexedAMD", support: [OpenGL.ss2]), to: Swift.type(of: OpenGL.glBlendEquationIndexedAMD))
    OpenGL.glBlendEquationIndexedAMD(buf, mode)
}
fileprivate 
func _load_glBlendEquationOES(mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationOES = unsafeBitCast(OpenGL.getfp("glBlendEquationOES", support: [OpenGL.ss286]), to: Swift.type(of: OpenGL.glBlendEquationOES))
    OpenGL.glBlendEquationOES(mode)
}
fileprivate 
func _load_glBlendEquationSeparate(modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparate = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparate", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBlendEquationSeparate))
    OpenGL.glBlendEquationSeparate(modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateEXT(modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateEXT = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateEXT", support: [OpenGL.ss128]), to: Swift.type(of: OpenGL.glBlendEquationSeparateEXT))
    OpenGL.glBlendEquationSeparateEXT(modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateIndexedAMD(buf:OpenGL.UInt, modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateIndexedAMD = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateIndexedAMD", support: [OpenGL.ss2]), to: Swift.type(of: OpenGL.glBlendEquationSeparateIndexedAMD))
    OpenGL.glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateOES(modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateOES = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateOES", support: [OpenGL.ss284]), to: Swift.type(of: OpenGL.glBlendEquationSeparateOES))
    OpenGL.glBlendEquationSeparateOES(modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparatei(buf:OpenGL.UInt, modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparatei = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparatei", support: [OpenGL.ss358, OpenGL.ss368]), to: Swift.type(of: OpenGL.glBlendEquationSeparatei))
    OpenGL.glBlendEquationSeparatei(buf, modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateiARB(buf:OpenGL.UInt, modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateiARB = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateiARB", support: [OpenGL.ss47]), to: Swift.type(of: OpenGL.glBlendEquationSeparateiARB))
    OpenGL.glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateiEXT(buf:OpenGL.UInt, modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateiEXT = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glBlendEquationSeparateiEXT))
    OpenGL.glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationSeparateiOES(buf:OpenGL.UInt, modeRGB:OpenGL.Enum, modeAlpha:OpenGL.Enum)
{
    OpenGL.glBlendEquationSeparateiOES = unsafeBitCast(OpenGL.getfp("glBlendEquationSeparateiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glBlendEquationSeparateiOES))
    OpenGL.glBlendEquationSeparateiOES(buf, modeRGB, modeAlpha)
}
fileprivate 
func _load_glBlendEquationi(buf:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationi = unsafeBitCast(OpenGL.getfp("glBlendEquationi", support: [OpenGL.ss358, OpenGL.ss368]), to: Swift.type(of: OpenGL.glBlendEquationi))
    OpenGL.glBlendEquationi(buf, mode)
}
fileprivate 
func _load_glBlendEquationiARB(buf:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationiARB = unsafeBitCast(OpenGL.getfp("glBlendEquationiARB", support: [OpenGL.ss47]), to: Swift.type(of: OpenGL.glBlendEquationiARB))
    OpenGL.glBlendEquationiARB(buf, mode)
}
fileprivate 
func _load_glBlendEquationiEXT(buf:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationiEXT = unsafeBitCast(OpenGL.getfp("glBlendEquationiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glBlendEquationiEXT))
    OpenGL.glBlendEquationiEXT(buf, mode)
}
fileprivate 
func _load_glBlendEquationiOES(buf:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glBlendEquationiOES = unsafeBitCast(OpenGL.getfp("glBlendEquationiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glBlendEquationiOES))
    OpenGL.glBlendEquationiOES(buf, mode)
}
fileprivate 
func _load_glBlendFunc(sfactor:OpenGL.Enum, dfactor:OpenGL.Enum)
{
    OpenGL.glBlendFunc = unsafeBitCast(OpenGL.getfp("glBlendFunc", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBlendFunc))
    OpenGL.glBlendFunc(sfactor, dfactor)
}
fileprivate 
func _load_glBlendFuncIndexedAMD(buf:OpenGL.UInt, src:OpenGL.Enum, dst:OpenGL.Enum)
{
    OpenGL.glBlendFuncIndexedAMD = unsafeBitCast(OpenGL.getfp("glBlendFuncIndexedAMD", support: [OpenGL.ss2]), to: Swift.type(of: OpenGL.glBlendFuncIndexedAMD))
    OpenGL.glBlendFuncIndexedAMD(buf, src, dst)
}
fileprivate 
func _load_glBlendFuncSeparate(sfactorRGB:OpenGL.Enum, dfactorRGB:OpenGL.Enum, sfactorAlpha:OpenGL.Enum, dfactorAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparate = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparate", support: [OpenGL.ss350, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBlendFuncSeparate))
    OpenGL.glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateEXT(sfactorRGB:OpenGL.Enum, dfactorRGB:OpenGL.Enum, sfactorAlpha:OpenGL.Enum, dfactorAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateEXT = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateEXT", support: [OpenGL.ss130]), to: Swift.type(of: OpenGL.glBlendFuncSeparateEXT))
    OpenGL.glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateINGR(sfactorRGB:OpenGL.Enum, dfactorRGB:OpenGL.Enum, sfactorAlpha:OpenGL.Enum, dfactorAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateINGR = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateINGR", support: [OpenGL.ss215]), to: Swift.type(of: OpenGL.glBlendFuncSeparateINGR))
    OpenGL.glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateIndexedAMD(buf:OpenGL.UInt, srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateIndexedAMD = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateIndexedAMD", support: [OpenGL.ss2]), to: Swift.type(of: OpenGL.glBlendFuncSeparateIndexedAMD))
    OpenGL.glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateOES(srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateOES = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateOES", support: [OpenGL.ss285]), to: Swift.type(of: OpenGL.glBlendFuncSeparateOES))
    OpenGL.glBlendFuncSeparateOES(srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFuncSeparatei(buf:OpenGL.UInt, srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparatei = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparatei", support: [OpenGL.ss358, OpenGL.ss368]), to: Swift.type(of: OpenGL.glBlendFuncSeparatei))
    OpenGL.glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateiARB(buf:OpenGL.UInt, srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateiARB = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateiARB", support: [OpenGL.ss47]), to: Swift.type(of: OpenGL.glBlendFuncSeparateiARB))
    OpenGL.glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateiEXT(buf:OpenGL.UInt, srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateiEXT = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glBlendFuncSeparateiEXT))
    OpenGL.glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFuncSeparateiOES(buf:OpenGL.UInt, srcRGB:OpenGL.Enum, dstRGB:OpenGL.Enum, srcAlpha:OpenGL.Enum, dstAlpha:OpenGL.Enum)
{
    OpenGL.glBlendFuncSeparateiOES = unsafeBitCast(OpenGL.getfp("glBlendFuncSeparateiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glBlendFuncSeparateiOES))
    OpenGL.glBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
fileprivate 
func _load_glBlendFunci(buf:OpenGL.UInt, src:OpenGL.Enum, dst:OpenGL.Enum)
{
    OpenGL.glBlendFunci = unsafeBitCast(OpenGL.getfp("glBlendFunci", support: [OpenGL.ss358, OpenGL.ss368]), to: Swift.type(of: OpenGL.glBlendFunci))
    OpenGL.glBlendFunci(buf, src, dst)
}
fileprivate 
func _load_glBlendFunciARB(buf:OpenGL.UInt, src:OpenGL.Enum, dst:OpenGL.Enum)
{
    OpenGL.glBlendFunciARB = unsafeBitCast(OpenGL.getfp("glBlendFunciARB", support: [OpenGL.ss47]), to: Swift.type(of: OpenGL.glBlendFunciARB))
    OpenGL.glBlendFunciARB(buf, src, dst)
}
fileprivate 
func _load_glBlendFunciEXT(buf:OpenGL.UInt, src:OpenGL.Enum, dst:OpenGL.Enum)
{
    OpenGL.glBlendFunciEXT = unsafeBitCast(OpenGL.getfp("glBlendFunciEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glBlendFunciEXT))
    OpenGL.glBlendFunciEXT(buf, src, dst)
}
fileprivate 
func _load_glBlendFunciOES(buf:OpenGL.UInt, src:OpenGL.Enum, dst:OpenGL.Enum)
{
    OpenGL.glBlendFunciOES = unsafeBitCast(OpenGL.getfp("glBlendFunciOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glBlendFunciOES))
    OpenGL.glBlendFunciOES(buf, src, dst)
}
fileprivate 
func _load_glBlendParameteriNV(pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glBlendParameteriNV = unsafeBitCast(OpenGL.getfp("glBlendParameteriNV", support: [OpenGL.ss229]), to: Swift.type(of: OpenGL.glBlendParameteriNV))
    OpenGL.glBlendParameteriNV(pname, value)
}
fileprivate 
func _load_glBlitFramebuffer(srcX0:OpenGL.Int, srcY0:OpenGL.Int, srcX1:OpenGL.Int, srcY1:OpenGL.Int, dstX0:OpenGL.Int, dstY0:OpenGL.Int, dstX1:OpenGL.Int, dstY1:OpenGL.Int, mask:OpenGL.Bitfield, filter:OpenGL.Enum)
{
    OpenGL.glBlitFramebuffer = unsafeBitCast(OpenGL.getfp("glBlitFramebuffer", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss53]), to: Swift.type(of: OpenGL.glBlitFramebuffer))
    OpenGL.glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
fileprivate 
func _load_glBlitFramebufferANGLE(srcX0:OpenGL.Int, srcY0:OpenGL.Int, srcX1:OpenGL.Int, srcY1:OpenGL.Int, dstX0:OpenGL.Int, dstY0:OpenGL.Int, dstX1:OpenGL.Int, dstY1:OpenGL.Int, mask:OpenGL.Bitfield, filter:OpenGL.Enum)
{
    OpenGL.glBlitFramebufferANGLE = unsafeBitCast(OpenGL.getfp("glBlitFramebufferANGLE", support: [OpenGL.ss13]), to: Swift.type(of: OpenGL.glBlitFramebufferANGLE))
    OpenGL.glBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
fileprivate 
func _load_glBlitFramebufferEXT(srcX0:OpenGL.Int, srcY0:OpenGL.Int, srcX1:OpenGL.Int, srcY1:OpenGL.Int, dstX0:OpenGL.Int, dstY0:OpenGL.Int, dstX1:OpenGL.Int, dstY1:OpenGL.Int, mask:OpenGL.Bitfield, filter:OpenGL.Enum)
{
    OpenGL.glBlitFramebufferEXT = unsafeBitCast(OpenGL.getfp("glBlitFramebufferEXT", support: [OpenGL.ss153]), to: Swift.type(of: OpenGL.glBlitFramebufferEXT))
    OpenGL.glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
fileprivate 
func _load_glBlitFramebufferNV(srcX0:OpenGL.Int, srcY0:OpenGL.Int, srcX1:OpenGL.Int, srcY1:OpenGL.Int, dstX0:OpenGL.Int, dstY0:OpenGL.Int, dstX1:OpenGL.Int, dstY1:OpenGL.Int, mask:OpenGL.Bitfield, filter:OpenGL.Enum)
{
    OpenGL.glBlitFramebufferNV = unsafeBitCast(OpenGL.getfp("glBlitFramebufferNV", support: [OpenGL.ss246]), to: Swift.type(of: OpenGL.glBlitFramebufferNV))
    OpenGL.glBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
fileprivate 
func _load_glBlitNamedFramebuffer(readFramebuffer:OpenGL.UInt, drawFramebuffer:OpenGL.UInt, srcX0:OpenGL.Int, srcY0:OpenGL.Int, srcX1:OpenGL.Int, srcY1:OpenGL.Int, dstX0:OpenGL.Int, dstY0:OpenGL.Int, dstX1:OpenGL.Int, dstY1:OpenGL.Int, mask:OpenGL.Bitfield, filter:OpenGL.Enum)
{
    OpenGL.glBlitNamedFramebuffer = unsafeBitCast(OpenGL.getfp("glBlitNamedFramebuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glBlitNamedFramebuffer))
    OpenGL.glBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
fileprivate 
func _load_glBufferAddressRangeNV(pname:OpenGL.Enum, index:OpenGL.UInt, address:OpenGL.UInt64EXT, length:OpenGL.SizePointer)
{
    OpenGL.glBufferAddressRangeNV = unsafeBitCast(OpenGL.getfp("glBufferAddressRangeNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glBufferAddressRangeNV))
    OpenGL.glBufferAddressRangeNV(pname, index, address, length)
}
fileprivate 
func _load_glBufferData(target:OpenGL.Enum, size:OpenGL.SizePointer, data:UnsafeRawPointer?, usage:OpenGL.Enum)
{
    OpenGL.glBufferData = unsafeBitCast(OpenGL.getfp("glBufferData", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBufferData))
    OpenGL.glBufferData(target, size, data, usage)
}
fileprivate 
func _load_glBufferDataARB(target:OpenGL.Enum, size:OpenGL.SizePointerARB, data:UnsafeRawPointer?, usage:OpenGL.Enum)
{
    OpenGL.glBufferDataARB = unsafeBitCast(OpenGL.getfp("glBufferDataARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glBufferDataARB))
    OpenGL.glBufferDataARB(target, size, data, usage)
}
fileprivate 
func _load_glBufferPageCommitmentARB(target:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, commit:OpenGL.Bool)
{
    OpenGL.glBufferPageCommitmentARB = unsafeBitCast(OpenGL.getfp("glBufferPageCommitmentARB", support: [OpenGL.ss87]), to: Swift.type(of: OpenGL.glBufferPageCommitmentARB))
    OpenGL.glBufferPageCommitmentARB(target, offset, size, commit)
}
fileprivate 
func _load_glBufferParameteriAPPLE(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glBufferParameteriAPPLE = unsafeBitCast(OpenGL.getfp("glBufferParameteriAPPLE", support: [OpenGL.ss20]), to: Swift.type(of: OpenGL.glBufferParameteriAPPLE))
    OpenGL.glBufferParameteriAPPLE(target, pname, param)
}
fileprivate 
func _load_glBufferStorage(target:OpenGL.Enum, size:OpenGL.SizePointer, data:UnsafeRawPointer?, flags:OpenGL.Bitfield)
{
    OpenGL.glBufferStorage = unsafeBitCast(OpenGL.getfp("glBufferStorage", support: [OpenGL.ss362, OpenGL.ss34]), to: Swift.type(of: OpenGL.glBufferStorage))
    OpenGL.glBufferStorage(target, size, data, flags)
}
fileprivate 
func _load_glBufferStorageEXT(target:OpenGL.Enum, size:OpenGL.SizePointer, data:UnsafeRawPointer?, flags:OpenGL.Bitfield)
{
    OpenGL.glBufferStorageEXT = unsafeBitCast(OpenGL.getfp("glBufferStorageEXT", support: [OpenGL.ss132]), to: Swift.type(of: OpenGL.glBufferStorageEXT))
    OpenGL.glBufferStorageEXT(target, size, data, flags)
}
fileprivate 
func _load_glBufferSubData(target:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeRawPointer?)
{
    OpenGL.glBufferSubData = unsafeBitCast(OpenGL.getfp("glBufferSubData", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glBufferSubData))
    OpenGL.glBufferSubData(target, offset, size, data)
}
fileprivate 
func _load_glBufferSubDataARB(target:OpenGL.Enum, offset:OpenGL.IntPointerARB, size:OpenGL.SizePointerARB, data:UnsafeRawPointer?)
{
    OpenGL.glBufferSubDataARB = unsafeBitCast(OpenGL.getfp("glBufferSubDataARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glBufferSubDataARB))
    OpenGL.glBufferSubDataARB(target, offset, size, data)
}
fileprivate 
func _load_glCallCommandListNV(list:OpenGL.UInt)
{
    OpenGL.glCallCommandListNV = unsafeBitCast(OpenGL.getfp("glCallCommandListNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glCallCommandListNV))
    OpenGL.glCallCommandListNV(list)
}
fileprivate 
func _load_glCallList(list:OpenGL.UInt)
{
    OpenGL.glCallList = unsafeBitCast(OpenGL.getfp("glCallList", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glCallList))
    OpenGL.glCallList(list)
}
fileprivate 
func _load_glCallLists(n:OpenGL.Size, type:OpenGL.Enum, lists:UnsafeRawPointer?)
{
    OpenGL.glCallLists = unsafeBitCast(OpenGL.getfp("glCallLists", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glCallLists))
    OpenGL.glCallLists(n, type, lists)
}
fileprivate 
func _load_glCheckFramebufferStatus(target:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glCheckFramebufferStatus = unsafeBitCast(OpenGL.getfp("glCheckFramebufferStatus", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glCheckFramebufferStatus))
    return OpenGL.glCheckFramebufferStatus(target)
}
fileprivate 
func _load_glCheckFramebufferStatusEXT(target:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glCheckFramebufferStatusEXT = unsafeBitCast(OpenGL.getfp("glCheckFramebufferStatusEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glCheckFramebufferStatusEXT))
    return OpenGL.glCheckFramebufferStatusEXT(target)
}
fileprivate 
func _load_glCheckFramebufferStatusOES(target:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glCheckFramebufferStatusOES = unsafeBitCast(OpenGL.getfp("glCheckFramebufferStatusOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glCheckFramebufferStatusOES))
    return OpenGL.glCheckFramebufferStatusOES(target)
}
fileprivate 
func _load_glCheckNamedFramebufferStatus(framebuffer:OpenGL.UInt, target:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glCheckNamedFramebufferStatus = unsafeBitCast(OpenGL.getfp("glCheckNamedFramebufferStatus", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCheckNamedFramebufferStatus))
    return OpenGL.glCheckNamedFramebufferStatus(framebuffer, target)
}
fileprivate 
func _load_glCheckNamedFramebufferStatusEXT(framebuffer:OpenGL.UInt, target:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glCheckNamedFramebufferStatusEXT = unsafeBitCast(OpenGL.getfp("glCheckNamedFramebufferStatusEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCheckNamedFramebufferStatusEXT))
    return OpenGL.glCheckNamedFramebufferStatusEXT(framebuffer, target)
}
fileprivate 
func _load_glClampColor(target:OpenGL.Enum, clamp:OpenGL.Enum)
{
    OpenGL.glClampColor = unsafeBitCast(OpenGL.getfp("glClampColor", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glClampColor))
    OpenGL.glClampColor(target, clamp)
}
fileprivate 
func _load_glClampColorARB(target:OpenGL.Enum, clamp:OpenGL.Enum)
{
    OpenGL.glClampColorARB = unsafeBitCast(OpenGL.getfp("glClampColorARB", support: [OpenGL.ss39]), to: Swift.type(of: OpenGL.glClampColorARB))
    OpenGL.glClampColorARB(target, clamp)
}
fileprivate 
func _load_glClear(mask:OpenGL.Bitfield)
{
    OpenGL.glClear = unsafeBitCast(OpenGL.getfp("glClear", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glClear))
    OpenGL.glClear(mask)
}
fileprivate 
func _load_glClearAccum(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float, alpha:OpenGL.Float)
{
    OpenGL.glClearAccum = unsafeBitCast(OpenGL.getfp("glClearAccum", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glClearAccum))
    OpenGL.glClearAccum(red, green, blue, alpha)
}
fileprivate 
func _load_glClearAccumxOES(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glClearAccumxOES = unsafeBitCast(OpenGL.getfp("glClearAccumxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glClearAccumxOES))
    OpenGL.glClearAccumxOES(red, green, blue, alpha)
}
fileprivate 
func _load_glClearBufferData(target:OpenGL.Enum, internalformat:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearBufferData = unsafeBitCast(OpenGL.getfp("glClearBufferData", support: [OpenGL.ss361, OpenGL.ss36]), to: Swift.type(of: OpenGL.glClearBufferData))
    OpenGL.glClearBufferData(target, internalformat, format, type, data)
}
fileprivate 
func _load_glClearBufferSubData(target:OpenGL.Enum, internalformat:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearBufferSubData = unsafeBitCast(OpenGL.getfp("glClearBufferSubData", support: [OpenGL.ss361, OpenGL.ss36]), to: Swift.type(of: OpenGL.glClearBufferSubData))
    OpenGL.glClearBufferSubData(target, internalformat, offset, size, format, type, data)
}
fileprivate 
func _load_glClearBufferfi(buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, depth:OpenGL.Float, stencil:OpenGL.Int)
{
    OpenGL.glClearBufferfi = unsafeBitCast(OpenGL.getfp("glClearBufferfi", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glClearBufferfi))
    OpenGL.glClearBufferfi(buffer, drawbuffer, depth, stencil)
}
fileprivate 
func _load_glClearBufferfv(buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glClearBufferfv = unsafeBitCast(OpenGL.getfp("glClearBufferfv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glClearBufferfv))
    OpenGL.glClearBufferfv(buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearBufferiv(buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glClearBufferiv = unsafeBitCast(OpenGL.getfp("glClearBufferiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glClearBufferiv))
    OpenGL.glClearBufferiv(buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearBufferuiv(buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glClearBufferuiv = unsafeBitCast(OpenGL.getfp("glClearBufferuiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glClearBufferuiv))
    OpenGL.glClearBufferuiv(buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearColor(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float, alpha:OpenGL.Float)
{
    OpenGL.glClearColor = unsafeBitCast(OpenGL.getfp("glClearColor", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glClearColor))
    OpenGL.glClearColor(red, green, blue, alpha)
}
fileprivate 
func _load_glClearColorIiEXT(red:OpenGL.Int, green:OpenGL.Int, blue:OpenGL.Int, alpha:OpenGL.Int)
{
    OpenGL.glClearColorIiEXT = unsafeBitCast(OpenGL.getfp("glClearColorIiEXT", support: [OpenGL.ss195]), to: Swift.type(of: OpenGL.glClearColorIiEXT))
    OpenGL.glClearColorIiEXT(red, green, blue, alpha)
}
fileprivate 
func _load_glClearColorIuiEXT(red:OpenGL.UInt, green:OpenGL.UInt, blue:OpenGL.UInt, alpha:OpenGL.UInt)
{
    OpenGL.glClearColorIuiEXT = unsafeBitCast(OpenGL.getfp("glClearColorIuiEXT", support: [OpenGL.ss195]), to: Swift.type(of: OpenGL.glClearColorIuiEXT))
    OpenGL.glClearColorIuiEXT(red, green, blue, alpha)
}
fileprivate 
func _load_glClearColorx(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glClearColorx = unsafeBitCast(OpenGL.getfp("glClearColorx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glClearColorx))
    OpenGL.glClearColorx(red, green, blue, alpha)
}
fileprivate 
func _load_glClearColorxOES(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glClearColorxOES = unsafeBitCast(OpenGL.getfp("glClearColorxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glClearColorxOES))
    OpenGL.glClearColorxOES(red, green, blue, alpha)
}
fileprivate 
func _load_glClearDepth(depth:OpenGL.Double)
{
    OpenGL.glClearDepth = unsafeBitCast(OpenGL.getfp("glClearDepth", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glClearDepth))
    OpenGL.glClearDepth(depth)
}
fileprivate 
func _load_glClearDepthdNV(depth:OpenGL.Double)
{
    OpenGL.glClearDepthdNV = unsafeBitCast(OpenGL.getfp("glClearDepthdNV", support: [OpenGL.ss237]), to: Swift.type(of: OpenGL.glClearDepthdNV))
    OpenGL.glClearDepthdNV(depth)
}
fileprivate 
func _load_glClearDepthf(d:OpenGL.Float)
{
    OpenGL.glClearDepthf = unsafeBitCast(OpenGL.getfp("glClearDepthf", support: [OpenGL.ss359, OpenGL.ss365, OpenGL.ss28]), to: Swift.type(of: OpenGL.glClearDepthf))
    OpenGL.glClearDepthf(d)
}
fileprivate 
func _load_glClearDepthfOES(depth:OpenGL.ClampFloat)
{
    OpenGL.glClearDepthfOES = unsafeBitCast(OpenGL.getfp("glClearDepthfOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glClearDepthfOES))
    OpenGL.glClearDepthfOES(depth)
}
fileprivate 
func _load_glClearDepthx(depth:OpenGL.Fixed)
{
    OpenGL.glClearDepthx = unsafeBitCast(OpenGL.getfp("glClearDepthx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glClearDepthx))
    OpenGL.glClearDepthx(depth)
}
fileprivate 
func _load_glClearDepthxOES(depth:OpenGL.Fixed)
{
    OpenGL.glClearDepthxOES = unsafeBitCast(OpenGL.getfp("glClearDepthxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glClearDepthxOES))
    OpenGL.glClearDepthxOES(depth)
}
fileprivate 
func _load_glClearIndex(c:OpenGL.Float)
{
    OpenGL.glClearIndex = unsafeBitCast(OpenGL.getfp("glClearIndex", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glClearIndex))
    OpenGL.glClearIndex(c)
}
fileprivate 
func _load_glClearNamedBufferData(buffer:OpenGL.UInt, internalformat:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearNamedBufferData = unsafeBitCast(OpenGL.getfp("glClearNamedBufferData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedBufferData))
    OpenGL.glClearNamedBufferData(buffer, internalformat, format, type, data)
}
fileprivate 
func _load_glClearNamedBufferDataEXT(buffer:OpenGL.UInt, internalformat:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearNamedBufferDataEXT = unsafeBitCast(OpenGL.getfp("glClearNamedBufferDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glClearNamedBufferDataEXT))
    OpenGL.glClearNamedBufferDataEXT(buffer, internalformat, format, type, data)
}
fileprivate 
func _load_glClearNamedBufferSubData(buffer:OpenGL.UInt, internalformat:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearNamedBufferSubData = unsafeBitCast(OpenGL.getfp("glClearNamedBufferSubData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedBufferSubData))
    OpenGL.glClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data)
}
fileprivate 
func _load_glClearNamedBufferSubDataEXT(buffer:OpenGL.UInt, internalformat:OpenGL.Enum, offset:OpenGL.SizePointer, size:OpenGL.SizePointer, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearNamedBufferSubDataEXT = unsafeBitCast(OpenGL.getfp("glClearNamedBufferSubDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glClearNamedBufferSubDataEXT))
    OpenGL.glClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data)
}
fileprivate 
func _load_glClearNamedFramebufferfi(framebuffer:OpenGL.UInt, buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, depth:OpenGL.Float, stencil:OpenGL.Int)
{
    OpenGL.glClearNamedFramebufferfi = unsafeBitCast(OpenGL.getfp("glClearNamedFramebufferfi", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedFramebufferfi))
    OpenGL.glClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil)
}
fileprivate 
func _load_glClearNamedFramebufferfv(framebuffer:OpenGL.UInt, buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glClearNamedFramebufferfv = unsafeBitCast(OpenGL.getfp("glClearNamedFramebufferfv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedFramebufferfv))
    OpenGL.glClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearNamedFramebufferiv(framebuffer:OpenGL.UInt, buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glClearNamedFramebufferiv = unsafeBitCast(OpenGL.getfp("glClearNamedFramebufferiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedFramebufferiv))
    OpenGL.glClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearNamedFramebufferuiv(framebuffer:OpenGL.UInt, buffer:OpenGL.Enum, drawbuffer:OpenGL.Int, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glClearNamedFramebufferuiv = unsafeBitCast(OpenGL.getfp("glClearNamedFramebufferuiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glClearNamedFramebufferuiv))
    OpenGL.glClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value)
}
fileprivate 
func _load_glClearStencil(s:OpenGL.Int)
{
    OpenGL.glClearStencil = unsafeBitCast(OpenGL.getfp("glClearStencil", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glClearStencil))
    OpenGL.glClearStencil(s)
}
fileprivate 
func _load_glClearTexImage(texture:OpenGL.UInt, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearTexImage = unsafeBitCast(OpenGL.getfp("glClearTexImage", support: [OpenGL.ss362, OpenGL.ss37]), to: Swift.type(of: OpenGL.glClearTexImage))
    OpenGL.glClearTexImage(texture, level, format, type, data)
}
fileprivate 
func _load_glClearTexSubImage(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glClearTexSubImage = unsafeBitCast(OpenGL.getfp("glClearTexSubImage", support: [OpenGL.ss362, OpenGL.ss37]), to: Swift.type(of: OpenGL.glClearTexSubImage))
    OpenGL.glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}
fileprivate 
func _load_glClientActiveTexture(texture:OpenGL.Enum)
{
    OpenGL.glClientActiveTexture = unsafeBitCast(OpenGL.getfp("glClientActiveTexture", support: [OpenGL.ss349, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glClientActiveTexture))
    OpenGL.glClientActiveTexture(texture)
}
fileprivate 
func _load_glClientActiveTextureARB(texture:OpenGL.Enum)
{
    OpenGL.glClientActiveTextureARB = unsafeBitCast(OpenGL.getfp("glClientActiveTextureARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glClientActiveTextureARB))
    OpenGL.glClientActiveTextureARB(texture)
}
fileprivate 
func _load_glClientActiveVertexStreamATI(stream:OpenGL.Enum)
{
    OpenGL.glClientActiveVertexStreamATI = unsafeBitCast(OpenGL.getfp("glClientActiveVertexStreamATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glClientActiveVertexStreamATI))
    OpenGL.glClientActiveVertexStreamATI(stream)
}
fileprivate 
func _load_glClientAttribDefaultEXT(mask:OpenGL.Bitfield)
{
    OpenGL.glClientAttribDefaultEXT = unsafeBitCast(OpenGL.getfp("glClientAttribDefaultEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glClientAttribDefaultEXT))
    OpenGL.glClientAttribDefaultEXT(mask)
}
fileprivate 
func _load_glClientWaitSync(sync:OpenGL.Sync, flags:OpenGL.Bitfield, timeout:OpenGL.UInt64) -> OpenGL.Enum
{
    OpenGL.glClientWaitSync = unsafeBitCast(OpenGL.getfp("glClientWaitSync", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glClientWaitSync))
    return OpenGL.glClientWaitSync(sync, flags, timeout)
}
fileprivate 
func _load_glClientWaitSyncAPPLE(sync:OpenGL.Sync, flags:OpenGL.Bitfield, timeout:OpenGL.UInt64) -> OpenGL.Enum
{
    OpenGL.glClientWaitSyncAPPLE = unsafeBitCast(OpenGL.getfp("glClientWaitSyncAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glClientWaitSyncAPPLE))
    return OpenGL.glClientWaitSyncAPPLE(sync, flags, timeout)
}
fileprivate 
func _load_glClipControl(origin:OpenGL.Enum, depth:OpenGL.Enum)
{
    OpenGL.glClipControl = unsafeBitCast(OpenGL.getfp("glClipControl", support: [OpenGL.ss363, OpenGL.ss38]), to: Swift.type(of: OpenGL.glClipControl))
    OpenGL.glClipControl(origin, depth)
}
fileprivate 
func _load_glClipPlane(plane:OpenGL.Enum, equation:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glClipPlane = unsafeBitCast(OpenGL.getfp("glClipPlane", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glClipPlane))
    OpenGL.glClipPlane(plane, equation)
}
fileprivate 
func _load_glClipPlanef(p:OpenGL.Enum, eqn:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glClipPlanef = unsafeBitCast(OpenGL.getfp("glClipPlanef", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glClipPlanef))
    OpenGL.glClipPlanef(p, eqn)
}
fileprivate 
func _load_glClipPlanefIMG(p:OpenGL.Enum, eqn:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glClipPlanefIMG = unsafeBitCast(OpenGL.getfp("glClipPlanefIMG", support: [OpenGL.ss214]), to: Swift.type(of: OpenGL.glClipPlanefIMG))
    OpenGL.glClipPlanefIMG(p, eqn)
}
fileprivate 
func _load_glClipPlanefOES(plane:OpenGL.Enum, equation:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glClipPlanefOES = unsafeBitCast(OpenGL.getfp("glClipPlanefOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glClipPlanefOES))
    OpenGL.glClipPlanefOES(plane, equation)
}
fileprivate 
func _load_glClipPlanex(plane:OpenGL.Enum, equation:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glClipPlanex = unsafeBitCast(OpenGL.getfp("glClipPlanex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glClipPlanex))
    OpenGL.glClipPlanex(plane, equation)
}
fileprivate 
func _load_glClipPlanexIMG(p:OpenGL.Enum, eqn:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glClipPlanexIMG = unsafeBitCast(OpenGL.getfp("glClipPlanexIMG", support: [OpenGL.ss214]), to: Swift.type(of: OpenGL.glClipPlanexIMG))
    OpenGL.glClipPlanexIMG(p, eqn)
}
fileprivate 
func _load_glClipPlanexOES(plane:OpenGL.Enum, equation:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glClipPlanexOES = unsafeBitCast(OpenGL.getfp("glClipPlanexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glClipPlanexOES))
    OpenGL.glClipPlanexOES(plane, equation)
}
fileprivate 
func _load_glColor3b(red:OpenGL.Byte, green:OpenGL.Byte, blue:OpenGL.Byte)
{
    OpenGL.glColor3b = unsafeBitCast(OpenGL.getfp("glColor3b", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3b))
    OpenGL.glColor3b(red, green, blue)
}
fileprivate 
func _load_glColor3bv(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glColor3bv = unsafeBitCast(OpenGL.getfp("glColor3bv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3bv))
    OpenGL.glColor3bv(v)
}
fileprivate 
func _load_glColor3d(red:OpenGL.Double, green:OpenGL.Double, blue:OpenGL.Double)
{
    OpenGL.glColor3d = unsafeBitCast(OpenGL.getfp("glColor3d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3d))
    OpenGL.glColor3d(red, green, blue)
}
fileprivate 
func _load_glColor3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glColor3dv = unsafeBitCast(OpenGL.getfp("glColor3dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3dv))
    OpenGL.glColor3dv(v)
}
fileprivate 
func _load_glColor3f(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float)
{
    OpenGL.glColor3f = unsafeBitCast(OpenGL.getfp("glColor3f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3f))
    OpenGL.glColor3f(red, green, blue)
}
fileprivate 
func _load_glColor3fVertex3fSUN(r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glColor3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glColor3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor3fVertex3fSUN))
    OpenGL.glColor3fVertex3fSUN(r, g, b, x, y, z)
}
fileprivate 
func _load_glColor3fVertex3fvSUN(c:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glColor3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor3fVertex3fvSUN))
    OpenGL.glColor3fVertex3fvSUN(c, v)
}
fileprivate 
func _load_glColor3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor3fv = unsafeBitCast(OpenGL.getfp("glColor3fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3fv))
    OpenGL.glColor3fv(v)
}
fileprivate 
func _load_glColor3hNV(red:OpenGL.HalfNV, green:OpenGL.HalfNV, blue:OpenGL.HalfNV)
{
    OpenGL.glColor3hNV = unsafeBitCast(OpenGL.getfp("glColor3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glColor3hNV))
    OpenGL.glColor3hNV(red, green, blue)
}
fileprivate 
func _load_glColor3hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glColor3hvNV = unsafeBitCast(OpenGL.getfp("glColor3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glColor3hvNV))
    OpenGL.glColor3hvNV(v)
}
fileprivate 
func _load_glColor3i(red:OpenGL.Int, green:OpenGL.Int, blue:OpenGL.Int)
{
    OpenGL.glColor3i = unsafeBitCast(OpenGL.getfp("glColor3i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3i))
    OpenGL.glColor3i(red, green, blue)
}
fileprivate 
func _load_glColor3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glColor3iv = unsafeBitCast(OpenGL.getfp("glColor3iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3iv))
    OpenGL.glColor3iv(v)
}
fileprivate 
func _load_glColor3s(red:OpenGL.Short, green:OpenGL.Short, blue:OpenGL.Short)
{
    OpenGL.glColor3s = unsafeBitCast(OpenGL.getfp("glColor3s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3s))
    OpenGL.glColor3s(red, green, blue)
}
fileprivate 
func _load_glColor3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glColor3sv = unsafeBitCast(OpenGL.getfp("glColor3sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3sv))
    OpenGL.glColor3sv(v)
}
fileprivate 
func _load_glColor3ub(red:OpenGL.UByte, green:OpenGL.UByte, blue:OpenGL.UByte)
{
    OpenGL.glColor3ub = unsafeBitCast(OpenGL.getfp("glColor3ub", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3ub))
    OpenGL.glColor3ub(red, green, blue)
}
fileprivate 
func _load_glColor3ubv(v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glColor3ubv = unsafeBitCast(OpenGL.getfp("glColor3ubv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3ubv))
    OpenGL.glColor3ubv(v)
}
fileprivate 
func _load_glColor3ui(red:OpenGL.UInt, green:OpenGL.UInt, blue:OpenGL.UInt)
{
    OpenGL.glColor3ui = unsafeBitCast(OpenGL.getfp("glColor3ui", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3ui))
    OpenGL.glColor3ui(red, green, blue)
}
fileprivate 
func _load_glColor3uiv(v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glColor3uiv = unsafeBitCast(OpenGL.getfp("glColor3uiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3uiv))
    OpenGL.glColor3uiv(v)
}
fileprivate 
func _load_glColor3us(red:OpenGL.UShort, green:OpenGL.UShort, blue:OpenGL.UShort)
{
    OpenGL.glColor3us = unsafeBitCast(OpenGL.getfp("glColor3us", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3us))
    OpenGL.glColor3us(red, green, blue)
}
fileprivate 
func _load_glColor3usv(v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glColor3usv = unsafeBitCast(OpenGL.getfp("glColor3usv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor3usv))
    OpenGL.glColor3usv(v)
}
fileprivate 
func _load_glColor3xOES(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed)
{
    OpenGL.glColor3xOES = unsafeBitCast(OpenGL.getfp("glColor3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glColor3xOES))
    OpenGL.glColor3xOES(red, green, blue)
}
fileprivate 
func _load_glColor3xvOES(components:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glColor3xvOES = unsafeBitCast(OpenGL.getfp("glColor3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glColor3xvOES))
    OpenGL.glColor3xvOES(components)
}
fileprivate 
func _load_glColor4b(red:OpenGL.Byte, green:OpenGL.Byte, blue:OpenGL.Byte, alpha:OpenGL.Byte)
{
    OpenGL.glColor4b = unsafeBitCast(OpenGL.getfp("glColor4b", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4b))
    OpenGL.glColor4b(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4bv(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glColor4bv = unsafeBitCast(OpenGL.getfp("glColor4bv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4bv))
    OpenGL.glColor4bv(v)
}
fileprivate 
func _load_glColor4d(red:OpenGL.Double, green:OpenGL.Double, blue:OpenGL.Double, alpha:OpenGL.Double)
{
    OpenGL.glColor4d = unsafeBitCast(OpenGL.getfp("glColor4d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4d))
    OpenGL.glColor4d(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glColor4dv = unsafeBitCast(OpenGL.getfp("glColor4dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4dv))
    OpenGL.glColor4dv(v)
}
fileprivate 
func _load_glColor4f(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float, alpha:OpenGL.Float)
{
    OpenGL.glColor4f = unsafeBitCast(OpenGL.getfp("glColor4f", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glColor4f))
    OpenGL.glColor4f(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4fNormal3fVertex3fSUN(r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, a:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glColor4fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glColor4fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4fNormal3fVertex3fSUN))
    OpenGL.glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glColor4fNormal3fVertex3fvSUN(c:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor4fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glColor4fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4fNormal3fVertex3fvSUN))
    OpenGL.glColor4fNormal3fVertex3fvSUN(c, n, v)
}
fileprivate 
func _load_glColor4fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor4fv = unsafeBitCast(OpenGL.getfp("glColor4fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4fv))
    OpenGL.glColor4fv(v)
}
fileprivate 
func _load_glColor4hNV(red:OpenGL.HalfNV, green:OpenGL.HalfNV, blue:OpenGL.HalfNV, alpha:OpenGL.HalfNV)
{
    OpenGL.glColor4hNV = unsafeBitCast(OpenGL.getfp("glColor4hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glColor4hNV))
    OpenGL.glColor4hNV(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glColor4hvNV = unsafeBitCast(OpenGL.getfp("glColor4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glColor4hvNV))
    OpenGL.glColor4hvNV(v)
}
fileprivate 
func _load_glColor4i(red:OpenGL.Int, green:OpenGL.Int, blue:OpenGL.Int, alpha:OpenGL.Int)
{
    OpenGL.glColor4i = unsafeBitCast(OpenGL.getfp("glColor4i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4i))
    OpenGL.glColor4i(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glColor4iv = unsafeBitCast(OpenGL.getfp("glColor4iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4iv))
    OpenGL.glColor4iv(v)
}
fileprivate 
func _load_glColor4s(red:OpenGL.Short, green:OpenGL.Short, blue:OpenGL.Short, alpha:OpenGL.Short)
{
    OpenGL.glColor4s = unsafeBitCast(OpenGL.getfp("glColor4s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4s))
    OpenGL.glColor4s(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glColor4sv = unsafeBitCast(OpenGL.getfp("glColor4sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4sv))
    OpenGL.glColor4sv(v)
}
fileprivate 
func _load_glColor4ub(red:OpenGL.UByte, green:OpenGL.UByte, blue:OpenGL.UByte, alpha:OpenGL.UByte)
{
    OpenGL.glColor4ub = unsafeBitCast(OpenGL.getfp("glColor4ub", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glColor4ub))
    OpenGL.glColor4ub(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4ubVertex2fSUN(r:OpenGL.UByte, g:OpenGL.UByte, b:OpenGL.UByte, a:OpenGL.UByte, x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glColor4ubVertex2fSUN = unsafeBitCast(OpenGL.getfp("glColor4ubVertex2fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4ubVertex2fSUN))
    OpenGL.glColor4ubVertex2fSUN(r, g, b, a, x, y)
}
fileprivate 
func _load_glColor4ubVertex2fvSUN(c:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor4ubVertex2fvSUN = unsafeBitCast(OpenGL.getfp("glColor4ubVertex2fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4ubVertex2fvSUN))
    OpenGL.glColor4ubVertex2fvSUN(c, v)
}
fileprivate 
func _load_glColor4ubVertex3fSUN(r:OpenGL.UByte, g:OpenGL.UByte, b:OpenGL.UByte, a:OpenGL.UByte, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glColor4ubVertex3fSUN = unsafeBitCast(OpenGL.getfp("glColor4ubVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4ubVertex3fSUN))
    OpenGL.glColor4ubVertex3fSUN(r, g, b, a, x, y, z)
}
fileprivate 
func _load_glColor4ubVertex3fvSUN(c:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColor4ubVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glColor4ubVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glColor4ubVertex3fvSUN))
    OpenGL.glColor4ubVertex3fvSUN(c, v)
}
fileprivate 
func _load_glColor4ubv(v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glColor4ubv = unsafeBitCast(OpenGL.getfp("glColor4ubv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4ubv))
    OpenGL.glColor4ubv(v)
}
fileprivate 
func _load_glColor4ui(red:OpenGL.UInt, green:OpenGL.UInt, blue:OpenGL.UInt, alpha:OpenGL.UInt)
{
    OpenGL.glColor4ui = unsafeBitCast(OpenGL.getfp("glColor4ui", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4ui))
    OpenGL.glColor4ui(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4uiv(v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glColor4uiv = unsafeBitCast(OpenGL.getfp("glColor4uiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4uiv))
    OpenGL.glColor4uiv(v)
}
fileprivate 
func _load_glColor4us(red:OpenGL.UShort, green:OpenGL.UShort, blue:OpenGL.UShort, alpha:OpenGL.UShort)
{
    OpenGL.glColor4us = unsafeBitCast(OpenGL.getfp("glColor4us", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4us))
    OpenGL.glColor4us(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4usv(v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glColor4usv = unsafeBitCast(OpenGL.getfp("glColor4usv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColor4usv))
    OpenGL.glColor4usv(v)
}
fileprivate 
func _load_glColor4x(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glColor4x = unsafeBitCast(OpenGL.getfp("glColor4x", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glColor4x))
    OpenGL.glColor4x(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4xOES(red:OpenGL.Fixed, green:OpenGL.Fixed, blue:OpenGL.Fixed, alpha:OpenGL.Fixed)
{
    OpenGL.glColor4xOES = unsafeBitCast(OpenGL.getfp("glColor4xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glColor4xOES))
    OpenGL.glColor4xOES(red, green, blue, alpha)
}
fileprivate 
func _load_glColor4xvOES(components:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glColor4xvOES = unsafeBitCast(OpenGL.getfp("glColor4xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glColor4xvOES))
    OpenGL.glColor4xvOES(components)
}
fileprivate 
func _load_glColorFormatNV(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glColorFormatNV = unsafeBitCast(OpenGL.getfp("glColorFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glColorFormatNV))
    OpenGL.glColorFormatNV(size, type, stride)
}
fileprivate 
func _load_glColorFragmentOp1ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMask:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt)
{
    OpenGL.glColorFragmentOp1ATI = unsafeBitCast(OpenGL.getfp("glColorFragmentOp1ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glColorFragmentOp1ATI))
    OpenGL.glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
}
fileprivate 
func _load_glColorFragmentOp2ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMask:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt, arg2:OpenGL.UInt, arg2Rep:OpenGL.UInt, arg2Mod:OpenGL.UInt)
{
    OpenGL.glColorFragmentOp2ATI = unsafeBitCast(OpenGL.getfp("glColorFragmentOp2ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glColorFragmentOp2ATI))
    OpenGL.glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
fileprivate 
func _load_glColorFragmentOp3ATI(op:OpenGL.Enum, dst:OpenGL.UInt, dstMask:OpenGL.UInt, dstMod:OpenGL.UInt, arg1:OpenGL.UInt, arg1Rep:OpenGL.UInt, arg1Mod:OpenGL.UInt, arg2:OpenGL.UInt, arg2Rep:OpenGL.UInt, arg2Mod:OpenGL.UInt, arg3:OpenGL.UInt, arg3Rep:OpenGL.UInt, arg3Mod:OpenGL.UInt)
{
    OpenGL.glColorFragmentOp3ATI = unsafeBitCast(OpenGL.getfp("glColorFragmentOp3ATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glColorFragmentOp3ATI))
    OpenGL.glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
fileprivate 
func _load_glColorMask(red:OpenGL.Bool, green:OpenGL.Bool, blue:OpenGL.Bool, alpha:OpenGL.Bool)
{
    OpenGL.glColorMask = unsafeBitCast(OpenGL.getfp("glColorMask", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glColorMask))
    OpenGL.glColorMask(red, green, blue, alpha)
}
fileprivate 
func _load_glColorMaskIndexedEXT(index:OpenGL.UInt, r:OpenGL.Bool, g:OpenGL.Bool, b:OpenGL.Bool, a:OpenGL.Bool)
{
    OpenGL.glColorMaskIndexedEXT = unsafeBitCast(OpenGL.getfp("glColorMaskIndexedEXT", support: [OpenGL.ss147]), to: Swift.type(of: OpenGL.glColorMaskIndexedEXT))
    OpenGL.glColorMaskIndexedEXT(index, r, g, b, a)
}
fileprivate 
func _load_glColorMaski(index:OpenGL.UInt, r:OpenGL.Bool, g:OpenGL.Bool, b:OpenGL.Bool, a:OpenGL.Bool)
{
    OpenGL.glColorMaski = unsafeBitCast(OpenGL.getfp("glColorMaski", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glColorMaski))
    OpenGL.glColorMaski(index, r, g, b, a)
}
fileprivate 
func _load_glColorMaskiEXT(index:OpenGL.UInt, r:OpenGL.Bool, g:OpenGL.Bool, b:OpenGL.Bool, a:OpenGL.Bool)
{
    OpenGL.glColorMaskiEXT = unsafeBitCast(OpenGL.getfp("glColorMaskiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glColorMaskiEXT))
    OpenGL.glColorMaskiEXT(index, r, g, b, a)
}
fileprivate 
func _load_glColorMaskiOES(index:OpenGL.UInt, r:OpenGL.Bool, g:OpenGL.Bool, b:OpenGL.Bool, a:OpenGL.Bool)
{
    OpenGL.glColorMaskiOES = unsafeBitCast(OpenGL.getfp("glColorMaskiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glColorMaskiOES))
    OpenGL.glColorMaskiOES(index, r, g, b, a)
}
fileprivate 
func _load_glColorMaterial(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glColorMaterial = unsafeBitCast(OpenGL.getfp("glColorMaterial", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glColorMaterial))
    OpenGL.glColorMaterial(face, mode)
}
fileprivate 
func _load_glColorP3ui(type:OpenGL.Enum, color:OpenGL.UInt)
{
    OpenGL.glColorP3ui = unsafeBitCast(OpenGL.getfp("glColorP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glColorP3ui))
    OpenGL.glColorP3ui(type, color)
}
fileprivate 
func _load_glColorP3uiv(type:OpenGL.Enum, color:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glColorP3uiv = unsafeBitCast(OpenGL.getfp("glColorP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glColorP3uiv))
    OpenGL.glColorP3uiv(type, color)
}
fileprivate 
func _load_glColorP4ui(type:OpenGL.Enum, color:OpenGL.UInt)
{
    OpenGL.glColorP4ui = unsafeBitCast(OpenGL.getfp("glColorP4ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glColorP4ui))
    OpenGL.glColorP4ui(type, color)
}
fileprivate 
func _load_glColorP4uiv(type:OpenGL.Enum, color:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glColorP4uiv = unsafeBitCast(OpenGL.getfp("glColorP4uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glColorP4uiv))
    OpenGL.glColorP4uiv(type, color)
}
fileprivate 
func _load_glColorPointer(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glColorPointer = unsafeBitCast(OpenGL.getfp("glColorPointer", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glColorPointer))
    OpenGL.glColorPointer(size, type, stride, pointer)
}
fileprivate 
func _load_glColorPointerEXT(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glColorPointerEXT = unsafeBitCast(OpenGL.getfp("glColorPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glColorPointerEXT))
    OpenGL.glColorPointerEXT(size, type, stride, count, pointer)
}
fileprivate 
func _load_glColorPointerListIBM(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glColorPointerListIBM = unsafeBitCast(OpenGL.getfp("glColorPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glColorPointerListIBM))
    OpenGL.glColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glColorPointervINTEL(size:OpenGL.Int, type:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    OpenGL.glColorPointervINTEL = unsafeBitCast(OpenGL.getfp("glColorPointervINTEL", support: [OpenGL.ss218]), to: Swift.type(of: OpenGL.glColorPointervINTEL))
    OpenGL.glColorPointervINTEL(size, type, pointer)
}
fileprivate 
func _load_glColorSubTable(target:OpenGL.Enum, start:OpenGL.Size, count:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glColorSubTable = unsafeBitCast(OpenGL.getfp("glColorSubTable", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glColorSubTable))
    OpenGL.glColorSubTable(target, start, count, format, type, data)
}
fileprivate 
func _load_glColorSubTableEXT(target:OpenGL.Enum, start:OpenGL.Size, count:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeRawPointer?)
{
    OpenGL.glColorSubTableEXT = unsafeBitCast(OpenGL.getfp("glColorSubTableEXT", support: [OpenGL.ss133]), to: Swift.type(of: OpenGL.glColorSubTableEXT))
    OpenGL.glColorSubTableEXT(target, start, count, format, type, data)
}
fileprivate 
func _load_glColorTable(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, table:UnsafeRawPointer?)
{
    OpenGL.glColorTable = unsafeBitCast(OpenGL.getfp("glColorTable", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glColorTable))
    OpenGL.glColorTable(target, internalformat, width, format, type, table)
}
fileprivate 
func _load_glColorTableEXT(target:OpenGL.Enum, internalFormat:OpenGL.Enum, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, table:UnsafeRawPointer?)
{
    OpenGL.glColorTableEXT = unsafeBitCast(OpenGL.getfp("glColorTableEXT", support: [OpenGL.ss172]), to: Swift.type(of: OpenGL.glColorTableEXT))
    OpenGL.glColorTableEXT(target, internalFormat, width, format, type, table)
}
fileprivate 
func _load_glColorTableParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColorTableParameterfv = unsafeBitCast(OpenGL.getfp("glColorTableParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glColorTableParameterfv))
    OpenGL.glColorTableParameterfv(target, pname, params)
}
fileprivate 
func _load_glColorTableParameterfvSGI(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glColorTableParameterfvSGI = unsafeBitCast(OpenGL.getfp("glColorTableParameterfvSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glColorTableParameterfvSGI))
    OpenGL.glColorTableParameterfvSGI(target, pname, params)
}
fileprivate 
func _load_glColorTableParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glColorTableParameteriv = unsafeBitCast(OpenGL.getfp("glColorTableParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glColorTableParameteriv))
    OpenGL.glColorTableParameteriv(target, pname, params)
}
fileprivate 
func _load_glColorTableParameterivSGI(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glColorTableParameterivSGI = unsafeBitCast(OpenGL.getfp("glColorTableParameterivSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glColorTableParameterivSGI))
    OpenGL.glColorTableParameterivSGI(target, pname, params)
}
fileprivate 
func _load_glColorTableSGI(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, table:UnsafeRawPointer?)
{
    OpenGL.glColorTableSGI = unsafeBitCast(OpenGL.getfp("glColorTableSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glColorTableSGI))
    OpenGL.glColorTableSGI(target, internalformat, width, format, type, table)
}
fileprivate 
func _load_glCombinerInputNV(stage:OpenGL.Enum, portion:OpenGL.Enum, variable:OpenGL.Enum, input:OpenGL.Enum, mapping:OpenGL.Enum, componentUsage:OpenGL.Enum)
{
    OpenGL.glCombinerInputNV = unsafeBitCast(OpenGL.getfp("glCombinerInputNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerInputNV))
    OpenGL.glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage)
}
fileprivate 
func _load_glCombinerOutputNV(stage:OpenGL.Enum, portion:OpenGL.Enum, abOutput:OpenGL.Enum, cdOutput:OpenGL.Enum, sumOutput:OpenGL.Enum, scale:OpenGL.Enum, bias:OpenGL.Enum, abDotProduct:OpenGL.Bool, cdDotProduct:OpenGL.Bool, muxSum:OpenGL.Bool)
{
    OpenGL.glCombinerOutputNV = unsafeBitCast(OpenGL.getfp("glCombinerOutputNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerOutputNV))
    OpenGL.glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
}
fileprivate 
func _load_glCombinerParameterfNV(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glCombinerParameterfNV = unsafeBitCast(OpenGL.getfp("glCombinerParameterfNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerParameterfNV))
    OpenGL.glCombinerParameterfNV(pname, param)
}
fileprivate 
func _load_glCombinerParameterfvNV(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glCombinerParameterfvNV = unsafeBitCast(OpenGL.getfp("glCombinerParameterfvNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerParameterfvNV))
    OpenGL.glCombinerParameterfvNV(pname, params)
}
fileprivate 
func _load_glCombinerParameteriNV(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glCombinerParameteriNV = unsafeBitCast(OpenGL.getfp("glCombinerParameteriNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerParameteriNV))
    OpenGL.glCombinerParameteriNV(pname, param)
}
fileprivate 
func _load_glCombinerParameterivNV(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glCombinerParameterivNV = unsafeBitCast(OpenGL.getfp("glCombinerParameterivNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glCombinerParameterivNV))
    OpenGL.glCombinerParameterivNV(pname, params)
}
fileprivate 
func _load_glCombinerStageParameterfvNV(stage:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glCombinerStageParameterfvNV = unsafeBitCast(OpenGL.getfp("glCombinerStageParameterfvNV", support: [OpenGL.ss268]), to: Swift.type(of: OpenGL.glCombinerStageParameterfvNV))
    OpenGL.glCombinerStageParameterfvNV(stage, pname, params)
}
fileprivate 
func _load_glCommandListSegmentsNV(list:OpenGL.UInt, segments:OpenGL.UInt)
{
    OpenGL.glCommandListSegmentsNV = unsafeBitCast(OpenGL.getfp("glCommandListSegmentsNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glCommandListSegmentsNV))
    OpenGL.glCommandListSegmentsNV(list, segments)
}
fileprivate 
func _load_glCompileCommandListNV(list:OpenGL.UInt)
{
    OpenGL.glCompileCommandListNV = unsafeBitCast(OpenGL.getfp("glCompileCommandListNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glCompileCommandListNV))
    OpenGL.glCompileCommandListNV(list)
}
fileprivate 
func _load_glCompileShader(shader:OpenGL.UInt)
{
    OpenGL.glCompileShader = unsafeBitCast(OpenGL.getfp("glCompileShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCompileShader))
    OpenGL.glCompileShader(shader)
}
fileprivate 
func _load_glCompileShaderARB(shaderObj:OpenGL.HandleARB)
{
    OpenGL.glCompileShaderARB = unsafeBitCast(OpenGL.getfp("glCompileShaderARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glCompileShaderARB))
    OpenGL.glCompileShaderARB(shaderObj)
}
fileprivate 
func _load_glCompileShaderIncludeARB(shader:OpenGL.UInt, count:OpenGL.Size, path:UnsafePointer<UnsafePointer<OpenGL.Char>?>?, length:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glCompileShaderIncludeARB = unsafeBitCast(OpenGL.getfp("glCompileShaderIncludeARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glCompileShaderIncludeARB))
    OpenGL.glCompileShaderIncludeARB(shader, count, path, length)
}
fileprivate 
func _load_glCompressedMultiTexImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexImage1DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexImage1DEXT))
    OpenGL.glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedMultiTexImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexImage2DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexImage2DEXT))
    OpenGL.glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedMultiTexImage3DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexImage3DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexImage3DEXT))
    OpenGL.glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedMultiTexSubImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexSubImage1DEXT))
    OpenGL.glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits)
}
fileprivate 
func _load_glCompressedMultiTexSubImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexSubImage2DEXT))
    OpenGL.glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
fileprivate 
func _load_glCompressedMultiTexSubImage3DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedMultiTexSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glCompressedMultiTexSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedMultiTexSubImage3DEXT))
    OpenGL.glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
fileprivate 
func _load_glCompressedTexImage1D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage1D = unsafeBitCast(OpenGL.getfp("glCompressedTexImage1D", support: [OpenGL.ss349]), to: Swift.type(of: OpenGL.glCompressedTexImage1D))
    OpenGL.glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage1DARB(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage1DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexImage1DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexImage1DARB))
    OpenGL.glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage2D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage2D = unsafeBitCast(OpenGL.getfp("glCompressedTexImage2D", support: [OpenGL.ss349, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCompressedTexImage2D))
    OpenGL.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage2DARB(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage2DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexImage2DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexImage2DARB))
    OpenGL.glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage3D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage3D = unsafeBitCast(OpenGL.getfp("glCompressedTexImage3D", support: [OpenGL.ss349, OpenGL.ss366]), to: Swift.type(of: OpenGL.glCompressedTexImage3D))
    OpenGL.glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage3DARB(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage3DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexImage3DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexImage3DARB))
    OpenGL.glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexImage3DOES(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexImage3DOES = unsafeBitCast(OpenGL.getfp("glCompressedTexImage3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glCompressedTexImage3DOES))
    OpenGL.glCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage1D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage1D = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage1D", support: [OpenGL.ss349]), to: Swift.type(of: OpenGL.glCompressedTexSubImage1D))
    OpenGL.glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage1DARB(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage1DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage1DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexSubImage1DARB))
    OpenGL.glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage2D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage2D = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage2D", support: [OpenGL.ss349, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCompressedTexSubImage2D))
    OpenGL.glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage2DARB(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage2DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage2DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexSubImage2DARB))
    OpenGL.glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage3D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage3D = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage3D", support: [OpenGL.ss349, OpenGL.ss366]), to: Swift.type(of: OpenGL.glCompressedTexSubImage3D))
    OpenGL.glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage3DARB(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage3DARB = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage3DARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glCompressedTexSubImage3DARB))
    OpenGL.glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTexSubImage3DOES(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTexSubImage3DOES = unsafeBitCast(OpenGL.getfp("glCompressedTexSubImage3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glCompressedTexSubImage3DOES))
    OpenGL.glCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTextureImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureImage1DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureImage1DEXT))
    OpenGL.glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedTextureImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureImage2DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureImage2DEXT))
    OpenGL.glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedTextureImage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureImage3DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureImage3DEXT))
    OpenGL.glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
fileprivate 
func _load_glCompressedTextureSubImage1D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage1D = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage1D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage1D))
    OpenGL.glCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTextureSubImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage1DEXT))
    OpenGL.glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits)
}
fileprivate 
func _load_glCompressedTextureSubImage2D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage2D = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage2D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage2D))
    OpenGL.glCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTextureSubImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage2DEXT))
    OpenGL.glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
fileprivate 
func _load_glCompressedTextureSubImage3D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, data:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage3D = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage3D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage3D))
    OpenGL.glCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
fileprivate 
func _load_glCompressedTextureSubImage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, imageSize:OpenGL.Size, bits:UnsafeRawPointer?)
{
    OpenGL.glCompressedTextureSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glCompressedTextureSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCompressedTextureSubImage3DEXT))
    OpenGL.glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
fileprivate 
func _load_glConservativeRasterParameterfNV(pname:OpenGL.Enum, value:OpenGL.Float)
{
    OpenGL.glConservativeRasterParameterfNV = unsafeBitCast(OpenGL.getfp("glConservativeRasterParameterfNV", support: [OpenGL.ss233]), to: Swift.type(of: OpenGL.glConservativeRasterParameterfNV))
    OpenGL.glConservativeRasterParameterfNV(pname, value)
}
fileprivate 
func _load_glConvolutionFilter1D(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeRawPointer?)
{
    OpenGL.glConvolutionFilter1D = unsafeBitCast(OpenGL.getfp("glConvolutionFilter1D", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionFilter1D))
    OpenGL.glConvolutionFilter1D(target, internalformat, width, format, type, image)
}
fileprivate 
func _load_glConvolutionFilter1DEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeRawPointer?)
{
    OpenGL.glConvolutionFilter1DEXT = unsafeBitCast(OpenGL.getfp("glConvolutionFilter1DEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionFilter1DEXT))
    OpenGL.glConvolutionFilter1DEXT(target, internalformat, width, format, type, image)
}
fileprivate 
func _load_glConvolutionFilter2D(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeRawPointer?)
{
    OpenGL.glConvolutionFilter2D = unsafeBitCast(OpenGL.getfp("glConvolutionFilter2D", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionFilter2D))
    OpenGL.glConvolutionFilter2D(target, internalformat, width, height, format, type, image)
}
fileprivate 
func _load_glConvolutionFilter2DEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeRawPointer?)
{
    OpenGL.glConvolutionFilter2DEXT = unsafeBitCast(OpenGL.getfp("glConvolutionFilter2DEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionFilter2DEXT))
    OpenGL.glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image)
}
fileprivate 
func _load_glConvolutionParameterf(target:OpenGL.Enum, pname:OpenGL.Enum, params:OpenGL.Float)
{
    OpenGL.glConvolutionParameterf = unsafeBitCast(OpenGL.getfp("glConvolutionParameterf", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionParameterf))
    OpenGL.glConvolutionParameterf(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameterfEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:OpenGL.Float)
{
    OpenGL.glConvolutionParameterfEXT = unsafeBitCast(OpenGL.getfp("glConvolutionParameterfEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionParameterfEXT))
    OpenGL.glConvolutionParameterfEXT(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glConvolutionParameterfv = unsafeBitCast(OpenGL.getfp("glConvolutionParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionParameterfv))
    OpenGL.glConvolutionParameterfv(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glConvolutionParameterfvEXT = unsafeBitCast(OpenGL.getfp("glConvolutionParameterfvEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionParameterfvEXT))
    OpenGL.glConvolutionParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameteri(target:OpenGL.Enum, pname:OpenGL.Enum, params:OpenGL.Int)
{
    OpenGL.glConvolutionParameteri = unsafeBitCast(OpenGL.getfp("glConvolutionParameteri", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionParameteri))
    OpenGL.glConvolutionParameteri(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameteriEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:OpenGL.Int)
{
    OpenGL.glConvolutionParameteriEXT = unsafeBitCast(OpenGL.getfp("glConvolutionParameteriEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionParameteriEXT))
    OpenGL.glConvolutionParameteriEXT(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glConvolutionParameteriv = unsafeBitCast(OpenGL.getfp("glConvolutionParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glConvolutionParameteriv))
    OpenGL.glConvolutionParameteriv(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glConvolutionParameterivEXT = unsafeBitCast(OpenGL.getfp("glConvolutionParameterivEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glConvolutionParameterivEXT))
    OpenGL.glConvolutionParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glConvolutionParameterxOES(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glConvolutionParameterxOES = unsafeBitCast(OpenGL.getfp("glConvolutionParameterxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glConvolutionParameterxOES))
    OpenGL.glConvolutionParameterxOES(target, pname, param)
}
fileprivate 
func _load_glConvolutionParameterxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glConvolutionParameterxvOES = unsafeBitCast(OpenGL.getfp("glConvolutionParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glConvolutionParameterxvOES))
    OpenGL.glConvolutionParameterxvOES(target, pname, params)
}
fileprivate 
func _load_glCopyBufferSubData(readTarget:OpenGL.Enum, writeTarget:OpenGL.Enum, readOffset:OpenGL.IntPointer, writeOffset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glCopyBufferSubData = unsafeBitCast(OpenGL.getfp("glCopyBufferSubData", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss42]), to: Swift.type(of: OpenGL.glCopyBufferSubData))
    OpenGL.glCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size)
}
fileprivate 
func _load_glCopyBufferSubDataNV(readTarget:OpenGL.Enum, writeTarget:OpenGL.Enum, readOffset:OpenGL.IntPointer, writeOffset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glCopyBufferSubDataNV = unsafeBitCast(OpenGL.getfp("glCopyBufferSubDataNV", support: [OpenGL.ss234]), to: Swift.type(of: OpenGL.glCopyBufferSubDataNV))
    OpenGL.glCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size)
}
fileprivate 
func _load_glCopyColorSubTable(target:OpenGL.Enum, start:OpenGL.Size, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyColorSubTable = unsafeBitCast(OpenGL.getfp("glCopyColorSubTable", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glCopyColorSubTable))
    OpenGL.glCopyColorSubTable(target, start, x, y, width)
}
fileprivate 
func _load_glCopyColorSubTableEXT(target:OpenGL.Enum, start:OpenGL.Size, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyColorSubTableEXT = unsafeBitCast(OpenGL.getfp("glCopyColorSubTableEXT", support: [OpenGL.ss133]), to: Swift.type(of: OpenGL.glCopyColorSubTableEXT))
    OpenGL.glCopyColorSubTableEXT(target, start, x, y, width)
}
fileprivate 
func _load_glCopyColorTable(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyColorTable = unsafeBitCast(OpenGL.getfp("glCopyColorTable", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glCopyColorTable))
    OpenGL.glCopyColorTable(target, internalformat, x, y, width)
}
fileprivate 
func _load_glCopyColorTableSGI(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyColorTableSGI = unsafeBitCast(OpenGL.getfp("glCopyColorTableSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glCopyColorTableSGI))
    OpenGL.glCopyColorTableSGI(target, internalformat, x, y, width)
}
fileprivate 
func _load_glCopyConvolutionFilter1D(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyConvolutionFilter1D = unsafeBitCast(OpenGL.getfp("glCopyConvolutionFilter1D", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glCopyConvolutionFilter1D))
    OpenGL.glCopyConvolutionFilter1D(target, internalformat, x, y, width)
}
fileprivate 
func _load_glCopyConvolutionFilter1DEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyConvolutionFilter1DEXT = unsafeBitCast(OpenGL.getfp("glCopyConvolutionFilter1DEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glCopyConvolutionFilter1DEXT))
    OpenGL.glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width)
}
fileprivate 
func _load_glCopyConvolutionFilter2D(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyConvolutionFilter2D = unsafeBitCast(OpenGL.getfp("glCopyConvolutionFilter2D", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glCopyConvolutionFilter2D))
    OpenGL.glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
}
fileprivate 
func _load_glCopyConvolutionFilter2DEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyConvolutionFilter2DEXT = unsafeBitCast(OpenGL.getfp("glCopyConvolutionFilter2DEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glCopyConvolutionFilter2DEXT))
    OpenGL.glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height)
}
fileprivate 
func _load_glCopyImageSubData(srcName:OpenGL.UInt, srcTarget:OpenGL.Enum, srcLevel:OpenGL.Int, srcX:OpenGL.Int, srcY:OpenGL.Int, srcZ:OpenGL.Int, dstName:OpenGL.UInt, dstTarget:OpenGL.Enum, dstLevel:OpenGL.Int, dstX:OpenGL.Int, dstY:OpenGL.Int, dstZ:OpenGL.Int, srcWidth:OpenGL.Size, srcHeight:OpenGL.Size, srcDepth:OpenGL.Size)
{
    OpenGL.glCopyImageSubData = unsafeBitCast(OpenGL.getfp("glCopyImageSubData", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss43]), to: Swift.type(of: OpenGL.glCopyImageSubData))
    OpenGL.glCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
fileprivate 
func _load_glCopyImageSubDataEXT(srcName:OpenGL.UInt, srcTarget:OpenGL.Enum, srcLevel:OpenGL.Int, srcX:OpenGL.Int, srcY:OpenGL.Int, srcZ:OpenGL.Int, dstName:OpenGL.UInt, dstTarget:OpenGL.Enum, dstLevel:OpenGL.Int, dstX:OpenGL.Int, dstY:OpenGL.Int, dstZ:OpenGL.Int, srcWidth:OpenGL.Size, srcHeight:OpenGL.Size, srcDepth:OpenGL.Size)
{
    OpenGL.glCopyImageSubDataEXT = unsafeBitCast(OpenGL.getfp("glCopyImageSubDataEXT", support: [OpenGL.ss137]), to: Swift.type(of: OpenGL.glCopyImageSubDataEXT))
    OpenGL.glCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
fileprivate 
func _load_glCopyImageSubDataNV(srcName:OpenGL.UInt, srcTarget:OpenGL.Enum, srcLevel:OpenGL.Int, srcX:OpenGL.Int, srcY:OpenGL.Int, srcZ:OpenGL.Int, dstName:OpenGL.UInt, dstTarget:OpenGL.Enum, dstLevel:OpenGL.Int, dstX:OpenGL.Int, dstY:OpenGL.Int, dstZ:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glCopyImageSubDataNV = unsafeBitCast(OpenGL.getfp("glCopyImageSubDataNV", support: [OpenGL.ss235]), to: Swift.type(of: OpenGL.glCopyImageSubDataNV))
    OpenGL.glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}
fileprivate 
func _load_glCopyImageSubDataOES(srcName:OpenGL.UInt, srcTarget:OpenGL.Enum, srcLevel:OpenGL.Int, srcX:OpenGL.Int, srcY:OpenGL.Int, srcZ:OpenGL.Int, dstName:OpenGL.UInt, dstTarget:OpenGL.Enum, dstLevel:OpenGL.Int, dstX:OpenGL.Int, dstY:OpenGL.Int, dstZ:OpenGL.Int, srcWidth:OpenGL.Size, srcHeight:OpenGL.Size, srcDepth:OpenGL.Size)
{
    OpenGL.glCopyImageSubDataOES = unsafeBitCast(OpenGL.getfp("glCopyImageSubDataOES", support: [OpenGL.ss288]), to: Swift.type(of: OpenGL.glCopyImageSubDataOES))
    OpenGL.glCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
fileprivate 
func _load_glCopyMultiTexImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyMultiTexImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyMultiTexImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyMultiTexImage1DEXT))
    OpenGL.glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border)
}
fileprivate 
func _load_glCopyMultiTexImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyMultiTexImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyMultiTexImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyMultiTexImage2DEXT))
    OpenGL.glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border)
}
fileprivate 
func _load_glCopyMultiTexSubImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyMultiTexSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyMultiTexSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyMultiTexSubImage1DEXT))
    OpenGL.glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width)
}
fileprivate 
func _load_glCopyMultiTexSubImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyMultiTexSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyMultiTexSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyMultiTexSubImage2DEXT))
    OpenGL.glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyMultiTexSubImage3DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyMultiTexSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glCopyMultiTexSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyMultiTexSubImage3DEXT))
    OpenGL.glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyNamedBufferSubData(readBuffer:OpenGL.UInt, writeBuffer:OpenGL.UInt, readOffset:OpenGL.IntPointer, writeOffset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glCopyNamedBufferSubData = unsafeBitCast(OpenGL.getfp("glCopyNamedBufferSubData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCopyNamedBufferSubData))
    OpenGL.glCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
fileprivate 
func _load_glCopyPathNV(resultPath:OpenGL.UInt, srcPath:OpenGL.UInt)
{
    OpenGL.glCopyPathNV = unsafeBitCast(OpenGL.getfp("glCopyPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glCopyPathNV))
    OpenGL.glCopyPathNV(resultPath, srcPath)
}
fileprivate 
func _load_glCopyPixels(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, type:OpenGL.Enum)
{
    OpenGL.glCopyPixels = unsafeBitCast(OpenGL.getfp("glCopyPixels", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glCopyPixels))
    OpenGL.glCopyPixels(x, y, width, height, type)
}
fileprivate 
func _load_glCopyTexImage1D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTexImage1D = unsafeBitCast(OpenGL.getfp("glCopyTexImage1D", support: [OpenGL.ss347]), to: Swift.type(of: OpenGL.glCopyTexImage1D))
    OpenGL.glCopyTexImage1D(target, level, internalformat, x, y, width, border)
}
fileprivate 
func _load_glCopyTexImage1DEXT(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTexImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyTexImage1DEXT", support: [OpenGL.ss138]), to: Swift.type(of: OpenGL.glCopyTexImage1DEXT))
    OpenGL.glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border)
}
fileprivate 
func _load_glCopyTexImage2D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTexImage2D = unsafeBitCast(OpenGL.getfp("glCopyTexImage2D", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCopyTexImage2D))
    OpenGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)
}
fileprivate 
func _load_glCopyTexImage2DEXT(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTexImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyTexImage2DEXT", support: [OpenGL.ss138]), to: Swift.type(of: OpenGL.glCopyTexImage2DEXT))
    OpenGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border)
}
fileprivate 
func _load_glCopyTexSubImage1D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage1D = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage1D", support: [OpenGL.ss347]), to: Swift.type(of: OpenGL.glCopyTexSubImage1D))
    OpenGL.glCopyTexSubImage1D(target, level, xoffset, x, y, width)
}
fileprivate 
func _load_glCopyTexSubImage1DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage1DEXT", support: [OpenGL.ss138]), to: Swift.type(of: OpenGL.glCopyTexSubImage1DEXT))
    OpenGL.glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width)
}
fileprivate 
func _load_glCopyTexSubImage2D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage2D = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage2D", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCopyTexSubImage2D))
    OpenGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTexSubImage2DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage2DEXT", support: [OpenGL.ss138]), to: Swift.type(of: OpenGL.glCopyTexSubImage2DEXT))
    OpenGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTexSubImage3D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage3D = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage3D", support: [OpenGL.ss348, OpenGL.ss366]), to: Swift.type(of: OpenGL.glCopyTexSubImage3D))
    OpenGL.glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTexSubImage3DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage3DEXT", support: [OpenGL.ss138]), to: Swift.type(of: OpenGL.glCopyTexSubImage3DEXT))
    OpenGL.glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTexSubImage3DOES(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTexSubImage3DOES = unsafeBitCast(OpenGL.getfp("glCopyTexSubImage3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glCopyTexSubImage3DOES))
    OpenGL.glCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTextureImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTextureImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyTextureImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyTextureImage1DEXT))
    OpenGL.glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border)
}
fileprivate 
func _load_glCopyTextureImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int)
{
    OpenGL.glCopyTextureImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyTextureImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyTextureImage2DEXT))
    OpenGL.glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border)
}
fileprivate 
func _load_glCopyTextureLevelsAPPLE(destinationTexture:OpenGL.UInt, sourceTexture:OpenGL.UInt, sourceBaseLevel:OpenGL.Int, sourceLevelCount:OpenGL.Size)
{
    OpenGL.glCopyTextureLevelsAPPLE = unsafeBitCast(OpenGL.getfp("glCopyTextureLevelsAPPLE", support: [OpenGL.ss17]), to: Swift.type(of: OpenGL.glCopyTextureLevelsAPPLE))
    OpenGL.glCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
}
fileprivate 
func _load_glCopyTextureSubImage1D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage1D = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage1D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCopyTextureSubImage1D))
    OpenGL.glCopyTextureSubImage1D(texture, level, xoffset, x, y, width)
}
fileprivate 
func _load_glCopyTextureSubImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyTextureSubImage1DEXT))
    OpenGL.glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width)
}
fileprivate 
func _load_glCopyTextureSubImage2D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage2D = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage2D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCopyTextureSubImage2D))
    OpenGL.glCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTextureSubImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyTextureSubImage2DEXT))
    OpenGL.glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTextureSubImage3D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage3D = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage3D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCopyTextureSubImage3D))
    OpenGL.glCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCopyTextureSubImage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glCopyTextureSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glCopyTextureSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glCopyTextureSubImage3DEXT))
    OpenGL.glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
fileprivate 
func _load_glCoverFillPathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, coverMode:OpenGL.Enum, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glCoverFillPathInstancedNV = unsafeBitCast(OpenGL.getfp("glCoverFillPathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glCoverFillPathInstancedNV))
    OpenGL.glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
fileprivate 
func _load_glCoverFillPathNV(path:OpenGL.UInt, coverMode:OpenGL.Enum)
{
    OpenGL.glCoverFillPathNV = unsafeBitCast(OpenGL.getfp("glCoverFillPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glCoverFillPathNV))
    OpenGL.glCoverFillPathNV(path, coverMode)
}
fileprivate 
func _load_glCoverStrokePathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, coverMode:OpenGL.Enum, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glCoverStrokePathInstancedNV = unsafeBitCast(OpenGL.getfp("glCoverStrokePathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glCoverStrokePathInstancedNV))
    OpenGL.glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
fileprivate 
func _load_glCoverStrokePathNV(path:OpenGL.UInt, coverMode:OpenGL.Enum)
{
    OpenGL.glCoverStrokePathNV = unsafeBitCast(OpenGL.getfp("glCoverStrokePathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glCoverStrokePathNV))
    OpenGL.glCoverStrokePathNV(path, coverMode)
}
fileprivate 
func _load_glCoverageMaskNV(mask:OpenGL.Bool)
{
    OpenGL.glCoverageMaskNV = unsafeBitCast(OpenGL.getfp("glCoverageMaskNV", support: [OpenGL.ss236]), to: Swift.type(of: OpenGL.glCoverageMaskNV))
    OpenGL.glCoverageMaskNV(mask)
}
fileprivate 
func _load_glCoverageModulationNV(components:OpenGL.Enum)
{
    OpenGL.glCoverageModulationNV = unsafeBitCast(OpenGL.getfp("glCoverageModulationNV", support: [OpenGL.ss247]), to: Swift.type(of: OpenGL.glCoverageModulationNV))
    OpenGL.glCoverageModulationNV(components)
}
fileprivate 
func _load_glCoverageModulationTableNV(n:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glCoverageModulationTableNV = unsafeBitCast(OpenGL.getfp("glCoverageModulationTableNV", support: [OpenGL.ss247]), to: Swift.type(of: OpenGL.glCoverageModulationTableNV))
    OpenGL.glCoverageModulationTableNV(n, v)
}
fileprivate 
func _load_glCoverageOperationNV(operation:OpenGL.Enum)
{
    OpenGL.glCoverageOperationNV = unsafeBitCast(OpenGL.getfp("glCoverageOperationNV", support: [OpenGL.ss236]), to: Swift.type(of: OpenGL.glCoverageOperationNV))
    OpenGL.glCoverageOperationNV(operation)
}
fileprivate 
func _load_glCreateBuffers(n:OpenGL.Size, buffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateBuffers = unsafeBitCast(OpenGL.getfp("glCreateBuffers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateBuffers))
    OpenGL.glCreateBuffers(n, buffers)
}
fileprivate 
func _load_glCreateCommandListsNV(n:OpenGL.Size, lists:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateCommandListsNV = unsafeBitCast(OpenGL.getfp("glCreateCommandListsNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glCreateCommandListsNV))
    OpenGL.glCreateCommandListsNV(n, lists)
}
fileprivate 
func _load_glCreateFramebuffers(n:OpenGL.Size, framebuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateFramebuffers = unsafeBitCast(OpenGL.getfp("glCreateFramebuffers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateFramebuffers))
    OpenGL.glCreateFramebuffers(n, framebuffers)
}
fileprivate 
func _load_glCreatePerfQueryINTEL(queryId:OpenGL.UInt, queryHandle:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreatePerfQueryINTEL = unsafeBitCast(OpenGL.getfp("glCreatePerfQueryINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glCreatePerfQueryINTEL))
    OpenGL.glCreatePerfQueryINTEL(queryId, queryHandle)
}
fileprivate 
func _load_glCreateProgram() -> OpenGL.UInt
{
    OpenGL.glCreateProgram = unsafeBitCast(OpenGL.getfp("glCreateProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCreateProgram))
    return OpenGL.glCreateProgram()
}
fileprivate 
func _load_glCreateProgramObjectARB() -> OpenGL.HandleARB
{
    OpenGL.glCreateProgramObjectARB = unsafeBitCast(OpenGL.getfp("glCreateProgramObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glCreateProgramObjectARB))
    return OpenGL.glCreateProgramObjectARB()
}
fileprivate 
func _load_glCreateProgramPipelines(n:OpenGL.Size, pipelines:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateProgramPipelines = unsafeBitCast(OpenGL.getfp("glCreateProgramPipelines", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateProgramPipelines))
    OpenGL.glCreateProgramPipelines(n, pipelines)
}
fileprivate 
func _load_glCreateQueries(target:OpenGL.Enum, n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateQueries = unsafeBitCast(OpenGL.getfp("glCreateQueries", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateQueries))
    OpenGL.glCreateQueries(target, n, ids)
}
fileprivate 
func _load_glCreateRenderbuffers(n:OpenGL.Size, renderbuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateRenderbuffers = unsafeBitCast(OpenGL.getfp("glCreateRenderbuffers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateRenderbuffers))
    OpenGL.glCreateRenderbuffers(n, renderbuffers)
}
fileprivate 
func _load_glCreateSamplers(n:OpenGL.Size, samplers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateSamplers = unsafeBitCast(OpenGL.getfp("glCreateSamplers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateSamplers))
    OpenGL.glCreateSamplers(n, samplers)
}
fileprivate 
func _load_glCreateShader(type:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glCreateShader = unsafeBitCast(OpenGL.getfp("glCreateShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCreateShader))
    return OpenGL.glCreateShader(type)
}
fileprivate 
func _load_glCreateShaderObjectARB(shaderType:OpenGL.Enum) -> OpenGL.HandleARB
{
    OpenGL.glCreateShaderObjectARB = unsafeBitCast(OpenGL.getfp("glCreateShaderObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glCreateShaderObjectARB))
    return OpenGL.glCreateShaderObjectARB(shaderType)
}
fileprivate 
func _load_glCreateShaderProgramEXT(type:OpenGL.Enum, string:UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glCreateShaderProgramEXT = unsafeBitCast(OpenGL.getfp("glCreateShaderProgramEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glCreateShaderProgramEXT))
    return OpenGL.glCreateShaderProgramEXT(type, string)
}
fileprivate 
func _load_glCreateShaderProgramv(type:OpenGL.Enum, count:OpenGL.Size, strings:UnsafePointer<UnsafePointer<OpenGL.Char>?>?) -> OpenGL.UInt
{
    OpenGL.glCreateShaderProgramv = unsafeBitCast(OpenGL.getfp("glCreateShaderProgramv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glCreateShaderProgramv))
    return OpenGL.glCreateShaderProgramv(type, count, strings)
}
fileprivate 
func _load_glCreateShaderProgramvEXT(type:OpenGL.Enum, count:OpenGL.Size, strings:UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.Char>?>?) -> OpenGL.UInt
{
    OpenGL.glCreateShaderProgramvEXT = unsafeBitCast(OpenGL.getfp("glCreateShaderProgramvEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glCreateShaderProgramvEXT))
    return OpenGL.glCreateShaderProgramvEXT(type, count, strings)
}
fileprivate 
func _load_glCreateStatesNV(n:OpenGL.Size, states:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateStatesNV = unsafeBitCast(OpenGL.getfp("glCreateStatesNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glCreateStatesNV))
    OpenGL.glCreateStatesNV(n, states)
}
fileprivate 
func _load_glCreateSyncFromCLeventARB(context:UnsafeMutablePointer<OpaquePointer?>?, event:UnsafeMutablePointer<OpaquePointer?>?, flags:OpenGL.Bitfield) -> OpenGL.Sync
{
    OpenGL.glCreateSyncFromCLeventARB = unsafeBitCast(OpenGL.getfp("glCreateSyncFromCLeventARB", support: [OpenGL.ss35]), to: Swift.type(of: OpenGL.glCreateSyncFromCLeventARB))
    return OpenGL.glCreateSyncFromCLeventARB(context, event, flags)
}
fileprivate 
func _load_glCreateTextures(target:OpenGL.Enum, n:OpenGL.Size, textures:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateTextures = unsafeBitCast(OpenGL.getfp("glCreateTextures", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateTextures))
    OpenGL.glCreateTextures(target, n, textures)
}
fileprivate 
func _load_glCreateTransformFeedbacks(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateTransformFeedbacks = unsafeBitCast(OpenGL.getfp("glCreateTransformFeedbacks", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateTransformFeedbacks))
    OpenGL.glCreateTransformFeedbacks(n, ids)
}
fileprivate 
func _load_glCreateVertexArrays(n:OpenGL.Size, arrays:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glCreateVertexArrays = unsafeBitCast(OpenGL.getfp("glCreateVertexArrays", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glCreateVertexArrays))
    OpenGL.glCreateVertexArrays(n, arrays)
}
fileprivate 
func _load_glCullFace(mode:OpenGL.Enum)
{
    OpenGL.glCullFace = unsafeBitCast(OpenGL.getfp("glCullFace", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glCullFace))
    OpenGL.glCullFace(mode)
}
fileprivate 
func _load_glCullParameterdvEXT(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glCullParameterdvEXT = unsafeBitCast(OpenGL.getfp("glCullParameterdvEXT", support: [OpenGL.ss139]), to: Swift.type(of: OpenGL.glCullParameterdvEXT))
    OpenGL.glCullParameterdvEXT(pname, params)
}
fileprivate 
func _load_glCullParameterfvEXT(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glCullParameterfvEXT = unsafeBitCast(OpenGL.getfp("glCullParameterfvEXT", support: [OpenGL.ss139]), to: Swift.type(of: OpenGL.glCullParameterfvEXT))
    OpenGL.glCullParameterfvEXT(pname, params)
}
fileprivate 
func _load_glCurrentPaletteMatrixARB(index:OpenGL.Int)
{
    OpenGL.glCurrentPaletteMatrixARB = unsafeBitCast(OpenGL.getfp("glCurrentPaletteMatrixARB", support: [OpenGL.ss66]), to: Swift.type(of: OpenGL.glCurrentPaletteMatrixARB))
    OpenGL.glCurrentPaletteMatrixARB(index)
}
fileprivate 
func _load_glCurrentPaletteMatrixOES(matrixpaletteindex:OpenGL.UInt)
{
    OpenGL.glCurrentPaletteMatrixOES = unsafeBitCast(OpenGL.getfp("glCurrentPaletteMatrixOES", support: [OpenGL.ss297]), to: Swift.type(of: OpenGL.glCurrentPaletteMatrixOES))
    OpenGL.glCurrentPaletteMatrixOES(matrixpaletteindex)
}
fileprivate 
func _load_glDebugMessageCallback(callback:OpenGL.DebugProc, userParam:UnsafeRawPointer?)
{
    OpenGL.glDebugMessageCallback = unsafeBitCast(OpenGL.getfp("glDebugMessageCallback", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageCallback))
    OpenGL.glDebugMessageCallback(callback, userParam)
}
fileprivate 
func _load_glDebugMessageCallbackAMD(callback:OpenGL.DebugProcAMD, userParam:UnsafeMutableRawPointer?)
{
    OpenGL.glDebugMessageCallbackAMD = unsafeBitCast(OpenGL.getfp("glDebugMessageCallbackAMD", support: [OpenGL.ss1]), to: Swift.type(of: OpenGL.glDebugMessageCallbackAMD))
    OpenGL.glDebugMessageCallbackAMD(callback, userParam)
}
fileprivate 
func _load_glDebugMessageCallbackARB(callback:OpenGL.DebugProcARB, userParam:UnsafeRawPointer?)
{
    OpenGL.glDebugMessageCallbackARB = unsafeBitCast(OpenGL.getfp("glDebugMessageCallbackARB", support: [OpenGL.ss44]), to: Swift.type(of: OpenGL.glDebugMessageCallbackARB))
    OpenGL.glDebugMessageCallbackARB(callback, userParam)
}
fileprivate 
func _load_glDebugMessageCallbackKHR(callback:OpenGL.DebugProcKHR, userParam:UnsafeRawPointer?)
{
    OpenGL.glDebugMessageCallbackKHR = unsafeBitCast(OpenGL.getfp("glDebugMessageCallbackKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageCallbackKHR))
    OpenGL.glDebugMessageCallbackKHR(callback, userParam)
}
fileprivate 
func _load_glDebugMessageControl(source:OpenGL.Enum, type:OpenGL.Enum, severity:OpenGL.Enum, count:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?, enabled:OpenGL.Bool)
{
    OpenGL.glDebugMessageControl = unsafeBitCast(OpenGL.getfp("glDebugMessageControl", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageControl))
    OpenGL.glDebugMessageControl(source, type, severity, count, ids, enabled)
}
fileprivate 
func _load_glDebugMessageControlARB(source:OpenGL.Enum, type:OpenGL.Enum, severity:OpenGL.Enum, count:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?, enabled:OpenGL.Bool)
{
    OpenGL.glDebugMessageControlARB = unsafeBitCast(OpenGL.getfp("glDebugMessageControlARB", support: [OpenGL.ss44]), to: Swift.type(of: OpenGL.glDebugMessageControlARB))
    OpenGL.glDebugMessageControlARB(source, type, severity, count, ids, enabled)
}
fileprivate 
func _load_glDebugMessageControlKHR(source:OpenGL.Enum, type:OpenGL.Enum, severity:OpenGL.Enum, count:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?, enabled:OpenGL.Bool)
{
    OpenGL.glDebugMessageControlKHR = unsafeBitCast(OpenGL.getfp("glDebugMessageControlKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageControlKHR))
    OpenGL.glDebugMessageControlKHR(source, type, severity, count, ids, enabled)
}
fileprivate 
func _load_glDebugMessageEnableAMD(category:OpenGL.Enum, severity:OpenGL.Enum, count:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?, enabled:OpenGL.Bool)
{
    OpenGL.glDebugMessageEnableAMD = unsafeBitCast(OpenGL.getfp("glDebugMessageEnableAMD", support: [OpenGL.ss1]), to: Swift.type(of: OpenGL.glDebugMessageEnableAMD))
    OpenGL.glDebugMessageEnableAMD(category, severity, count, ids, enabled)
}
fileprivate 
func _load_glDebugMessageInsert(source:OpenGL.Enum, type:OpenGL.Enum, id:OpenGL.UInt, severity:OpenGL.Enum, length:OpenGL.Size, buf:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glDebugMessageInsert = unsafeBitCast(OpenGL.getfp("glDebugMessageInsert", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageInsert))
    OpenGL.glDebugMessageInsert(source, type, id, severity, length, buf)
}
fileprivate 
func _load_glDebugMessageInsertAMD(category:OpenGL.Enum, severity:OpenGL.Enum, id:OpenGL.UInt, length:OpenGL.Size, buf:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glDebugMessageInsertAMD = unsafeBitCast(OpenGL.getfp("glDebugMessageInsertAMD", support: [OpenGL.ss1]), to: Swift.type(of: OpenGL.glDebugMessageInsertAMD))
    OpenGL.glDebugMessageInsertAMD(category, severity, id, length, buf)
}
fileprivate 
func _load_glDebugMessageInsertARB(source:OpenGL.Enum, type:OpenGL.Enum, id:OpenGL.UInt, severity:OpenGL.Enum, length:OpenGL.Size, buf:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glDebugMessageInsertARB = unsafeBitCast(OpenGL.getfp("glDebugMessageInsertARB", support: [OpenGL.ss44]), to: Swift.type(of: OpenGL.glDebugMessageInsertARB))
    OpenGL.glDebugMessageInsertARB(source, type, id, severity, length, buf)
}
fileprivate 
func _load_glDebugMessageInsertKHR(source:OpenGL.Enum, type:OpenGL.Enum, id:OpenGL.UInt, severity:OpenGL.Enum, length:OpenGL.Size, buf:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glDebugMessageInsertKHR = unsafeBitCast(OpenGL.getfp("glDebugMessageInsertKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glDebugMessageInsertKHR))
    OpenGL.glDebugMessageInsertKHR(source, type, id, severity, length, buf)
}
fileprivate 
func _load_glDeformSGIX(mask:OpenGL.Bitfield)
{
    OpenGL.glDeformSGIX = unsafeBitCast(OpenGL.getfp("glDeformSGIX", support: [OpenGL.ss336]), to: Swift.type(of: OpenGL.glDeformSGIX))
    OpenGL.glDeformSGIX(mask)
}
fileprivate 
func _load_glDeformationMap3dSGIX(target:OpenGL.Enum, u1:OpenGL.Double, u2:OpenGL.Double, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Double, v2:OpenGL.Double, vstride:OpenGL.Int, vorder:OpenGL.Int, w1:OpenGL.Double, w2:OpenGL.Double, wstride:OpenGL.Int, worder:OpenGL.Int, points:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glDeformationMap3dSGIX = unsafeBitCast(OpenGL.getfp("glDeformationMap3dSGIX", support: [OpenGL.ss336]), to: Swift.type(of: OpenGL.glDeformationMap3dSGIX))
    OpenGL.glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
fileprivate 
func _load_glDeformationMap3fSGIX(target:OpenGL.Enum, u1:OpenGL.Float, u2:OpenGL.Float, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Float, v2:OpenGL.Float, vstride:OpenGL.Int, vorder:OpenGL.Int, w1:OpenGL.Float, w2:OpenGL.Float, wstride:OpenGL.Int, worder:OpenGL.Int, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glDeformationMap3fSGIX = unsafeBitCast(OpenGL.getfp("glDeformationMap3fSGIX", support: [OpenGL.ss336]), to: Swift.type(of: OpenGL.glDeformationMap3fSGIX))
    OpenGL.glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
fileprivate 
func _load_glDeleteAsyncMarkersSGIX(marker:OpenGL.UInt, range:OpenGL.Size)
{
    OpenGL.glDeleteAsyncMarkersSGIX = unsafeBitCast(OpenGL.getfp("glDeleteAsyncMarkersSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glDeleteAsyncMarkersSGIX))
    OpenGL.glDeleteAsyncMarkersSGIX(marker, range)
}
fileprivate 
func _load_glDeleteBuffers(n:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteBuffers = unsafeBitCast(OpenGL.getfp("glDeleteBuffers", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDeleteBuffers))
    OpenGL.glDeleteBuffers(n, buffers)
}
fileprivate 
func _load_glDeleteBuffersARB(n:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteBuffersARB = unsafeBitCast(OpenGL.getfp("glDeleteBuffersARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glDeleteBuffersARB))
    OpenGL.glDeleteBuffersARB(n, buffers)
}
fileprivate 
func _load_glDeleteCommandListsNV(n:OpenGL.Size, lists:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteCommandListsNV = unsafeBitCast(OpenGL.getfp("glDeleteCommandListsNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDeleteCommandListsNV))
    OpenGL.glDeleteCommandListsNV(n, lists)
}
fileprivate 
func _load_glDeleteFencesAPPLE(n:OpenGL.Size, fences:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteFencesAPPLE = unsafeBitCast(OpenGL.getfp("glDeleteFencesAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glDeleteFencesAPPLE))
    OpenGL.glDeleteFencesAPPLE(n, fences)
}
fileprivate 
func _load_glDeleteFencesNV(n:OpenGL.Size, fences:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteFencesNV = unsafeBitCast(OpenGL.getfp("glDeleteFencesNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glDeleteFencesNV))
    OpenGL.glDeleteFencesNV(n, fences)
}
fileprivate 
func _load_glDeleteFragmentShaderATI(id:OpenGL.UInt)
{
    OpenGL.glDeleteFragmentShaderATI = unsafeBitCast(OpenGL.getfp("glDeleteFragmentShaderATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glDeleteFragmentShaderATI))
    OpenGL.glDeleteFragmentShaderATI(id)
}
fileprivate 
func _load_glDeleteFramebuffers(n:OpenGL.Size, framebuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteFramebuffers = unsafeBitCast(OpenGL.getfp("glDeleteFramebuffers", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glDeleteFramebuffers))
    OpenGL.glDeleteFramebuffers(n, framebuffers)
}
fileprivate 
func _load_glDeleteFramebuffersEXT(n:OpenGL.Size, framebuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteFramebuffersEXT = unsafeBitCast(OpenGL.getfp("glDeleteFramebuffersEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glDeleteFramebuffersEXT))
    OpenGL.glDeleteFramebuffersEXT(n, framebuffers)
}
fileprivate 
func _load_glDeleteFramebuffersOES(n:OpenGL.Size, framebuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteFramebuffersOES = unsafeBitCast(OpenGL.getfp("glDeleteFramebuffersOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glDeleteFramebuffersOES))
    OpenGL.glDeleteFramebuffersOES(n, framebuffers)
}
fileprivate 
func _load_glDeleteLists(list:OpenGL.UInt, range:OpenGL.Size)
{
    OpenGL.glDeleteLists = unsafeBitCast(OpenGL.getfp("glDeleteLists", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glDeleteLists))
    OpenGL.glDeleteLists(list, range)
}
fileprivate 
func _load_glDeleteNamedStringARB(namelen:OpenGL.Int, name:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glDeleteNamedStringARB = unsafeBitCast(OpenGL.getfp("glDeleteNamedStringARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glDeleteNamedStringARB))
    OpenGL.glDeleteNamedStringARB(namelen, name)
}
fileprivate 
func _load_glDeleteNamesAMD(identifier:OpenGL.Enum, num:OpenGL.UInt, names:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteNamesAMD = unsafeBitCast(OpenGL.getfp("glDeleteNamesAMD", support: [OpenGL.ss6]), to: Swift.type(of: OpenGL.glDeleteNamesAMD))
    OpenGL.glDeleteNamesAMD(identifier, num, names)
}
fileprivate 
func _load_glDeleteObjectARB(obj:OpenGL.HandleARB)
{
    OpenGL.glDeleteObjectARB = unsafeBitCast(OpenGL.getfp("glDeleteObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glDeleteObjectARB))
    OpenGL.glDeleteObjectARB(obj)
}
fileprivate 
func _load_glDeleteOcclusionQueriesNV(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteOcclusionQueriesNV = unsafeBitCast(OpenGL.getfp("glDeleteOcclusionQueriesNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glDeleteOcclusionQueriesNV))
    OpenGL.glDeleteOcclusionQueriesNV(n, ids)
}
fileprivate 
func _load_glDeletePathsNV(path:OpenGL.UInt, range:OpenGL.Size)
{
    OpenGL.glDeletePathsNV = unsafeBitCast(OpenGL.getfp("glDeletePathsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glDeletePathsNV))
    OpenGL.glDeletePathsNV(path, range)
}
fileprivate 
func _load_glDeletePerfMonitorsAMD(n:OpenGL.Size, monitors:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glDeletePerfMonitorsAMD = unsafeBitCast(OpenGL.getfp("glDeletePerfMonitorsAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glDeletePerfMonitorsAMD))
    OpenGL.glDeletePerfMonitorsAMD(n, monitors)
}
fileprivate 
func _load_glDeletePerfQueryINTEL(queryHandle:OpenGL.UInt)
{
    OpenGL.glDeletePerfQueryINTEL = unsafeBitCast(OpenGL.getfp("glDeletePerfQueryINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glDeletePerfQueryINTEL))
    OpenGL.glDeletePerfQueryINTEL(queryHandle)
}
fileprivate 
func _load_glDeleteProgram(program:OpenGL.UInt)
{
    OpenGL.glDeleteProgram = unsafeBitCast(OpenGL.getfp("glDeleteProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDeleteProgram))
    OpenGL.glDeleteProgram(program)
}
fileprivate 
func _load_glDeleteProgramPipelines(n:OpenGL.Size, pipelines:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteProgramPipelines = unsafeBitCast(OpenGL.getfp("glDeleteProgramPipelines", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glDeleteProgramPipelines))
    OpenGL.glDeleteProgramPipelines(n, pipelines)
}
fileprivate 
func _load_glDeleteProgramPipelinesEXT(n:OpenGL.Size, pipelines:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteProgramPipelinesEXT = unsafeBitCast(OpenGL.getfp("glDeleteProgramPipelinesEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glDeleteProgramPipelinesEXT))
    OpenGL.glDeleteProgramPipelinesEXT(n, pipelines)
}
fileprivate 
func _load_glDeleteProgramsARB(n:OpenGL.Size, programs:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteProgramsARB = unsafeBitCast(OpenGL.getfp("glDeleteProgramsARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glDeleteProgramsARB))
    OpenGL.glDeleteProgramsARB(n, programs)
}
fileprivate 
func _load_glDeleteProgramsNV(n:OpenGL.Size, programs:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteProgramsNV = unsafeBitCast(OpenGL.getfp("glDeleteProgramsNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glDeleteProgramsNV))
    OpenGL.glDeleteProgramsNV(n, programs)
}
fileprivate 
func _load_glDeleteQueries(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteQueries = unsafeBitCast(OpenGL.getfp("glDeleteQueries", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glDeleteQueries))
    OpenGL.glDeleteQueries(n, ids)
}
fileprivate 
func _load_glDeleteQueriesARB(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteQueriesARB = unsafeBitCast(OpenGL.getfp("glDeleteQueriesARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glDeleteQueriesARB))
    OpenGL.glDeleteQueriesARB(n, ids)
}
fileprivate 
func _load_glDeleteQueriesEXT(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteQueriesEXT = unsafeBitCast(OpenGL.getfp("glDeleteQueriesEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glDeleteQueriesEXT))
    OpenGL.glDeleteQueriesEXT(n, ids)
}
fileprivate 
func _load_glDeleteRenderbuffers(n:OpenGL.Size, renderbuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteRenderbuffers = unsafeBitCast(OpenGL.getfp("glDeleteRenderbuffers", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glDeleteRenderbuffers))
    OpenGL.glDeleteRenderbuffers(n, renderbuffers)
}
fileprivate 
func _load_glDeleteRenderbuffersEXT(n:OpenGL.Size, renderbuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteRenderbuffersEXT = unsafeBitCast(OpenGL.getfp("glDeleteRenderbuffersEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glDeleteRenderbuffersEXT))
    OpenGL.glDeleteRenderbuffersEXT(n, renderbuffers)
}
fileprivate 
func _load_glDeleteRenderbuffersOES(n:OpenGL.Size, renderbuffers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteRenderbuffersOES = unsafeBitCast(OpenGL.getfp("glDeleteRenderbuffersOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glDeleteRenderbuffersOES))
    OpenGL.glDeleteRenderbuffersOES(n, renderbuffers)
}
fileprivate 
func _load_glDeleteSamplers(count:OpenGL.Size, samplers:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteSamplers = unsafeBitCast(OpenGL.getfp("glDeleteSamplers", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glDeleteSamplers))
    OpenGL.glDeleteSamplers(count, samplers)
}
fileprivate 
func _load_glDeleteShader(shader:OpenGL.UInt)
{
    OpenGL.glDeleteShader = unsafeBitCast(OpenGL.getfp("glDeleteShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDeleteShader))
    OpenGL.glDeleteShader(shader)
}
fileprivate 
func _load_glDeleteStatesNV(n:OpenGL.Size, states:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteStatesNV = unsafeBitCast(OpenGL.getfp("glDeleteStatesNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDeleteStatesNV))
    OpenGL.glDeleteStatesNV(n, states)
}
fileprivate 
func _load_glDeleteSync(sync:OpenGL.Sync)
{
    OpenGL.glDeleteSync = unsafeBitCast(OpenGL.getfp("glDeleteSync", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glDeleteSync))
    OpenGL.glDeleteSync(sync)
}
fileprivate 
func _load_glDeleteSyncAPPLE(sync:OpenGL.Sync)
{
    OpenGL.glDeleteSyncAPPLE = unsafeBitCast(OpenGL.getfp("glDeleteSyncAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glDeleteSyncAPPLE))
    OpenGL.glDeleteSyncAPPLE(sync)
}
fileprivate 
func _load_glDeleteTextures(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteTextures = unsafeBitCast(OpenGL.getfp("glDeleteTextures", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDeleteTextures))
    OpenGL.glDeleteTextures(n, textures)
}
fileprivate 
func _load_glDeleteTexturesEXT(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteTexturesEXT = unsafeBitCast(OpenGL.getfp("glDeleteTexturesEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glDeleteTexturesEXT))
    OpenGL.glDeleteTexturesEXT(n, textures)
}
fileprivate 
func _load_glDeleteTransformFeedbacks(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteTransformFeedbacks = unsafeBitCast(OpenGL.getfp("glDeleteTransformFeedbacks", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glDeleteTransformFeedbacks))
    OpenGL.glDeleteTransformFeedbacks(n, ids)
}
fileprivate 
func _load_glDeleteTransformFeedbacksNV(n:OpenGL.Size, ids:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteTransformFeedbacksNV = unsafeBitCast(OpenGL.getfp("glDeleteTransformFeedbacksNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glDeleteTransformFeedbacksNV))
    OpenGL.glDeleteTransformFeedbacksNV(n, ids)
}
fileprivate 
func _load_glDeleteVertexArrays(n:OpenGL.Size, arrays:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteVertexArrays = unsafeBitCast(OpenGL.getfp("glDeleteVertexArrays", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss105]), to: Swift.type(of: OpenGL.glDeleteVertexArrays))
    OpenGL.glDeleteVertexArrays(n, arrays)
}
fileprivate 
func _load_glDeleteVertexArraysAPPLE(n:OpenGL.Size, arrays:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteVertexArraysAPPLE = unsafeBitCast(OpenGL.getfp("glDeleteVertexArraysAPPLE", support: [OpenGL.ss25]), to: Swift.type(of: OpenGL.glDeleteVertexArraysAPPLE))
    OpenGL.glDeleteVertexArraysAPPLE(n, arrays)
}
fileprivate 
func _load_glDeleteVertexArraysOES(n:OpenGL.Size, arrays:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glDeleteVertexArraysOES = unsafeBitCast(OpenGL.getfp("glDeleteVertexArraysOES", support: [OpenGL.ss310]), to: Swift.type(of: OpenGL.glDeleteVertexArraysOES))
    OpenGL.glDeleteVertexArraysOES(n, arrays)
}
fileprivate 
func _load_glDeleteVertexShaderEXT(id:OpenGL.UInt)
{
    OpenGL.glDeleteVertexShaderEXT = unsafeBitCast(OpenGL.getfp("glDeleteVertexShaderEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glDeleteVertexShaderEXT))
    OpenGL.glDeleteVertexShaderEXT(id)
}
fileprivate 
func _load_glDepthBoundsEXT(zmin:OpenGL.ClampDouble, zmax:OpenGL.ClampDouble)
{
    OpenGL.glDepthBoundsEXT = unsafeBitCast(OpenGL.getfp("glDepthBoundsEXT", support: [OpenGL.ss142]), to: Swift.type(of: OpenGL.glDepthBoundsEXT))
    OpenGL.glDepthBoundsEXT(zmin, zmax)
}
fileprivate 
func _load_glDepthBoundsdNV(zmin:OpenGL.Double, zmax:OpenGL.Double)
{
    OpenGL.glDepthBoundsdNV = unsafeBitCast(OpenGL.getfp("glDepthBoundsdNV", support: [OpenGL.ss237]), to: Swift.type(of: OpenGL.glDepthBoundsdNV))
    OpenGL.glDepthBoundsdNV(zmin, zmax)
}
fileprivate 
func _load_glDepthFunc(f:OpenGL.Enum)
{
    OpenGL.glDepthFunc = unsafeBitCast(OpenGL.getfp("glDepthFunc", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDepthFunc))
    OpenGL.glDepthFunc(f)
}
fileprivate 
func _load_glDepthMask(flag:OpenGL.Bool)
{
    OpenGL.glDepthMask = unsafeBitCast(OpenGL.getfp("glDepthMask", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDepthMask))
    OpenGL.glDepthMask(flag)
}
fileprivate 
func _load_glDepthRange(near:OpenGL.Double, far:OpenGL.Double)
{
    OpenGL.glDepthRange = unsafeBitCast(OpenGL.getfp("glDepthRange", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glDepthRange))
    OpenGL.glDepthRange(near, far)
}
fileprivate 
func _load_glDepthRangeArrayfvNV(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glDepthRangeArrayfvNV = unsafeBitCast(OpenGL.getfp("glDepthRangeArrayfvNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glDepthRangeArrayfvNV))
    OpenGL.glDepthRangeArrayfvNV(first, count, v)
}
fileprivate 
func _load_glDepthRangeArrayv(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glDepthRangeArrayv = unsafeBitCast(OpenGL.getfp("glDepthRangeArrayv", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glDepthRangeArrayv))
    OpenGL.glDepthRangeArrayv(first, count, v)
}
fileprivate 
func _load_glDepthRangeIndexed(index:OpenGL.UInt, n:OpenGL.Double, f:OpenGL.Double)
{
    OpenGL.glDepthRangeIndexed = unsafeBitCast(OpenGL.getfp("glDepthRangeIndexed", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glDepthRangeIndexed))
    OpenGL.glDepthRangeIndexed(index, n, f)
}
fileprivate 
func _load_glDepthRangeIndexedfNV(index:OpenGL.UInt, n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glDepthRangeIndexedfNV = unsafeBitCast(OpenGL.getfp("glDepthRangeIndexedfNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glDepthRangeIndexedfNV))
    OpenGL.glDepthRangeIndexedfNV(index, n, f)
}
fileprivate 
func _load_glDepthRangedNV(zNear:OpenGL.Double, zFar:OpenGL.Double)
{
    OpenGL.glDepthRangedNV = unsafeBitCast(OpenGL.getfp("glDepthRangedNV", support: [OpenGL.ss237]), to: Swift.type(of: OpenGL.glDepthRangedNV))
    OpenGL.glDepthRangedNV(zNear, zFar)
}
fileprivate 
func _load_glDepthRangef(n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glDepthRangef = unsafeBitCast(OpenGL.getfp("glDepthRangef", support: [OpenGL.ss359, OpenGL.ss365, OpenGL.ss28]), to: Swift.type(of: OpenGL.glDepthRangef))
    OpenGL.glDepthRangef(n, f)
}
fileprivate 
func _load_glDepthRangefOES(n:OpenGL.ClampFloat, f:OpenGL.ClampFloat)
{
    OpenGL.glDepthRangefOES = unsafeBitCast(OpenGL.getfp("glDepthRangefOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glDepthRangefOES))
    OpenGL.glDepthRangefOES(n, f)
}
fileprivate 
func _load_glDepthRangex(n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glDepthRangex = unsafeBitCast(OpenGL.getfp("glDepthRangex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glDepthRangex))
    OpenGL.glDepthRangex(n, f)
}
fileprivate 
func _load_glDepthRangexOES(n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glDepthRangexOES = unsafeBitCast(OpenGL.getfp("glDepthRangexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glDepthRangexOES))
    OpenGL.glDepthRangexOES(n, f)
}
fileprivate 
func _load_glDetachObjectARB(containerObj:OpenGL.HandleARB, attachedObj:OpenGL.HandleARB)
{
    OpenGL.glDetachObjectARB = unsafeBitCast(OpenGL.getfp("glDetachObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glDetachObjectARB))
    OpenGL.glDetachObjectARB(containerObj, attachedObj)
}
fileprivate 
func _load_glDetachShader(program:OpenGL.UInt, shader:OpenGL.UInt)
{
    OpenGL.glDetachShader = unsafeBitCast(OpenGL.getfp("glDetachShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDetachShader))
    OpenGL.glDetachShader(program, shader)
}
fileprivate 
func _load_glDetailTexFuncSGIS(target:OpenGL.Enum, n:OpenGL.Size, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glDetailTexFuncSGIS = unsafeBitCast(OpenGL.getfp("glDetailTexFuncSGIS", support: [OpenGL.ss319]), to: Swift.type(of: OpenGL.glDetailTexFuncSGIS))
    OpenGL.glDetailTexFuncSGIS(target, n, points)
}
fileprivate 
func _load_glDisable(cap:OpenGL.Enum)
{
    OpenGL.glDisable = unsafeBitCast(OpenGL.getfp("glDisable", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDisable))
    OpenGL.glDisable(cap)
}
fileprivate 
func _load_glDisableClientState(array:OpenGL.Enum)
{
    OpenGL.glDisableClientState = unsafeBitCast(OpenGL.getfp("glDisableClientState", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glDisableClientState))
    OpenGL.glDisableClientState(array)
}
fileprivate 
func _load_glDisableClientStateIndexedEXT(array:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableClientStateIndexedEXT = unsafeBitCast(OpenGL.getfp("glDisableClientStateIndexedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glDisableClientStateIndexedEXT))
    OpenGL.glDisableClientStateIndexedEXT(array, index)
}
fileprivate 
func _load_glDisableClientStateiEXT(array:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableClientStateiEXT = unsafeBitCast(OpenGL.getfp("glDisableClientStateiEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glDisableClientStateiEXT))
    OpenGL.glDisableClientStateiEXT(array, index)
}
fileprivate 
func _load_glDisableDriverControlQCOM(driverControl:OpenGL.UInt)
{
    OpenGL.glDisableDriverControlQCOM = unsafeBitCast(OpenGL.getfp("glDisableDriverControlQCOM", support: [OpenGL.ss315]), to: Swift.type(of: OpenGL.glDisableDriverControlQCOM))
    OpenGL.glDisableDriverControlQCOM(driverControl)
}
fileprivate 
func _load_glDisableIndexedEXT(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableIndexedEXT = unsafeBitCast(OpenGL.getfp("glDisableIndexedEXT", support: [OpenGL.ss143, OpenGL.ss147]), to: Swift.type(of: OpenGL.glDisableIndexedEXT))
    OpenGL.glDisableIndexedEXT(target, index)
}
fileprivate 
func _load_glDisableVariantClientStateEXT(id:OpenGL.UInt)
{
    OpenGL.glDisableVariantClientStateEXT = unsafeBitCast(OpenGL.getfp("glDisableVariantClientStateEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glDisableVariantClientStateEXT))
    OpenGL.glDisableVariantClientStateEXT(id)
}
fileprivate 
func _load_glDisableVertexArrayAttrib(vaobj:OpenGL.UInt, index:OpenGL.UInt)
{
    OpenGL.glDisableVertexArrayAttrib = unsafeBitCast(OpenGL.getfp("glDisableVertexArrayAttrib", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glDisableVertexArrayAttrib))
    OpenGL.glDisableVertexArrayAttrib(vaobj, index)
}
fileprivate 
func _load_glDisableVertexArrayAttribEXT(vaobj:OpenGL.UInt, index:OpenGL.UInt)
{
    OpenGL.glDisableVertexArrayAttribEXT = unsafeBitCast(OpenGL.getfp("glDisableVertexArrayAttribEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glDisableVertexArrayAttribEXT))
    OpenGL.glDisableVertexArrayAttribEXT(vaobj, index)
}
fileprivate 
func _load_glDisableVertexArrayEXT(vaobj:OpenGL.UInt, array:OpenGL.Enum)
{
    OpenGL.glDisableVertexArrayEXT = unsafeBitCast(OpenGL.getfp("glDisableVertexArrayEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glDisableVertexArrayEXT))
    OpenGL.glDisableVertexArrayEXT(vaobj, array)
}
fileprivate 
func _load_glDisableVertexAttribAPPLE(index:OpenGL.UInt, pname:OpenGL.Enum)
{
    OpenGL.glDisableVertexAttribAPPLE = unsafeBitCast(OpenGL.getfp("glDisableVertexAttribAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glDisableVertexAttribAPPLE))
    OpenGL.glDisableVertexAttribAPPLE(index, pname)
}
fileprivate 
func _load_glDisableVertexAttribArray(index:OpenGL.UInt)
{
    OpenGL.glDisableVertexAttribArray = unsafeBitCast(OpenGL.getfp("glDisableVertexAttribArray", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDisableVertexAttribArray))
    OpenGL.glDisableVertexAttribArray(index)
}
fileprivate 
func _load_glDisableVertexAttribArrayARB(index:OpenGL.UInt)
{
    OpenGL.glDisableVertexAttribArrayARB = unsafeBitCast(OpenGL.getfp("glDisableVertexAttribArrayARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glDisableVertexAttribArrayARB))
    OpenGL.glDisableVertexAttribArrayARB(index)
}
fileprivate 
func _load_glDisablei(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisablei = unsafeBitCast(OpenGL.getfp("glDisablei", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glDisablei))
    OpenGL.glDisablei(target, index)
}
fileprivate 
func _load_glDisableiEXT(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableiEXT = unsafeBitCast(OpenGL.getfp("glDisableiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glDisableiEXT))
    OpenGL.glDisableiEXT(target, index)
}
fileprivate 
func _load_glDisableiNV(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableiNV = unsafeBitCast(OpenGL.getfp("glDisableiNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glDisableiNV))
    OpenGL.glDisableiNV(target, index)
}
fileprivate 
func _load_glDisableiOES(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glDisableiOES = unsafeBitCast(OpenGL.getfp("glDisableiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glDisableiOES))
    OpenGL.glDisableiOES(target, index)
}
fileprivate 
func _load_glDiscardFramebufferEXT(target:OpenGL.Enum, numAttachments:OpenGL.Size, attachments:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDiscardFramebufferEXT = unsafeBitCast(OpenGL.getfp("glDiscardFramebufferEXT", support: [OpenGL.ss144]), to: Swift.type(of: OpenGL.glDiscardFramebufferEXT))
    OpenGL.glDiscardFramebufferEXT(target, numAttachments, attachments)
}
fileprivate 
func _load_glDispatchCompute(num_groups_x:OpenGL.UInt, num_groups_y:OpenGL.UInt, num_groups_z:OpenGL.UInt)
{
    OpenGL.glDispatchCompute = unsafeBitCast(OpenGL.getfp("glDispatchCompute", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss40]), to: Swift.type(of: OpenGL.glDispatchCompute))
    OpenGL.glDispatchCompute(num_groups_x, num_groups_y, num_groups_z)
}
fileprivate 
func _load_glDispatchComputeGroupSizeARB(num_groups_x:OpenGL.UInt, num_groups_y:OpenGL.UInt, num_groups_z:OpenGL.UInt, group_size_x:OpenGL.UInt, group_size_y:OpenGL.UInt, group_size_z:OpenGL.UInt)
{
    OpenGL.glDispatchComputeGroupSizeARB = unsafeBitCast(OpenGL.getfp("glDispatchComputeGroupSizeARB", support: [OpenGL.ss41]), to: Swift.type(of: OpenGL.glDispatchComputeGroupSizeARB))
    OpenGL.glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
}
fileprivate 
func _load_glDispatchComputeIndirect(indirect:OpenGL.IntPointer)
{
    OpenGL.glDispatchComputeIndirect = unsafeBitCast(OpenGL.getfp("glDispatchComputeIndirect", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss40]), to: Swift.type(of: OpenGL.glDispatchComputeIndirect))
    OpenGL.glDispatchComputeIndirect(indirect)
}
fileprivate 
func _load_glDrawArrays(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size)
{
    OpenGL.glDrawArrays = unsafeBitCast(OpenGL.getfp("glDrawArrays", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDrawArrays))
    OpenGL.glDrawArrays(mode, first, count)
}
fileprivate 
func _load_glDrawArraysEXT(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size)
{
    OpenGL.glDrawArraysEXT = unsafeBitCast(OpenGL.getfp("glDrawArraysEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glDrawArraysEXT))
    OpenGL.glDrawArraysEXT(mode, first, count)
}
fileprivate 
func _load_glDrawArraysIndirect(mode:OpenGL.Enum, indirect:UnsafeRawPointer?)
{
    OpenGL.glDrawArraysIndirect = unsafeBitCast(OpenGL.getfp("glDrawArraysIndirect", support: [OpenGL.ss358, OpenGL.ss367, OpenGL.ss49]), to: Swift.type(of: OpenGL.glDrawArraysIndirect))
    OpenGL.glDrawArraysIndirect(mode, indirect)
}
fileprivate 
func _load_glDrawArraysInstanced(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, instancecount:OpenGL.Size)
{
    OpenGL.glDrawArraysInstanced = unsafeBitCast(OpenGL.getfp("glDrawArraysInstanced", support: [OpenGL.ss355, OpenGL.ss366]), to: Swift.type(of: OpenGL.glDrawArraysInstanced))
    OpenGL.glDrawArraysInstanced(mode, first, count, instancecount)
}
fileprivate 
func _load_glDrawArraysInstancedANGLE(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, primcount:OpenGL.Size)
{
    OpenGL.glDrawArraysInstancedANGLE = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedANGLE", support: [OpenGL.ss15]), to: Swift.type(of: OpenGL.glDrawArraysInstancedANGLE))
    OpenGL.glDrawArraysInstancedANGLE(mode, first, count, primcount)
}
fileprivate 
func _load_glDrawArraysInstancedARB(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, primcount:OpenGL.Size)
{
    OpenGL.glDrawArraysInstancedARB = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedARB", support: [OpenGL.ss50]), to: Swift.type(of: OpenGL.glDrawArraysInstancedARB))
    OpenGL.glDrawArraysInstancedARB(mode, first, count, primcount)
}
fileprivate 
func _load_glDrawArraysInstancedBaseInstance(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, instancecount:OpenGL.Size, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawArraysInstancedBaseInstance = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedBaseInstance", support: [OpenGL.ss360, OpenGL.ss31]), to: Swift.type(of: OpenGL.glDrawArraysInstancedBaseInstance))
    OpenGL.glDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance)
}
fileprivate 
func _load_glDrawArraysInstancedBaseInstanceEXT(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, instancecount:OpenGL.Size, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawArraysInstancedBaseInstanceEXT = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedBaseInstanceEXT", support: [OpenGL.ss125]), to: Swift.type(of: OpenGL.glDrawArraysInstancedBaseInstanceEXT))
    OpenGL.glDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance)
}
fileprivate 
func _load_glDrawArraysInstancedEXT(mode:OpenGL.Enum, start:OpenGL.Int, count:OpenGL.Size, primcount:OpenGL.Size)
{
    OpenGL.glDrawArraysInstancedEXT = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedEXT", support: [OpenGL.ss150, OpenGL.ss163]), to: Swift.type(of: OpenGL.glDrawArraysInstancedEXT))
    OpenGL.glDrawArraysInstancedEXT(mode, start, count, primcount)
}
fileprivate 
func _load_glDrawArraysInstancedNV(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, primcount:OpenGL.Size)
{
    OpenGL.glDrawArraysInstancedNV = unsafeBitCast(OpenGL.getfp("glDrawArraysInstancedNV", support: [OpenGL.ss239]), to: Swift.type(of: OpenGL.glDrawArraysInstancedNV))
    OpenGL.glDrawArraysInstancedNV(mode, first, count, primcount)
}
fileprivate 
func _load_glDrawBuffer(buf:OpenGL.Enum)
{
    OpenGL.glDrawBuffer = unsafeBitCast(OpenGL.getfp("glDrawBuffer", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glDrawBuffer))
    OpenGL.glDrawBuffer(buf)
}
fileprivate 
func _load_glDrawBuffers(n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDrawBuffers = unsafeBitCast(OpenGL.getfp("glDrawBuffers", support: [OpenGL.ss352, OpenGL.ss366]), to: Swift.type(of: OpenGL.glDrawBuffers))
    OpenGL.glDrawBuffers(n, bufs)
}
fileprivate 
func _load_glDrawBuffersARB(n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDrawBuffersARB = unsafeBitCast(OpenGL.getfp("glDrawBuffersARB", support: [OpenGL.ss46]), to: Swift.type(of: OpenGL.glDrawBuffersARB))
    OpenGL.glDrawBuffersARB(n, bufs)
}
fileprivate 
func _load_glDrawBuffersATI(n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDrawBuffersATI = unsafeBitCast(OpenGL.getfp("glDrawBuffersATI", support: [OpenGL.ss115]), to: Swift.type(of: OpenGL.glDrawBuffersATI))
    OpenGL.glDrawBuffersATI(n, bufs)
}
fileprivate 
func _load_glDrawBuffersEXT(n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDrawBuffersEXT = unsafeBitCast(OpenGL.getfp("glDrawBuffersEXT", support: [OpenGL.ss146]), to: Swift.type(of: OpenGL.glDrawBuffersEXT))
    OpenGL.glDrawBuffersEXT(n, bufs)
}
fileprivate 
func _load_glDrawBuffersIndexedEXT(n:OpenGL.Int, location:UnsafePointer<OpenGL.Enum>?, indices:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glDrawBuffersIndexedEXT = unsafeBitCast(OpenGL.getfp("glDrawBuffersIndexedEXT", support: [OpenGL.ss170]), to: Swift.type(of: OpenGL.glDrawBuffersIndexedEXT))
    OpenGL.glDrawBuffersIndexedEXT(n, location, indices)
}
fileprivate 
func _load_glDrawBuffersNV(n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glDrawBuffersNV = unsafeBitCast(OpenGL.getfp("glDrawBuffersNV", support: [OpenGL.ss238]), to: Swift.type(of: OpenGL.glDrawBuffersNV))
    OpenGL.glDrawBuffersNV(n, bufs)
}
fileprivate 
func _load_glDrawCommandsAddressNV(primitiveMode:OpenGL.Enum, indirects:UnsafePointer<OpenGL.UInt64>?, sizes:UnsafePointer<OpenGL.Size>?, count:OpenGL.UInt)
{
    OpenGL.glDrawCommandsAddressNV = unsafeBitCast(OpenGL.getfp("glDrawCommandsAddressNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDrawCommandsAddressNV))
    OpenGL.glDrawCommandsAddressNV(primitiveMode, indirects, sizes, count)
}
fileprivate 
func _load_glDrawCommandsNV(primitiveMode:OpenGL.Enum, buffer:OpenGL.UInt, indirects:UnsafePointer<OpenGL.IntPointer>?, sizes:UnsafePointer<OpenGL.Size>?, count:OpenGL.UInt)
{
    OpenGL.glDrawCommandsNV = unsafeBitCast(OpenGL.getfp("glDrawCommandsNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDrawCommandsNV))
    OpenGL.glDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count)
}
fileprivate 
func _load_glDrawCommandsStatesAddressNV(indirects:UnsafePointer<OpenGL.UInt64>?, sizes:UnsafePointer<OpenGL.Size>?, states:UnsafePointer<OpenGL.UInt>?, fbos:UnsafePointer<OpenGL.UInt>?, count:OpenGL.UInt)
{
    OpenGL.glDrawCommandsStatesAddressNV = unsafeBitCast(OpenGL.getfp("glDrawCommandsStatesAddressNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDrawCommandsStatesAddressNV))
    OpenGL.glDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count)
}
fileprivate 
func _load_glDrawCommandsStatesNV(buffer:OpenGL.UInt, indirects:UnsafePointer<OpenGL.IntPointer>?, sizes:UnsafePointer<OpenGL.Size>?, states:UnsafePointer<OpenGL.UInt>?, fbos:UnsafePointer<OpenGL.UInt>?, count:OpenGL.UInt)
{
    OpenGL.glDrawCommandsStatesNV = unsafeBitCast(OpenGL.getfp("glDrawCommandsStatesNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glDrawCommandsStatesNV))
    OpenGL.glDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count)
}
fileprivate 
func _load_glDrawElementArrayAPPLE(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size)
{
    OpenGL.glDrawElementArrayAPPLE = unsafeBitCast(OpenGL.getfp("glDrawElementArrayAPPLE", support: [OpenGL.ss18]), to: Swift.type(of: OpenGL.glDrawElementArrayAPPLE))
    OpenGL.glDrawElementArrayAPPLE(mode, first, count)
}
fileprivate 
func _load_glDrawElementArrayATI(mode:OpenGL.Enum, count:OpenGL.Size)
{
    OpenGL.glDrawElementArrayATI = unsafeBitCast(OpenGL.getfp("glDrawElementArrayATI", support: [OpenGL.ss116]), to: Swift.type(of: OpenGL.glDrawElementArrayATI))
    OpenGL.glDrawElementArrayATI(mode, count)
}
fileprivate 
func _load_glDrawElements(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?)
{
    OpenGL.glDrawElements = unsafeBitCast(OpenGL.getfp("glDrawElements", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glDrawElements))
    OpenGL.glDrawElements(mode, count, type, indices)
}
fileprivate 
func _load_glDrawElementsBaseVertex(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsBaseVertex = unsafeBitCast(OpenGL.getfp("glDrawElementsBaseVertex", support: [OpenGL.ss356, OpenGL.ss368, OpenGL.ss48]), to: Swift.type(of: OpenGL.glDrawElementsBaseVertex))
    OpenGL.glDrawElementsBaseVertex(mode, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawElementsBaseVertexEXT(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsBaseVertexEXT = unsafeBitCast(OpenGL.getfp("glDrawElementsBaseVertexEXT", support: [OpenGL.ss149]), to: Swift.type(of: OpenGL.glDrawElementsBaseVertexEXT))
    OpenGL.glDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawElementsBaseVertexOES(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsBaseVertexOES = unsafeBitCast(OpenGL.getfp("glDrawElementsBaseVertexOES", support: [OpenGL.ss290]), to: Swift.type(of: OpenGL.glDrawElementsBaseVertexOES))
    OpenGL.glDrawElementsBaseVertexOES(mode, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawElementsIndirect(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?)
{
    OpenGL.glDrawElementsIndirect = unsafeBitCast(OpenGL.getfp("glDrawElementsIndirect", support: [OpenGL.ss358, OpenGL.ss367, OpenGL.ss49]), to: Swift.type(of: OpenGL.glDrawElementsIndirect))
    OpenGL.glDrawElementsIndirect(mode, type, indirect)
}
fileprivate 
func _load_glDrawElementsInstanced(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size)
{
    OpenGL.glDrawElementsInstanced = unsafeBitCast(OpenGL.getfp("glDrawElementsInstanced", support: [OpenGL.ss355, OpenGL.ss366]), to: Swift.type(of: OpenGL.glDrawElementsInstanced))
    OpenGL.glDrawElementsInstanced(mode, count, type, indices, instancecount)
}
fileprivate 
func _load_glDrawElementsInstancedANGLE(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, primcount:OpenGL.Size)
{
    OpenGL.glDrawElementsInstancedANGLE = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedANGLE", support: [OpenGL.ss15]), to: Swift.type(of: OpenGL.glDrawElementsInstancedANGLE))
    OpenGL.glDrawElementsInstancedANGLE(mode, count, type, indices, primcount)
}
fileprivate 
func _load_glDrawElementsInstancedARB(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, primcount:OpenGL.Size)
{
    OpenGL.glDrawElementsInstancedARB = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedARB", support: [OpenGL.ss50]), to: Swift.type(of: OpenGL.glDrawElementsInstancedARB))
    OpenGL.glDrawElementsInstancedARB(mode, count, type, indices, primcount)
}
fileprivate 
func _load_glDrawElementsInstancedBaseInstance(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawElementsInstancedBaseInstance = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseInstance", support: [OpenGL.ss360, OpenGL.ss31]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseInstance))
    OpenGL.glDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance)
}
fileprivate 
func _load_glDrawElementsInstancedBaseInstanceEXT(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawElementsInstancedBaseInstanceEXT = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseInstanceEXT", support: [OpenGL.ss125]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseInstanceEXT))
    OpenGL.glDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance)
}
fileprivate 
func _load_glDrawElementsInstancedBaseVertex(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsInstancedBaseVertex = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseVertex", support: [OpenGL.ss356, OpenGL.ss368, OpenGL.ss48]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseVertex))
    OpenGL.glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex)
}
fileprivate 
func _load_glDrawElementsInstancedBaseVertexBaseInstance(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, basevertex:OpenGL.Int, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawElementsInstancedBaseVertexBaseInstance = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseVertexBaseInstance", support: [OpenGL.ss360, OpenGL.ss31]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseVertexBaseInstance))
    OpenGL.glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
fileprivate 
func _load_glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, basevertex:OpenGL.Int, baseinstance:OpenGL.UInt)
{
    OpenGL.glDrawElementsInstancedBaseVertexBaseInstanceEXT = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseVertexBaseInstanceEXT", support: [OpenGL.ss125]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseVertexBaseInstanceEXT))
    OpenGL.glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
fileprivate 
func _load_glDrawElementsInstancedBaseVertexEXT(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsInstancedBaseVertexEXT = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseVertexEXT", support: [OpenGL.ss149]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseVertexEXT))
    OpenGL.glDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex)
}
fileprivate 
func _load_glDrawElementsInstancedBaseVertexOES(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, instancecount:OpenGL.Size, basevertex:OpenGL.Int)
{
    OpenGL.glDrawElementsInstancedBaseVertexOES = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedBaseVertexOES", support: [OpenGL.ss290]), to: Swift.type(of: OpenGL.glDrawElementsInstancedBaseVertexOES))
    OpenGL.glDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex)
}
fileprivate 
func _load_glDrawElementsInstancedEXT(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, primcount:OpenGL.Size)
{
    OpenGL.glDrawElementsInstancedEXT = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedEXT", support: [OpenGL.ss150, OpenGL.ss163]), to: Swift.type(of: OpenGL.glDrawElementsInstancedEXT))
    OpenGL.glDrawElementsInstancedEXT(mode, count, type, indices, primcount)
}
fileprivate 
func _load_glDrawElementsInstancedNV(mode:OpenGL.Enum, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, primcount:OpenGL.Size)
{
    OpenGL.glDrawElementsInstancedNV = unsafeBitCast(OpenGL.getfp("glDrawElementsInstancedNV", support: [OpenGL.ss239]), to: Swift.type(of: OpenGL.glDrawElementsInstancedNV))
    OpenGL.glDrawElementsInstancedNV(mode, count, type, indices, primcount)
}
fileprivate 
func _load_glDrawMeshArraysSUN(mode:OpenGL.Enum, first:OpenGL.Int, count:OpenGL.Size, width:OpenGL.Size)
{
    OpenGL.glDrawMeshArraysSUN = unsafeBitCast(OpenGL.getfp("glDrawMeshArraysSUN", support: [OpenGL.ss343]), to: Swift.type(of: OpenGL.glDrawMeshArraysSUN))
    OpenGL.glDrawMeshArraysSUN(mode, first, count, width)
}
fileprivate 
func _load_glDrawPixels(width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glDrawPixels = unsafeBitCast(OpenGL.getfp("glDrawPixels", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glDrawPixels))
    OpenGL.glDrawPixels(width, height, format, type, pixels)
}
fileprivate 
func _load_glDrawRangeElementArrayAPPLE(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, first:OpenGL.Int, count:OpenGL.Size)
{
    OpenGL.glDrawRangeElementArrayAPPLE = unsafeBitCast(OpenGL.getfp("glDrawRangeElementArrayAPPLE", support: [OpenGL.ss18]), to: Swift.type(of: OpenGL.glDrawRangeElementArrayAPPLE))
    OpenGL.glDrawRangeElementArrayAPPLE(mode, start, end, first, count)
}
fileprivate 
func _load_glDrawRangeElementArrayATI(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size)
{
    OpenGL.glDrawRangeElementArrayATI = unsafeBitCast(OpenGL.getfp("glDrawRangeElementArrayATI", support: [OpenGL.ss116]), to: Swift.type(of: OpenGL.glDrawRangeElementArrayATI))
    OpenGL.glDrawRangeElementArrayATI(mode, start, end, count)
}
fileprivate 
func _load_glDrawRangeElements(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?)
{
    OpenGL.glDrawRangeElements = unsafeBitCast(OpenGL.getfp("glDrawRangeElements", support: [OpenGL.ss348, OpenGL.ss366]), to: Swift.type(of: OpenGL.glDrawRangeElements))
    OpenGL.glDrawRangeElements(mode, start, end, count, type, indices)
}
fileprivate 
func _load_glDrawRangeElementsBaseVertex(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawRangeElementsBaseVertex = unsafeBitCast(OpenGL.getfp("glDrawRangeElementsBaseVertex", support: [OpenGL.ss356, OpenGL.ss368, OpenGL.ss48]), to: Swift.type(of: OpenGL.glDrawRangeElementsBaseVertex))
    OpenGL.glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawRangeElementsBaseVertexEXT(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawRangeElementsBaseVertexEXT = unsafeBitCast(OpenGL.getfp("glDrawRangeElementsBaseVertexEXT", support: [OpenGL.ss149]), to: Swift.type(of: OpenGL.glDrawRangeElementsBaseVertexEXT))
    OpenGL.glDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawRangeElementsBaseVertexOES(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?, basevertex:OpenGL.Int)
{
    OpenGL.glDrawRangeElementsBaseVertexOES = unsafeBitCast(OpenGL.getfp("glDrawRangeElementsBaseVertexOES", support: [OpenGL.ss290]), to: Swift.type(of: OpenGL.glDrawRangeElementsBaseVertexOES))
    OpenGL.glDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex)
}
fileprivate 
func _load_glDrawRangeElementsEXT(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, count:OpenGL.Size, type:OpenGL.Enum, indices:UnsafeRawPointer?)
{
    OpenGL.glDrawRangeElementsEXT = unsafeBitCast(OpenGL.getfp("glDrawRangeElementsEXT", support: [OpenGL.ss151]), to: Swift.type(of: OpenGL.glDrawRangeElementsEXT))
    OpenGL.glDrawRangeElementsEXT(mode, start, end, count, type, indices)
}
fileprivate 
func _load_glDrawTexfOES(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, width:OpenGL.Float, height:OpenGL.Float)
{
    OpenGL.glDrawTexfOES = unsafeBitCast(OpenGL.getfp("glDrawTexfOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexfOES))
    OpenGL.glDrawTexfOES(x, y, z, width, height)
}
fileprivate 
func _load_glDrawTexfvOES(coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glDrawTexfvOES = unsafeBitCast(OpenGL.getfp("glDrawTexfvOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexfvOES))
    OpenGL.glDrawTexfvOES(coords)
}
fileprivate 
func _load_glDrawTexiOES(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, width:OpenGL.Int, height:OpenGL.Int)
{
    OpenGL.glDrawTexiOES = unsafeBitCast(OpenGL.getfp("glDrawTexiOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexiOES))
    OpenGL.glDrawTexiOES(x, y, z, width, height)
}
fileprivate 
func _load_glDrawTexivOES(coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glDrawTexivOES = unsafeBitCast(OpenGL.getfp("glDrawTexivOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexivOES))
    OpenGL.glDrawTexivOES(coords)
}
fileprivate 
func _load_glDrawTexsOES(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, width:OpenGL.Short, height:OpenGL.Short)
{
    OpenGL.glDrawTexsOES = unsafeBitCast(OpenGL.getfp("glDrawTexsOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexsOES))
    OpenGL.glDrawTexsOES(x, y, z, width, height)
}
fileprivate 
func _load_glDrawTexsvOES(coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glDrawTexsvOES = unsafeBitCast(OpenGL.getfp("glDrawTexsvOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexsvOES))
    OpenGL.glDrawTexsvOES(coords)
}
fileprivate 
func _load_glDrawTextureNV(texture:OpenGL.UInt, sampler:OpenGL.UInt, x0:OpenGL.Float, y0:OpenGL.Float, x1:OpenGL.Float, y1:OpenGL.Float, z:OpenGL.Float, s0:OpenGL.Float, t0:OpenGL.Float, s1:OpenGL.Float, t1:OpenGL.Float)
{
    OpenGL.glDrawTextureNV = unsafeBitCast(OpenGL.getfp("glDrawTextureNV", support: [OpenGL.ss240]), to: Swift.type(of: OpenGL.glDrawTextureNV))
    OpenGL.glDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}
fileprivate 
func _load_glDrawTexxOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed, width:OpenGL.Fixed, height:OpenGL.Fixed)
{
    OpenGL.glDrawTexxOES = unsafeBitCast(OpenGL.getfp("glDrawTexxOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexxOES))
    OpenGL.glDrawTexxOES(x, y, z, width, height)
}
fileprivate 
func _load_glDrawTexxvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glDrawTexxvOES = unsafeBitCast(OpenGL.getfp("glDrawTexxvOES", support: [OpenGL.ss291]), to: Swift.type(of: OpenGL.glDrawTexxvOES))
    OpenGL.glDrawTexxvOES(coords)
}
fileprivate 
func _load_glDrawTransformFeedback(mode:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glDrawTransformFeedback = unsafeBitCast(OpenGL.getfp("glDrawTransformFeedback", support: [OpenGL.ss358, OpenGL.ss100]), to: Swift.type(of: OpenGL.glDrawTransformFeedback))
    OpenGL.glDrawTransformFeedback(mode, id)
}
fileprivate 
func _load_glDrawTransformFeedbackInstanced(mode:OpenGL.Enum, id:OpenGL.UInt, instancecount:OpenGL.Size)
{
    OpenGL.glDrawTransformFeedbackInstanced = unsafeBitCast(OpenGL.getfp("glDrawTransformFeedbackInstanced", support: [OpenGL.ss360, OpenGL.ss102]), to: Swift.type(of: OpenGL.glDrawTransformFeedbackInstanced))
    OpenGL.glDrawTransformFeedbackInstanced(mode, id, instancecount)
}
fileprivate 
func _load_glDrawTransformFeedbackNV(mode:OpenGL.Enum, id:OpenGL.UInt)
{
    OpenGL.glDrawTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glDrawTransformFeedbackNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glDrawTransformFeedbackNV))
    OpenGL.glDrawTransformFeedbackNV(mode, id)
}
fileprivate 
func _load_glDrawTransformFeedbackStream(mode:OpenGL.Enum, id:OpenGL.UInt, stream:OpenGL.UInt)
{
    OpenGL.glDrawTransformFeedbackStream = unsafeBitCast(OpenGL.getfp("glDrawTransformFeedbackStream", support: [OpenGL.ss358, OpenGL.ss101]), to: Swift.type(of: OpenGL.glDrawTransformFeedbackStream))
    OpenGL.glDrawTransformFeedbackStream(mode, id, stream)
}
fileprivate 
func _load_glDrawTransformFeedbackStreamInstanced(mode:OpenGL.Enum, id:OpenGL.UInt, stream:OpenGL.UInt, instancecount:OpenGL.Size)
{
    OpenGL.glDrawTransformFeedbackStreamInstanced = unsafeBitCast(OpenGL.getfp("glDrawTransformFeedbackStreamInstanced", support: [OpenGL.ss360, OpenGL.ss102]), to: Swift.type(of: OpenGL.glDrawTransformFeedbackStreamInstanced))
    OpenGL.glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount)
}
fileprivate 
func _load_glEGLImageTargetRenderbufferStorageOES(target:OpenGL.Enum, image:OpenGL.EGLImageOES)
{
    OpenGL.glEGLImageTargetRenderbufferStorageOES = unsafeBitCast(OpenGL.getfp("glEGLImageTargetRenderbufferStorageOES", support: [OpenGL.ss283]), to: Swift.type(of: OpenGL.glEGLImageTargetRenderbufferStorageOES))
    OpenGL.glEGLImageTargetRenderbufferStorageOES(target, image)
}
fileprivate 
func _load_glEGLImageTargetTexture2DOES(target:OpenGL.Enum, image:OpenGL.EGLImageOES)
{
    OpenGL.glEGLImageTargetTexture2DOES = unsafeBitCast(OpenGL.getfp("glEGLImageTargetTexture2DOES", support: [OpenGL.ss283]), to: Swift.type(of: OpenGL.glEGLImageTargetTexture2DOES))
    OpenGL.glEGLImageTargetTexture2DOES(target, image)
}
fileprivate 
func _load_glEdgeFlag(flag:OpenGL.Bool)
{
    OpenGL.glEdgeFlag = unsafeBitCast(OpenGL.getfp("glEdgeFlag", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEdgeFlag))
    OpenGL.glEdgeFlag(flag)
}
fileprivate 
func _load_glEdgeFlagFormatNV(stride:OpenGL.Size)
{
    OpenGL.glEdgeFlagFormatNV = unsafeBitCast(OpenGL.getfp("glEdgeFlagFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glEdgeFlagFormatNV))
    OpenGL.glEdgeFlagFormatNV(stride)
}
fileprivate 
func _load_glEdgeFlagPointer(stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glEdgeFlagPointer = unsafeBitCast(OpenGL.getfp("glEdgeFlagPointer", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEdgeFlagPointer))
    OpenGL.glEdgeFlagPointer(stride, pointer)
}
fileprivate 
func _load_glEdgeFlagPointerEXT(stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafePointer<OpenGL.Bool>?)
{
    OpenGL.glEdgeFlagPointerEXT = unsafeBitCast(OpenGL.getfp("glEdgeFlagPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glEdgeFlagPointerEXT))
    OpenGL.glEdgeFlagPointerEXT(stride, count, pointer)
}
fileprivate 
func _load_glEdgeFlagPointerListIBM(stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.Bool>?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glEdgeFlagPointerListIBM = unsafeBitCast(OpenGL.getfp("glEdgeFlagPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glEdgeFlagPointerListIBM))
    OpenGL.glEdgeFlagPointerListIBM(stride, pointer, ptrstride)
}
fileprivate 
func _load_glEdgeFlagv(flag:UnsafePointer<OpenGL.Bool>?)
{
    OpenGL.glEdgeFlagv = unsafeBitCast(OpenGL.getfp("glEdgeFlagv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEdgeFlagv))
    OpenGL.glEdgeFlagv(flag)
}
fileprivate 
func _load_glElementPointerAPPLE(type:OpenGL.Enum, pointer:UnsafeRawPointer?)
{
    OpenGL.glElementPointerAPPLE = unsafeBitCast(OpenGL.getfp("glElementPointerAPPLE", support: [OpenGL.ss18]), to: Swift.type(of: OpenGL.glElementPointerAPPLE))
    OpenGL.glElementPointerAPPLE(type, pointer)
}
fileprivate 
func _load_glElementPointerATI(type:OpenGL.Enum, pointer:UnsafeRawPointer?)
{
    OpenGL.glElementPointerATI = unsafeBitCast(OpenGL.getfp("glElementPointerATI", support: [OpenGL.ss116]), to: Swift.type(of: OpenGL.glElementPointerATI))
    OpenGL.glElementPointerATI(type, pointer)
}
fileprivate 
func _load_glEnable(cap:OpenGL.Enum)
{
    OpenGL.glEnable = unsafeBitCast(OpenGL.getfp("glEnable", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glEnable))
    OpenGL.glEnable(cap)
}
fileprivate 
func _load_glEnableClientState(array:OpenGL.Enum)
{
    OpenGL.glEnableClientState = unsafeBitCast(OpenGL.getfp("glEnableClientState", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glEnableClientState))
    OpenGL.glEnableClientState(array)
}
fileprivate 
func _load_glEnableClientStateIndexedEXT(array:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableClientStateIndexedEXT = unsafeBitCast(OpenGL.getfp("glEnableClientStateIndexedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glEnableClientStateIndexedEXT))
    OpenGL.glEnableClientStateIndexedEXT(array, index)
}
fileprivate 
func _load_glEnableClientStateiEXT(array:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableClientStateiEXT = unsafeBitCast(OpenGL.getfp("glEnableClientStateiEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glEnableClientStateiEXT))
    OpenGL.glEnableClientStateiEXT(array, index)
}
fileprivate 
func _load_glEnableDriverControlQCOM(driverControl:OpenGL.UInt)
{
    OpenGL.glEnableDriverControlQCOM = unsafeBitCast(OpenGL.getfp("glEnableDriverControlQCOM", support: [OpenGL.ss315]), to: Swift.type(of: OpenGL.glEnableDriverControlQCOM))
    OpenGL.glEnableDriverControlQCOM(driverControl)
}
fileprivate 
func _load_glEnableIndexedEXT(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableIndexedEXT = unsafeBitCast(OpenGL.getfp("glEnableIndexedEXT", support: [OpenGL.ss143, OpenGL.ss147]), to: Swift.type(of: OpenGL.glEnableIndexedEXT))
    OpenGL.glEnableIndexedEXT(target, index)
}
fileprivate 
func _load_glEnableVariantClientStateEXT(id:OpenGL.UInt)
{
    OpenGL.glEnableVariantClientStateEXT = unsafeBitCast(OpenGL.getfp("glEnableVariantClientStateEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glEnableVariantClientStateEXT))
    OpenGL.glEnableVariantClientStateEXT(id)
}
fileprivate 
func _load_glEnableVertexArrayAttrib(vaobj:OpenGL.UInt, index:OpenGL.UInt)
{
    OpenGL.glEnableVertexArrayAttrib = unsafeBitCast(OpenGL.getfp("glEnableVertexArrayAttrib", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glEnableVertexArrayAttrib))
    OpenGL.glEnableVertexArrayAttrib(vaobj, index)
}
fileprivate 
func _load_glEnableVertexArrayAttribEXT(vaobj:OpenGL.UInt, index:OpenGL.UInt)
{
    OpenGL.glEnableVertexArrayAttribEXT = unsafeBitCast(OpenGL.getfp("glEnableVertexArrayAttribEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glEnableVertexArrayAttribEXT))
    OpenGL.glEnableVertexArrayAttribEXT(vaobj, index)
}
fileprivate 
func _load_glEnableVertexArrayEXT(vaobj:OpenGL.UInt, array:OpenGL.Enum)
{
    OpenGL.glEnableVertexArrayEXT = unsafeBitCast(OpenGL.getfp("glEnableVertexArrayEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glEnableVertexArrayEXT))
    OpenGL.glEnableVertexArrayEXT(vaobj, array)
}
fileprivate 
func _load_glEnableVertexAttribAPPLE(index:OpenGL.UInt, pname:OpenGL.Enum)
{
    OpenGL.glEnableVertexAttribAPPLE = unsafeBitCast(OpenGL.getfp("glEnableVertexAttribAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glEnableVertexAttribAPPLE))
    OpenGL.glEnableVertexAttribAPPLE(index, pname)
}
fileprivate 
func _load_glEnableVertexAttribArray(index:OpenGL.UInt)
{
    OpenGL.glEnableVertexAttribArray = unsafeBitCast(OpenGL.getfp("glEnableVertexAttribArray", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glEnableVertexAttribArray))
    OpenGL.glEnableVertexAttribArray(index)
}
fileprivate 
func _load_glEnableVertexAttribArrayARB(index:OpenGL.UInt)
{
    OpenGL.glEnableVertexAttribArrayARB = unsafeBitCast(OpenGL.getfp("glEnableVertexAttribArrayARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glEnableVertexAttribArrayARB))
    OpenGL.glEnableVertexAttribArrayARB(index)
}
fileprivate 
func _load_glEnablei(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnablei = unsafeBitCast(OpenGL.getfp("glEnablei", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glEnablei))
    OpenGL.glEnablei(target, index)
}
fileprivate 
func _load_glEnableiEXT(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableiEXT = unsafeBitCast(OpenGL.getfp("glEnableiEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glEnableiEXT))
    OpenGL.glEnableiEXT(target, index)
}
fileprivate 
func _load_glEnableiNV(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableiNV = unsafeBitCast(OpenGL.getfp("glEnableiNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glEnableiNV))
    OpenGL.glEnableiNV(target, index)
}
fileprivate 
func _load_glEnableiOES(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEnableiOES = unsafeBitCast(OpenGL.getfp("glEnableiOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glEnableiOES))
    OpenGL.glEnableiOES(target, index)
}
fileprivate 
func _load_glEnd()
{
    OpenGL.glEnd = unsafeBitCast(OpenGL.getfp("glEnd", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEnd))
    OpenGL.glEnd()
}
fileprivate 
func _load_glEndConditionalRender()
{
    OpenGL.glEndConditionalRender = unsafeBitCast(OpenGL.getfp("glEndConditionalRender", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glEndConditionalRender))
    OpenGL.glEndConditionalRender()
}
fileprivate 
func _load_glEndConditionalRenderNV()
{
    OpenGL.glEndConditionalRenderNV = unsafeBitCast(OpenGL.getfp("glEndConditionalRenderNV", support: [OpenGL.ss231]), to: Swift.type(of: OpenGL.glEndConditionalRenderNV))
    OpenGL.glEndConditionalRenderNV()
}
fileprivate 
func _load_glEndConditionalRenderNVX()
{
    OpenGL.glEndConditionalRenderNVX = unsafeBitCast(OpenGL.getfp("glEndConditionalRenderNVX", support: [OpenGL.ss225]), to: Swift.type(of: OpenGL.glEndConditionalRenderNVX))
    OpenGL.glEndConditionalRenderNVX()
}
fileprivate 
func _load_glEndFragmentShaderATI()
{
    OpenGL.glEndFragmentShaderATI = unsafeBitCast(OpenGL.getfp("glEndFragmentShaderATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glEndFragmentShaderATI))
    OpenGL.glEndFragmentShaderATI()
}
fileprivate 
func _load_glEndList()
{
    OpenGL.glEndList = unsafeBitCast(OpenGL.getfp("glEndList", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEndList))
    OpenGL.glEndList()
}
fileprivate 
func _load_glEndOcclusionQueryNV()
{
    OpenGL.glEndOcclusionQueryNV = unsafeBitCast(OpenGL.getfp("glEndOcclusionQueryNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glEndOcclusionQueryNV))
    OpenGL.glEndOcclusionQueryNV()
}
fileprivate 
func _load_glEndPerfMonitorAMD(monitor:OpenGL.UInt)
{
    OpenGL.glEndPerfMonitorAMD = unsafeBitCast(OpenGL.getfp("glEndPerfMonitorAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glEndPerfMonitorAMD))
    OpenGL.glEndPerfMonitorAMD(monitor)
}
fileprivate 
func _load_glEndPerfQueryINTEL(queryHandle:OpenGL.UInt)
{
    OpenGL.glEndPerfQueryINTEL = unsafeBitCast(OpenGL.getfp("glEndPerfQueryINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glEndPerfQueryINTEL))
    OpenGL.glEndPerfQueryINTEL(queryHandle)
}
fileprivate 
func _load_glEndQuery(target:OpenGL.Enum)
{
    OpenGL.glEndQuery = unsafeBitCast(OpenGL.getfp("glEndQuery", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glEndQuery))
    OpenGL.glEndQuery(target)
}
fileprivate 
func _load_glEndQueryARB(target:OpenGL.Enum)
{
    OpenGL.glEndQueryARB = unsafeBitCast(OpenGL.getfp("glEndQueryARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glEndQueryARB))
    OpenGL.glEndQueryARB(target)
}
fileprivate 
func _load_glEndQueryEXT(target:OpenGL.Enum)
{
    OpenGL.glEndQueryEXT = unsafeBitCast(OpenGL.getfp("glEndQueryEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glEndQueryEXT))
    OpenGL.glEndQueryEXT(target)
}
fileprivate 
func _load_glEndQueryIndexed(target:OpenGL.Enum, index:OpenGL.UInt)
{
    OpenGL.glEndQueryIndexed = unsafeBitCast(OpenGL.getfp("glEndQueryIndexed", support: [OpenGL.ss358, OpenGL.ss101]), to: Swift.type(of: OpenGL.glEndQueryIndexed))
    OpenGL.glEndQueryIndexed(target, index)
}
fileprivate 
func _load_glEndTilingQCOM(preserveMask:OpenGL.Bitfield)
{
    OpenGL.glEndTilingQCOM = unsafeBitCast(OpenGL.getfp("glEndTilingQCOM", support: [OpenGL.ss318]), to: Swift.type(of: OpenGL.glEndTilingQCOM))
    OpenGL.glEndTilingQCOM(preserveMask)
}
fileprivate 
func _load_glEndTransformFeedback()
{
    OpenGL.glEndTransformFeedback = unsafeBitCast(OpenGL.getfp("glEndTransformFeedback", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glEndTransformFeedback))
    OpenGL.glEndTransformFeedback()
}
fileprivate 
func _load_glEndTransformFeedbackEXT()
{
    OpenGL.glEndTransformFeedbackEXT = unsafeBitCast(OpenGL.getfp("glEndTransformFeedbackEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glEndTransformFeedbackEXT))
    OpenGL.glEndTransformFeedbackEXT()
}
fileprivate 
func _load_glEndTransformFeedbackNV()
{
    OpenGL.glEndTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glEndTransformFeedbackNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glEndTransformFeedbackNV))
    OpenGL.glEndTransformFeedbackNV()
}
fileprivate 
func _load_glEndVertexShaderEXT()
{
    OpenGL.glEndVertexShaderEXT = unsafeBitCast(OpenGL.getfp("glEndVertexShaderEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glEndVertexShaderEXT))
    OpenGL.glEndVertexShaderEXT()
}
fileprivate 
func _load_glEndVideoCaptureNV(video_capture_slot:OpenGL.UInt)
{
    OpenGL.glEndVideoCaptureNV = unsafeBitCast(OpenGL.getfp("glEndVideoCaptureNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glEndVideoCaptureNV))
    OpenGL.glEndVideoCaptureNV(video_capture_slot)
}
fileprivate 
func _load_glEvalCoord1d(u:OpenGL.Double)
{
    OpenGL.glEvalCoord1d = unsafeBitCast(OpenGL.getfp("glEvalCoord1d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord1d))
    OpenGL.glEvalCoord1d(u)
}
fileprivate 
func _load_glEvalCoord1dv(u:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glEvalCoord1dv = unsafeBitCast(OpenGL.getfp("glEvalCoord1dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord1dv))
    OpenGL.glEvalCoord1dv(u)
}
fileprivate 
func _load_glEvalCoord1f(u:OpenGL.Float)
{
    OpenGL.glEvalCoord1f = unsafeBitCast(OpenGL.getfp("glEvalCoord1f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord1f))
    OpenGL.glEvalCoord1f(u)
}
fileprivate 
func _load_glEvalCoord1fv(u:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glEvalCoord1fv = unsafeBitCast(OpenGL.getfp("glEvalCoord1fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord1fv))
    OpenGL.glEvalCoord1fv(u)
}
fileprivate 
func _load_glEvalCoord1xOES(u:OpenGL.Fixed)
{
    OpenGL.glEvalCoord1xOES = unsafeBitCast(OpenGL.getfp("glEvalCoord1xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glEvalCoord1xOES))
    OpenGL.glEvalCoord1xOES(u)
}
fileprivate 
func _load_glEvalCoord1xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glEvalCoord1xvOES = unsafeBitCast(OpenGL.getfp("glEvalCoord1xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glEvalCoord1xvOES))
    OpenGL.glEvalCoord1xvOES(coords)
}
fileprivate 
func _load_glEvalCoord2d(u:OpenGL.Double, v:OpenGL.Double)
{
    OpenGL.glEvalCoord2d = unsafeBitCast(OpenGL.getfp("glEvalCoord2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord2d))
    OpenGL.glEvalCoord2d(u, v)
}
fileprivate 
func _load_glEvalCoord2dv(u:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glEvalCoord2dv = unsafeBitCast(OpenGL.getfp("glEvalCoord2dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord2dv))
    OpenGL.glEvalCoord2dv(u)
}
fileprivate 
func _load_glEvalCoord2f(u:OpenGL.Float, v:OpenGL.Float)
{
    OpenGL.glEvalCoord2f = unsafeBitCast(OpenGL.getfp("glEvalCoord2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord2f))
    OpenGL.glEvalCoord2f(u, v)
}
fileprivate 
func _load_glEvalCoord2fv(u:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glEvalCoord2fv = unsafeBitCast(OpenGL.getfp("glEvalCoord2fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalCoord2fv))
    OpenGL.glEvalCoord2fv(u)
}
fileprivate 
func _load_glEvalCoord2xOES(u:OpenGL.Fixed, v:OpenGL.Fixed)
{
    OpenGL.glEvalCoord2xOES = unsafeBitCast(OpenGL.getfp("glEvalCoord2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glEvalCoord2xOES))
    OpenGL.glEvalCoord2xOES(u, v)
}
fileprivate 
func _load_glEvalCoord2xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glEvalCoord2xvOES = unsafeBitCast(OpenGL.getfp("glEvalCoord2xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glEvalCoord2xvOES))
    OpenGL.glEvalCoord2xvOES(coords)
}
fileprivate 
func _load_glEvalMapsNV(target:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glEvalMapsNV = unsafeBitCast(OpenGL.getfp("glEvalMapsNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glEvalMapsNV))
    OpenGL.glEvalMapsNV(target, mode)
}
fileprivate 
func _load_glEvalMesh1(mode:OpenGL.Enum, i1:OpenGL.Int, i2:OpenGL.Int)
{
    OpenGL.glEvalMesh1 = unsafeBitCast(OpenGL.getfp("glEvalMesh1", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalMesh1))
    OpenGL.glEvalMesh1(mode, i1, i2)
}
fileprivate 
func _load_glEvalMesh2(mode:OpenGL.Enum, i1:OpenGL.Int, i2:OpenGL.Int, j1:OpenGL.Int, j2:OpenGL.Int)
{
    OpenGL.glEvalMesh2 = unsafeBitCast(OpenGL.getfp("glEvalMesh2", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalMesh2))
    OpenGL.glEvalMesh2(mode, i1, i2, j1, j2)
}
fileprivate 
func _load_glEvalPoint1(i:OpenGL.Int)
{
    OpenGL.glEvalPoint1 = unsafeBitCast(OpenGL.getfp("glEvalPoint1", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalPoint1))
    OpenGL.glEvalPoint1(i)
}
fileprivate 
func _load_glEvalPoint2(i:OpenGL.Int, j:OpenGL.Int)
{
    OpenGL.glEvalPoint2 = unsafeBitCast(OpenGL.getfp("glEvalPoint2", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glEvalPoint2))
    OpenGL.glEvalPoint2(i, j)
}
fileprivate 
func _load_glEvaluateDepthValuesARB()
{
    OpenGL.glEvaluateDepthValuesARB = unsafeBitCast(OpenGL.getfp("glEvaluateDepthValuesARB", support: [OpenGL.ss77]), to: Swift.type(of: OpenGL.glEvaluateDepthValuesARB))
    OpenGL.glEvaluateDepthValuesARB()
}
fileprivate 
func _load_glExecuteProgramNV(target:OpenGL.Enum, id:OpenGL.UInt, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glExecuteProgramNV = unsafeBitCast(OpenGL.getfp("glExecuteProgramNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glExecuteProgramNV))
    OpenGL.glExecuteProgramNV(target, id, params)
}
fileprivate 
func _load_glExtGetBufferPointervQCOM(target:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glExtGetBufferPointervQCOM = unsafeBitCast(OpenGL.getfp("glExtGetBufferPointervQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetBufferPointervQCOM))
    OpenGL.glExtGetBufferPointervQCOM(target, params)
}
fileprivate 
func _load_glExtGetBuffersQCOM(buffers:UnsafeMutablePointer<OpenGL.UInt>?, maxBuffers:OpenGL.Int, numBuffers:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetBuffersQCOM = unsafeBitCast(OpenGL.getfp("glExtGetBuffersQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetBuffersQCOM))
    OpenGL.glExtGetBuffersQCOM(buffers, maxBuffers, numBuffers)
}
fileprivate 
func _load_glExtGetFramebuffersQCOM(framebuffers:UnsafeMutablePointer<OpenGL.UInt>?, maxFramebuffers:OpenGL.Int, numFramebuffers:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetFramebuffersQCOM = unsafeBitCast(OpenGL.getfp("glExtGetFramebuffersQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetFramebuffersQCOM))
    OpenGL.glExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers)
}
fileprivate 
func _load_glExtGetProgramBinarySourceQCOM(program:OpenGL.UInt, shadertype:OpenGL.Enum, source:UnsafeMutablePointer<OpenGL.Char>?, length:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetProgramBinarySourceQCOM = unsafeBitCast(OpenGL.getfp("glExtGetProgramBinarySourceQCOM", support: [OpenGL.ss317]), to: Swift.type(of: OpenGL.glExtGetProgramBinarySourceQCOM))
    OpenGL.glExtGetProgramBinarySourceQCOM(program, shadertype, source, length)
}
fileprivate 
func _load_glExtGetProgramsQCOM(programs:UnsafeMutablePointer<OpenGL.UInt>?, maxPrograms:OpenGL.Int, numPrograms:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetProgramsQCOM = unsafeBitCast(OpenGL.getfp("glExtGetProgramsQCOM", support: [OpenGL.ss317]), to: Swift.type(of: OpenGL.glExtGetProgramsQCOM))
    OpenGL.glExtGetProgramsQCOM(programs, maxPrograms, numPrograms)
}
fileprivate 
func _load_glExtGetRenderbuffersQCOM(renderbuffers:UnsafeMutablePointer<OpenGL.UInt>?, maxRenderbuffers:OpenGL.Int, numRenderbuffers:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetRenderbuffersQCOM = unsafeBitCast(OpenGL.getfp("glExtGetRenderbuffersQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetRenderbuffersQCOM))
    OpenGL.glExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers)
}
fileprivate 
func _load_glExtGetShadersQCOM(shaders:UnsafeMutablePointer<OpenGL.UInt>?, maxShaders:OpenGL.Int, numShaders:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetShadersQCOM = unsafeBitCast(OpenGL.getfp("glExtGetShadersQCOM", support: [OpenGL.ss317]), to: Swift.type(of: OpenGL.glExtGetShadersQCOM))
    OpenGL.glExtGetShadersQCOM(shaders, maxShaders, numShaders)
}
fileprivate 
func _load_glExtGetTexLevelParameterivQCOM(texture:OpenGL.UInt, face:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetTexLevelParameterivQCOM = unsafeBitCast(OpenGL.getfp("glExtGetTexLevelParameterivQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetTexLevelParameterivQCOM))
    OpenGL.glExtGetTexLevelParameterivQCOM(texture, face, level, pname, params)
}
fileprivate 
func _load_glExtGetTexSubImageQCOM(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, texels:UnsafeMutableRawPointer?)
{
    OpenGL.glExtGetTexSubImageQCOM = unsafeBitCast(OpenGL.getfp("glExtGetTexSubImageQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetTexSubImageQCOM))
    OpenGL.glExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
}
fileprivate 
func _load_glExtGetTexturesQCOM(textures:UnsafeMutablePointer<OpenGL.UInt>?, maxTextures:OpenGL.Int, numTextures:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glExtGetTexturesQCOM = unsafeBitCast(OpenGL.getfp("glExtGetTexturesQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtGetTexturesQCOM))
    OpenGL.glExtGetTexturesQCOM(textures, maxTextures, numTextures)
}
fileprivate 
func _load_glExtIsProgramBinaryQCOM(program:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glExtIsProgramBinaryQCOM = unsafeBitCast(OpenGL.getfp("glExtIsProgramBinaryQCOM", support: [OpenGL.ss317]), to: Swift.type(of: OpenGL.glExtIsProgramBinaryQCOM))
    return OpenGL.glExtIsProgramBinaryQCOM(program)
}
fileprivate 
func _load_glExtTexObjectStateOverrideiQCOM(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glExtTexObjectStateOverrideiQCOM = unsafeBitCast(OpenGL.getfp("glExtTexObjectStateOverrideiQCOM", support: [OpenGL.ss316]), to: Swift.type(of: OpenGL.glExtTexObjectStateOverrideiQCOM))
    OpenGL.glExtTexObjectStateOverrideiQCOM(target, pname, param)
}
fileprivate 
func _load_glExtractComponentEXT(res:OpenGL.UInt, src:OpenGL.UInt, num:OpenGL.UInt)
{
    OpenGL.glExtractComponentEXT = unsafeBitCast(OpenGL.getfp("glExtractComponentEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glExtractComponentEXT))
    OpenGL.glExtractComponentEXT(res, src, num)
}
fileprivate 
func _load_glFeedbackBuffer(size:OpenGL.Size, type:OpenGL.Enum, buffer:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glFeedbackBuffer = unsafeBitCast(OpenGL.getfp("glFeedbackBuffer", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFeedbackBuffer))
    OpenGL.glFeedbackBuffer(size, type, buffer)
}
fileprivate 
func _load_glFeedbackBufferxOES(n:OpenGL.Size, type:OpenGL.Enum, buffer:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glFeedbackBufferxOES = unsafeBitCast(OpenGL.getfp("glFeedbackBufferxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glFeedbackBufferxOES))
    OpenGL.glFeedbackBufferxOES(n, type, buffer)
}
fileprivate 
func _load_glFenceSync(condition:OpenGL.Enum, flags:OpenGL.Bitfield) -> OpenGL.Sync
{
    OpenGL.glFenceSync = unsafeBitCast(OpenGL.getfp("glFenceSync", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glFenceSync))
    return OpenGL.glFenceSync(condition, flags)
}
fileprivate 
func _load_glFenceSyncAPPLE(condition:OpenGL.Enum, flags:OpenGL.Bitfield) -> OpenGL.Sync
{
    OpenGL.glFenceSyncAPPLE = unsafeBitCast(OpenGL.getfp("glFenceSyncAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glFenceSyncAPPLE))
    return OpenGL.glFenceSyncAPPLE(condition, flags)
}
fileprivate 
func _load_glFinalCombinerInputNV(variable:OpenGL.Enum, input:OpenGL.Enum, mapping:OpenGL.Enum, componentUsage:OpenGL.Enum)
{
    OpenGL.glFinalCombinerInputNV = unsafeBitCast(OpenGL.getfp("glFinalCombinerInputNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glFinalCombinerInputNV))
    OpenGL.glFinalCombinerInputNV(variable, input, mapping, componentUsage)
}
fileprivate 
func _load_glFinish()
{
    OpenGL.glFinish = unsafeBitCast(OpenGL.getfp("glFinish", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glFinish))
    OpenGL.glFinish()
}
fileprivate 
func _load_glFinishAsyncSGIX(markerp:UnsafeMutablePointer<OpenGL.UInt>?) -> OpenGL.Int
{
    OpenGL.glFinishAsyncSGIX = unsafeBitCast(OpenGL.getfp("glFinishAsyncSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glFinishAsyncSGIX))
    return OpenGL.glFinishAsyncSGIX(markerp)
}
fileprivate 
func _load_glFinishFenceAPPLE(fence:OpenGL.UInt)
{
    OpenGL.glFinishFenceAPPLE = unsafeBitCast(OpenGL.getfp("glFinishFenceAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glFinishFenceAPPLE))
    OpenGL.glFinishFenceAPPLE(fence)
}
fileprivate 
func _load_glFinishFenceNV(fence:OpenGL.UInt)
{
    OpenGL.glFinishFenceNV = unsafeBitCast(OpenGL.getfp("glFinishFenceNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glFinishFenceNV))
    OpenGL.glFinishFenceNV(fence)
}
fileprivate 
func _load_glFinishObjectAPPLE(object:OpenGL.Enum, name:OpenGL.Int)
{
    OpenGL.glFinishObjectAPPLE = unsafeBitCast(OpenGL.getfp("glFinishObjectAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glFinishObjectAPPLE))
    OpenGL.glFinishObjectAPPLE(object, name)
}
fileprivate 
func _load_glFinishTextureSUNX()
{
    OpenGL.glFinishTextureSUNX = unsafeBitCast(OpenGL.getfp("glFinishTextureSUNX", support: [OpenGL.ss341]), to: Swift.type(of: OpenGL.glFinishTextureSUNX))
    OpenGL.glFinishTextureSUNX()
}
fileprivate 
func _load_glFlush()
{
    OpenGL.glFlush = unsafeBitCast(OpenGL.getfp("glFlush", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glFlush))
    OpenGL.glFlush()
}
fileprivate 
func _load_glFlushMappedBufferRange(target:OpenGL.Enum, offset:OpenGL.IntPointer, length:OpenGL.SizePointer)
{
    OpenGL.glFlushMappedBufferRange = unsafeBitCast(OpenGL.getfp("glFlushMappedBufferRange", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss65]), to: Swift.type(of: OpenGL.glFlushMappedBufferRange))
    OpenGL.glFlushMappedBufferRange(target, offset, length)
}
fileprivate 
func _load_glFlushMappedBufferRangeAPPLE(target:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glFlushMappedBufferRangeAPPLE = unsafeBitCast(OpenGL.getfp("glFlushMappedBufferRangeAPPLE", support: [OpenGL.ss20]), to: Swift.type(of: OpenGL.glFlushMappedBufferRangeAPPLE))
    OpenGL.glFlushMappedBufferRangeAPPLE(target, offset, size)
}
fileprivate 
func _load_glFlushMappedBufferRangeEXT(target:OpenGL.Enum, offset:OpenGL.IntPointer, length:OpenGL.SizePointer)
{
    OpenGL.glFlushMappedBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glFlushMappedBufferRangeEXT", support: [OpenGL.ss165]), to: Swift.type(of: OpenGL.glFlushMappedBufferRangeEXT))
    OpenGL.glFlushMappedBufferRangeEXT(target, offset, length)
}
fileprivate 
func _load_glFlushMappedNamedBufferRange(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, length:OpenGL.SizePointer)
{
    OpenGL.glFlushMappedNamedBufferRange = unsafeBitCast(OpenGL.getfp("glFlushMappedNamedBufferRange", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glFlushMappedNamedBufferRange))
    OpenGL.glFlushMappedNamedBufferRange(buffer, offset, length)
}
fileprivate 
func _load_glFlushMappedNamedBufferRangeEXT(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, length:OpenGL.SizePointer)
{
    OpenGL.glFlushMappedNamedBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glFlushMappedNamedBufferRangeEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glFlushMappedNamedBufferRangeEXT))
    OpenGL.glFlushMappedNamedBufferRangeEXT(buffer, offset, length)
}
fileprivate 
func _load_glFlushPixelDataRangeNV(target:OpenGL.Enum)
{
    OpenGL.glFlushPixelDataRangeNV = unsafeBitCast(OpenGL.getfp("glFlushPixelDataRangeNV", support: [OpenGL.ss261]), to: Swift.type(of: OpenGL.glFlushPixelDataRangeNV))
    OpenGL.glFlushPixelDataRangeNV(target)
}
fileprivate 
func _load_glFlushRasterSGIX()
{
    OpenGL.glFlushRasterSGIX = unsafeBitCast(OpenGL.getfp("glFlushRasterSGIX", support: [OpenGL.ss329]), to: Swift.type(of: OpenGL.glFlushRasterSGIX))
    OpenGL.glFlushRasterSGIX()
}
fileprivate 
func _load_glFlushStaticDataIBM(target:OpenGL.Enum)
{
    OpenGL.glFlushStaticDataIBM = unsafeBitCast(OpenGL.getfp("glFlushStaticDataIBM", support: [OpenGL.ss211]), to: Swift.type(of: OpenGL.glFlushStaticDataIBM))
    OpenGL.glFlushStaticDataIBM(target)
}
fileprivate 
func _load_glFlushVertexArrayRangeAPPLE(length:OpenGL.Size, pointer:UnsafeMutableRawPointer?)
{
    OpenGL.glFlushVertexArrayRangeAPPLE = unsafeBitCast(OpenGL.getfp("glFlushVertexArrayRangeAPPLE", support: [OpenGL.ss26]), to: Swift.type(of: OpenGL.glFlushVertexArrayRangeAPPLE))
    OpenGL.glFlushVertexArrayRangeAPPLE(length, pointer)
}
fileprivate 
func _load_glFlushVertexArrayRangeNV()
{
    OpenGL.glFlushVertexArrayRangeNV = unsafeBitCast(OpenGL.getfp("glFlushVertexArrayRangeNV", support: [OpenGL.ss276]), to: Swift.type(of: OpenGL.glFlushVertexArrayRangeNV))
    OpenGL.glFlushVertexArrayRangeNV()
}
fileprivate 
func _load_glFogCoordFormatNV(type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glFogCoordFormatNV = unsafeBitCast(OpenGL.getfp("glFogCoordFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glFogCoordFormatNV))
    OpenGL.glFogCoordFormatNV(type, stride)
}
fileprivate 
func _load_glFogCoordPointer(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glFogCoordPointer = unsafeBitCast(OpenGL.getfp("glFogCoordPointer", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogCoordPointer))
    OpenGL.glFogCoordPointer(type, stride, pointer)
}
fileprivate 
func _load_glFogCoordPointerEXT(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glFogCoordPointerEXT = unsafeBitCast(OpenGL.getfp("glFogCoordPointerEXT", support: [OpenGL.ss152]), to: Swift.type(of: OpenGL.glFogCoordPointerEXT))
    OpenGL.glFogCoordPointerEXT(type, stride, pointer)
}
fileprivate 
func _load_glFogCoordPointerListIBM(type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glFogCoordPointerListIBM = unsafeBitCast(OpenGL.getfp("glFogCoordPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glFogCoordPointerListIBM))
    OpenGL.glFogCoordPointerListIBM(type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glFogCoordd(coord:OpenGL.Double)
{
    OpenGL.glFogCoordd = unsafeBitCast(OpenGL.getfp("glFogCoordd", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogCoordd))
    OpenGL.glFogCoordd(coord)
}
fileprivate 
func _load_glFogCoorddEXT(coord:OpenGL.Double)
{
    OpenGL.glFogCoorddEXT = unsafeBitCast(OpenGL.getfp("glFogCoorddEXT", support: [OpenGL.ss152]), to: Swift.type(of: OpenGL.glFogCoorddEXT))
    OpenGL.glFogCoorddEXT(coord)
}
fileprivate 
func _load_glFogCoorddv(coord:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glFogCoorddv = unsafeBitCast(OpenGL.getfp("glFogCoorddv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogCoorddv))
    OpenGL.glFogCoorddv(coord)
}
fileprivate 
func _load_glFogCoorddvEXT(coord:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glFogCoorddvEXT = unsafeBitCast(OpenGL.getfp("glFogCoorddvEXT", support: [OpenGL.ss152]), to: Swift.type(of: OpenGL.glFogCoorddvEXT))
    OpenGL.glFogCoorddvEXT(coord)
}
fileprivate 
func _load_glFogCoordf(coord:OpenGL.Float)
{
    OpenGL.glFogCoordf = unsafeBitCast(OpenGL.getfp("glFogCoordf", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogCoordf))
    OpenGL.glFogCoordf(coord)
}
fileprivate 
func _load_glFogCoordfEXT(coord:OpenGL.Float)
{
    OpenGL.glFogCoordfEXT = unsafeBitCast(OpenGL.getfp("glFogCoordfEXT", support: [OpenGL.ss152]), to: Swift.type(of: OpenGL.glFogCoordfEXT))
    OpenGL.glFogCoordfEXT(coord)
}
fileprivate 
func _load_glFogCoordfv(coord:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFogCoordfv = unsafeBitCast(OpenGL.getfp("glFogCoordfv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogCoordfv))
    OpenGL.glFogCoordfv(coord)
}
fileprivate 
func _load_glFogCoordfvEXT(coord:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFogCoordfvEXT = unsafeBitCast(OpenGL.getfp("glFogCoordfvEXT", support: [OpenGL.ss152]), to: Swift.type(of: OpenGL.glFogCoordfvEXT))
    OpenGL.glFogCoordfvEXT(coord)
}
fileprivate 
func _load_glFogCoordhNV(fog:OpenGL.HalfNV)
{
    OpenGL.glFogCoordhNV = unsafeBitCast(OpenGL.getfp("glFogCoordhNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glFogCoordhNV))
    OpenGL.glFogCoordhNV(fog)
}
fileprivate 
func _load_glFogCoordhvNV(fog:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glFogCoordhvNV = unsafeBitCast(OpenGL.getfp("glFogCoordhvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glFogCoordhvNV))
    OpenGL.glFogCoordhvNV(fog)
}
fileprivate 
func _load_glFogFuncSGIS(n:OpenGL.Size, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFogFuncSGIS = unsafeBitCast(OpenGL.getfp("glFogFuncSGIS", support: [OpenGL.ss320]), to: Swift.type(of: OpenGL.glFogFuncSGIS))
    OpenGL.glFogFuncSGIS(n, points)
}
fileprivate 
func _load_glFogf(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glFogf = unsafeBitCast(OpenGL.getfp("glFogf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glFogf))
    OpenGL.glFogf(pname, param)
}
fileprivate 
func _load_glFogfv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFogfv = unsafeBitCast(OpenGL.getfp("glFogfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glFogfv))
    OpenGL.glFogfv(pname, params)
}
fileprivate 
func _load_glFogi(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glFogi = unsafeBitCast(OpenGL.getfp("glFogi", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogi))
    OpenGL.glFogi(pname, param)
}
fileprivate 
func _load_glFogiv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glFogiv = unsafeBitCast(OpenGL.getfp("glFogiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFogiv))
    OpenGL.glFogiv(pname, params)
}
fileprivate 
func _load_glFogx(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glFogx = unsafeBitCast(OpenGL.getfp("glFogx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glFogx))
    OpenGL.glFogx(pname, param)
}
fileprivate 
func _load_glFogxOES(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glFogxOES = unsafeBitCast(OpenGL.getfp("glFogxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glFogxOES))
    OpenGL.glFogxOES(pname, param)
}
fileprivate 
func _load_glFogxv(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glFogxv = unsafeBitCast(OpenGL.getfp("glFogxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glFogxv))
    OpenGL.glFogxv(pname, param)
}
fileprivate 
func _load_glFogxvOES(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glFogxvOES = unsafeBitCast(OpenGL.getfp("glFogxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glFogxvOES))
    OpenGL.glFogxvOES(pname, param)
}
fileprivate 
func _load_glFragmentColorMaterialSGIX(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glFragmentColorMaterialSGIX = unsafeBitCast(OpenGL.getfp("glFragmentColorMaterialSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentColorMaterialSGIX))
    OpenGL.glFragmentColorMaterialSGIX(face, mode)
}
fileprivate 
func _load_glFragmentCoverageColorNV(color:OpenGL.UInt)
{
    OpenGL.glFragmentCoverageColorNV = unsafeBitCast(OpenGL.getfp("glFragmentCoverageColorNV", support: [OpenGL.ss244]), to: Swift.type(of: OpenGL.glFragmentCoverageColorNV))
    OpenGL.glFragmentCoverageColorNV(color)
}
fileprivate 
func _load_glFragmentLightModelfSGIX(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glFragmentLightModelfSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightModelfSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightModelfSGIX))
    OpenGL.glFragmentLightModelfSGIX(pname, param)
}
fileprivate 
func _load_glFragmentLightModelfvSGIX(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFragmentLightModelfvSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightModelfvSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightModelfvSGIX))
    OpenGL.glFragmentLightModelfvSGIX(pname, params)
}
fileprivate 
func _load_glFragmentLightModeliSGIX(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glFragmentLightModeliSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightModeliSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightModeliSGIX))
    OpenGL.glFragmentLightModeliSGIX(pname, param)
}
fileprivate 
func _load_glFragmentLightModelivSGIX(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glFragmentLightModelivSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightModelivSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightModelivSGIX))
    OpenGL.glFragmentLightModelivSGIX(pname, params)
}
fileprivate 
func _load_glFragmentLightfSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glFragmentLightfSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightfSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightfSGIX))
    OpenGL.glFragmentLightfSGIX(light, pname, param)
}
fileprivate 
func _load_glFragmentLightfvSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFragmentLightfvSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightfvSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightfvSGIX))
    OpenGL.glFragmentLightfvSGIX(light, pname, params)
}
fileprivate 
func _load_glFragmentLightiSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glFragmentLightiSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightiSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightiSGIX))
    OpenGL.glFragmentLightiSGIX(light, pname, param)
}
fileprivate 
func _load_glFragmentLightivSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glFragmentLightivSGIX = unsafeBitCast(OpenGL.getfp("glFragmentLightivSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentLightivSGIX))
    OpenGL.glFragmentLightivSGIX(light, pname, params)
}
fileprivate 
func _load_glFragmentMaterialfSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glFragmentMaterialfSGIX = unsafeBitCast(OpenGL.getfp("glFragmentMaterialfSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentMaterialfSGIX))
    OpenGL.glFragmentMaterialfSGIX(face, pname, param)
}
fileprivate 
func _load_glFragmentMaterialfvSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFragmentMaterialfvSGIX = unsafeBitCast(OpenGL.getfp("glFragmentMaterialfvSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentMaterialfvSGIX))
    OpenGL.glFragmentMaterialfvSGIX(face, pname, params)
}
fileprivate 
func _load_glFragmentMaterialiSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glFragmentMaterialiSGIX = unsafeBitCast(OpenGL.getfp("glFragmentMaterialiSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentMaterialiSGIX))
    OpenGL.glFragmentMaterialiSGIX(face, pname, param)
}
fileprivate 
func _load_glFragmentMaterialivSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glFragmentMaterialivSGIX = unsafeBitCast(OpenGL.getfp("glFragmentMaterialivSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glFragmentMaterialivSGIX))
    OpenGL.glFragmentMaterialivSGIX(face, pname, params)
}
fileprivate 
func _load_glFrameTerminatorGREMEDY()
{
    OpenGL.glFrameTerminatorGREMEDY = unsafeBitCast(OpenGL.getfp("glFrameTerminatorGREMEDY", support: [OpenGL.ss207]), to: Swift.type(of: OpenGL.glFrameTerminatorGREMEDY))
    OpenGL.glFrameTerminatorGREMEDY()
}
fileprivate 
func _load_glFrameZoomSGIX(factor:OpenGL.Int)
{
    OpenGL.glFrameZoomSGIX = unsafeBitCast(OpenGL.getfp("glFrameZoomSGIX", support: [OpenGL.ss331]), to: Swift.type(of: OpenGL.glFrameZoomSGIX))
    OpenGL.glFrameZoomSGIX(factor)
}
fileprivate 
func _load_glFramebufferDrawBufferEXT(framebuffer:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glFramebufferDrawBufferEXT = unsafeBitCast(OpenGL.getfp("glFramebufferDrawBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glFramebufferDrawBufferEXT))
    OpenGL.glFramebufferDrawBufferEXT(framebuffer, mode)
}
fileprivate 
func _load_glFramebufferDrawBuffersEXT(framebuffer:OpenGL.UInt, n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glFramebufferDrawBuffersEXT = unsafeBitCast(OpenGL.getfp("glFramebufferDrawBuffersEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glFramebufferDrawBuffersEXT))
    OpenGL.glFramebufferDrawBuffersEXT(framebuffer, n, bufs)
}
fileprivate 
func _load_glFramebufferParameteri(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glFramebufferParameteri = unsafeBitCast(OpenGL.getfp("glFramebufferParameteri", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss52]), to: Swift.type(of: OpenGL.glFramebufferParameteri))
    OpenGL.glFramebufferParameteri(target, pname, param)
}
fileprivate 
func _load_glFramebufferReadBufferEXT(framebuffer:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glFramebufferReadBufferEXT = unsafeBitCast(OpenGL.getfp("glFramebufferReadBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glFramebufferReadBufferEXT))
    OpenGL.glFramebufferReadBufferEXT(framebuffer, mode)
}
fileprivate 
func _load_glFramebufferRenderbuffer(target:OpenGL.Enum, attachment:OpenGL.Enum, renderbuffertarget:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glFramebufferRenderbuffer = unsafeBitCast(OpenGL.getfp("glFramebufferRenderbuffer", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glFramebufferRenderbuffer))
    OpenGL.glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
}
fileprivate 
func _load_glFramebufferRenderbufferEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, renderbuffertarget:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glFramebufferRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glFramebufferRenderbufferEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glFramebufferRenderbufferEXT))
    OpenGL.glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer)
}
fileprivate 
func _load_glFramebufferRenderbufferOES(target:OpenGL.Enum, attachment:OpenGL.Enum, renderbuffertarget:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glFramebufferRenderbufferOES = unsafeBitCast(OpenGL.getfp("glFramebufferRenderbufferOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glFramebufferRenderbufferOES))
    OpenGL.glFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer)
}
fileprivate 
func _load_glFramebufferSampleLocationsfvARB(target:OpenGL.Enum, start:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFramebufferSampleLocationsfvARB = unsafeBitCast(OpenGL.getfp("glFramebufferSampleLocationsfvARB", support: [OpenGL.ss77]), to: Swift.type(of: OpenGL.glFramebufferSampleLocationsfvARB))
    OpenGL.glFramebufferSampleLocationsfvARB(target, start, count, v)
}
fileprivate 
func _load_glFramebufferSampleLocationsfvNV(target:OpenGL.Enum, start:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glFramebufferSampleLocationsfvNV = unsafeBitCast(OpenGL.getfp("glFramebufferSampleLocationsfvNV", support: [OpenGL.ss269]), to: Swift.type(of: OpenGL.glFramebufferSampleLocationsfvNV))
    OpenGL.glFramebufferSampleLocationsfvNV(target, start, count, v)
}
fileprivate 
func _load_glFramebufferTexture(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture = unsafeBitCast(OpenGL.getfp("glFramebufferTexture", support: [OpenGL.ss356, OpenGL.ss368]), to: Swift.type(of: OpenGL.glFramebufferTexture))
    OpenGL.glFramebufferTexture(target, attachment, texture, level)
}
fileprivate 
func _load_glFramebufferTexture1D(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture1D = unsafeBitCast(OpenGL.getfp("glFramebufferTexture1D", support: [OpenGL.ss354, OpenGL.ss53]), to: Swift.type(of: OpenGL.glFramebufferTexture1D))
    OpenGL.glFramebufferTexture1D(target, attachment, textarget, texture, level)
}
fileprivate 
func _load_glFramebufferTexture1DEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture1DEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTexture1DEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glFramebufferTexture1DEXT))
    OpenGL.glFramebufferTexture1DEXT(target, attachment, textarget, texture, level)
}
fileprivate 
func _load_glFramebufferTexture2D(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture2D = unsafeBitCast(OpenGL.getfp("glFramebufferTexture2D", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glFramebufferTexture2D))
    OpenGL.glFramebufferTexture2D(target, attachment, textarget, texture, level)
}
fileprivate 
func _load_glFramebufferTexture2DEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture2DEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTexture2DEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glFramebufferTexture2DEXT))
    OpenGL.glFramebufferTexture2DEXT(target, attachment, textarget, texture, level)
}
fileprivate 
func _load_glFramebufferTexture2DMultisampleEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, samples:OpenGL.Size)
{
    OpenGL.glFramebufferTexture2DMultisampleEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTexture2DMultisampleEXT", support: [OpenGL.ss169]), to: Swift.type(of: OpenGL.glFramebufferTexture2DMultisampleEXT))
    OpenGL.glFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples)
}
fileprivate 
func _load_glFramebufferTexture2DMultisampleIMG(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, samples:OpenGL.Size)
{
    OpenGL.glFramebufferTexture2DMultisampleIMG = unsafeBitCast(OpenGL.getfp("glFramebufferTexture2DMultisampleIMG", support: [OpenGL.ss213]), to: Swift.type(of: OpenGL.glFramebufferTexture2DMultisampleIMG))
    OpenGL.glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples)
}
fileprivate 
func _load_glFramebufferTexture2DOES(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTexture2DOES = unsafeBitCast(OpenGL.getfp("glFramebufferTexture2DOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glFramebufferTexture2DOES))
    OpenGL.glFramebufferTexture2DOES(target, attachment, textarget, texture, level)
}
fileprivate 
func _load_glFramebufferTexture3D(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, zoffset:OpenGL.Int)
{
    OpenGL.glFramebufferTexture3D = unsafeBitCast(OpenGL.getfp("glFramebufferTexture3D", support: [OpenGL.ss354, OpenGL.ss53]), to: Swift.type(of: OpenGL.glFramebufferTexture3D))
    OpenGL.glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset)
}
fileprivate 
func _load_glFramebufferTexture3DEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, zoffset:OpenGL.Int)
{
    OpenGL.glFramebufferTexture3DEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTexture3DEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glFramebufferTexture3DEXT))
    OpenGL.glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset)
}
fileprivate 
func _load_glFramebufferTexture3DOES(target:OpenGL.Enum, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, zoffset:OpenGL.Int)
{
    OpenGL.glFramebufferTexture3DOES = unsafeBitCast(OpenGL.getfp("glFramebufferTexture3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glFramebufferTexture3DOES))
    OpenGL.glFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset)
}
fileprivate 
func _load_glFramebufferTextureARB(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTextureARB = unsafeBitCast(OpenGL.getfp("glFramebufferTextureARB", support: [OpenGL.ss54]), to: Swift.type(of: OpenGL.glFramebufferTextureARB))
    OpenGL.glFramebufferTextureARB(target, attachment, texture, level)
}
fileprivate 
func _load_glFramebufferTextureEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTextureEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTextureEXT", support: [OpenGL.ss156, OpenGL.ss250]), to: Swift.type(of: OpenGL.glFramebufferTextureEXT))
    OpenGL.glFramebufferTextureEXT(target, attachment, texture, level)
}
fileprivate 
func _load_glFramebufferTextureFaceARB(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, face:OpenGL.Enum)
{
    OpenGL.glFramebufferTextureFaceARB = unsafeBitCast(OpenGL.getfp("glFramebufferTextureFaceARB", support: [OpenGL.ss54]), to: Swift.type(of: OpenGL.glFramebufferTextureFaceARB))
    OpenGL.glFramebufferTextureFaceARB(target, attachment, texture, level, face)
}
fileprivate 
func _load_glFramebufferTextureFaceEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, face:OpenGL.Enum)
{
    OpenGL.glFramebufferTextureFaceEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTextureFaceEXT", support: [OpenGL.ss250]), to: Swift.type(of: OpenGL.glFramebufferTextureFaceEXT))
    OpenGL.glFramebufferTextureFaceEXT(target, attachment, texture, level, face)
}
fileprivate 
func _load_glFramebufferTextureLayer(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, layer:OpenGL.Int)
{
    OpenGL.glFramebufferTextureLayer = unsafeBitCast(OpenGL.getfp("glFramebufferTextureLayer", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss53]), to: Swift.type(of: OpenGL.glFramebufferTextureLayer))
    OpenGL.glFramebufferTextureLayer(target, attachment, texture, level, layer)
}
fileprivate 
func _load_glFramebufferTextureLayerARB(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, layer:OpenGL.Int)
{
    OpenGL.glFramebufferTextureLayerARB = unsafeBitCast(OpenGL.getfp("glFramebufferTextureLayerARB", support: [OpenGL.ss54]), to: Swift.type(of: OpenGL.glFramebufferTextureLayerARB))
    OpenGL.glFramebufferTextureLayerARB(target, attachment, texture, level, layer)
}
fileprivate 
func _load_glFramebufferTextureLayerEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, layer:OpenGL.Int)
{
    OpenGL.glFramebufferTextureLayerEXT = unsafeBitCast(OpenGL.getfp("glFramebufferTextureLayerEXT", support: [OpenGL.ss190, OpenGL.ss250]), to: Swift.type(of: OpenGL.glFramebufferTextureLayerEXT))
    OpenGL.glFramebufferTextureLayerEXT(target, attachment, texture, level, layer)
}
fileprivate 
func _load_glFramebufferTextureMultisampleMultiviewOVR(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, samples:OpenGL.Size, baseViewIndex:OpenGL.Int, numViews:OpenGL.Size)
{
    OpenGL.glFramebufferTextureMultisampleMultiviewOVR = unsafeBitCast(OpenGL.getfp("glFramebufferTextureMultisampleMultiviewOVR", support: [OpenGL.ss312]), to: Swift.type(of: OpenGL.glFramebufferTextureMultisampleMultiviewOVR))
    OpenGL.glFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews)
}
fileprivate 
func _load_glFramebufferTextureMultiviewOVR(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, baseViewIndex:OpenGL.Int, numViews:OpenGL.Size)
{
    OpenGL.glFramebufferTextureMultiviewOVR = unsafeBitCast(OpenGL.getfp("glFramebufferTextureMultiviewOVR", support: [OpenGL.ss311]), to: Swift.type(of: OpenGL.glFramebufferTextureMultiviewOVR))
    OpenGL.glFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews)
}
fileprivate 
func _load_glFramebufferTextureOES(target:OpenGL.Enum, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glFramebufferTextureOES = unsafeBitCast(OpenGL.getfp("glFramebufferTextureOES", support: [OpenGL.ss294]), to: Swift.type(of: OpenGL.glFramebufferTextureOES))
    OpenGL.glFramebufferTextureOES(target, attachment, texture, level)
}
fileprivate 
func _load_glFreeObjectBufferATI(buffer:OpenGL.UInt)
{
    OpenGL.glFreeObjectBufferATI = unsafeBitCast(OpenGL.getfp("glFreeObjectBufferATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glFreeObjectBufferATI))
    OpenGL.glFreeObjectBufferATI(buffer)
}
fileprivate 
func _load_glFrontFace(mode:OpenGL.Enum)
{
    OpenGL.glFrontFace = unsafeBitCast(OpenGL.getfp("glFrontFace", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glFrontFace))
    OpenGL.glFrontFace(mode)
}
fileprivate 
func _load_glFrustum(left:OpenGL.Double, right:OpenGL.Double, bottom:OpenGL.Double, top:OpenGL.Double, zNear:OpenGL.Double, zFar:OpenGL.Double)
{
    OpenGL.glFrustum = unsafeBitCast(OpenGL.getfp("glFrustum", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glFrustum))
    OpenGL.glFrustum(left, right, bottom, top, zNear, zFar)
}
fileprivate 
func _load_glFrustumf(l:OpenGL.Float, r:OpenGL.Float, b:OpenGL.Float, t:OpenGL.Float, n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glFrustumf = unsafeBitCast(OpenGL.getfp("glFrustumf", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glFrustumf))
    OpenGL.glFrustumf(l, r, b, t, n, f)
}
fileprivate 
func _load_glFrustumfOES(l:OpenGL.Float, r:OpenGL.Float, b:OpenGL.Float, t:OpenGL.Float, n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glFrustumfOES = unsafeBitCast(OpenGL.getfp("glFrustumfOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glFrustumfOES))
    OpenGL.glFrustumfOES(l, r, b, t, n, f)
}
fileprivate 
func _load_glFrustumx(l:OpenGL.Fixed, r:OpenGL.Fixed, b:OpenGL.Fixed, t:OpenGL.Fixed, n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glFrustumx = unsafeBitCast(OpenGL.getfp("glFrustumx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glFrustumx))
    OpenGL.glFrustumx(l, r, b, t, n, f)
}
fileprivate 
func _load_glFrustumxOES(l:OpenGL.Fixed, r:OpenGL.Fixed, b:OpenGL.Fixed, t:OpenGL.Fixed, n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glFrustumxOES = unsafeBitCast(OpenGL.getfp("glFrustumxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glFrustumxOES))
    OpenGL.glFrustumxOES(l, r, b, t, n, f)
}
fileprivate 
func _load_glGenAsyncMarkersSGIX(range:OpenGL.Size) -> OpenGL.UInt
{
    OpenGL.glGenAsyncMarkersSGIX = unsafeBitCast(OpenGL.getfp("glGenAsyncMarkersSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glGenAsyncMarkersSGIX))
    return OpenGL.glGenAsyncMarkersSGIX(range)
}
fileprivate 
func _load_glGenBuffers(n:OpenGL.Size, buffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenBuffers = unsafeBitCast(OpenGL.getfp("glGenBuffers", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGenBuffers))
    OpenGL.glGenBuffers(n, buffers)
}
fileprivate 
func _load_glGenBuffersARB(n:OpenGL.Size, buffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenBuffersARB = unsafeBitCast(OpenGL.getfp("glGenBuffersARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glGenBuffersARB))
    OpenGL.glGenBuffersARB(n, buffers)
}
fileprivate 
func _load_glGenFencesAPPLE(n:OpenGL.Size, fences:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenFencesAPPLE = unsafeBitCast(OpenGL.getfp("glGenFencesAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glGenFencesAPPLE))
    OpenGL.glGenFencesAPPLE(n, fences)
}
fileprivate 
func _load_glGenFencesNV(n:OpenGL.Size, fences:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenFencesNV = unsafeBitCast(OpenGL.getfp("glGenFencesNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glGenFencesNV))
    OpenGL.glGenFencesNV(n, fences)
}
fileprivate 
func _load_glGenFragmentShadersATI(range:OpenGL.UInt) -> OpenGL.UInt
{
    OpenGL.glGenFragmentShadersATI = unsafeBitCast(OpenGL.getfp("glGenFragmentShadersATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glGenFragmentShadersATI))
    return OpenGL.glGenFragmentShadersATI(range)
}
fileprivate 
func _load_glGenFramebuffers(n:OpenGL.Size, framebuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenFramebuffers = unsafeBitCast(OpenGL.getfp("glGenFramebuffers", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glGenFramebuffers))
    OpenGL.glGenFramebuffers(n, framebuffers)
}
fileprivate 
func _load_glGenFramebuffersEXT(n:OpenGL.Size, framebuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenFramebuffersEXT = unsafeBitCast(OpenGL.getfp("glGenFramebuffersEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glGenFramebuffersEXT))
    OpenGL.glGenFramebuffersEXT(n, framebuffers)
}
fileprivate 
func _load_glGenFramebuffersOES(n:OpenGL.Size, framebuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenFramebuffersOES = unsafeBitCast(OpenGL.getfp("glGenFramebuffersOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glGenFramebuffersOES))
    OpenGL.glGenFramebuffersOES(n, framebuffers)
}
fileprivate 
func _load_glGenLists(range:OpenGL.Size) -> OpenGL.UInt
{
    OpenGL.glGenLists = unsafeBitCast(OpenGL.getfp("glGenLists", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGenLists))
    return OpenGL.glGenLists(range)
}
fileprivate 
func _load_glGenNamesAMD(identifier:OpenGL.Enum, num:OpenGL.UInt, names:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenNamesAMD = unsafeBitCast(OpenGL.getfp("glGenNamesAMD", support: [OpenGL.ss6]), to: Swift.type(of: OpenGL.glGenNamesAMD))
    OpenGL.glGenNamesAMD(identifier, num, names)
}
fileprivate 
func _load_glGenOcclusionQueriesNV(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenOcclusionQueriesNV = unsafeBitCast(OpenGL.getfp("glGenOcclusionQueriesNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glGenOcclusionQueriesNV))
    OpenGL.glGenOcclusionQueriesNV(n, ids)
}
fileprivate 
func _load_glGenPathsNV(range:OpenGL.Size) -> OpenGL.UInt
{
    OpenGL.glGenPathsNV = unsafeBitCast(OpenGL.getfp("glGenPathsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGenPathsNV))
    return OpenGL.glGenPathsNV(range)
}
fileprivate 
func _load_glGenPerfMonitorsAMD(n:OpenGL.Size, monitors:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenPerfMonitorsAMD = unsafeBitCast(OpenGL.getfp("glGenPerfMonitorsAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGenPerfMonitorsAMD))
    OpenGL.glGenPerfMonitorsAMD(n, monitors)
}
fileprivate 
func _load_glGenProgramPipelines(n:OpenGL.Size, pipelines:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenProgramPipelines = unsafeBitCast(OpenGL.getfp("glGenProgramPipelines", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glGenProgramPipelines))
    OpenGL.glGenProgramPipelines(n, pipelines)
}
fileprivate 
func _load_glGenProgramPipelinesEXT(n:OpenGL.Size, pipelines:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenProgramPipelinesEXT = unsafeBitCast(OpenGL.getfp("glGenProgramPipelinesEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glGenProgramPipelinesEXT))
    OpenGL.glGenProgramPipelinesEXT(n, pipelines)
}
fileprivate 
func _load_glGenProgramsARB(n:OpenGL.Size, programs:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenProgramsARB = unsafeBitCast(OpenGL.getfp("glGenProgramsARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGenProgramsARB))
    OpenGL.glGenProgramsARB(n, programs)
}
fileprivate 
func _load_glGenProgramsNV(n:OpenGL.Size, programs:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenProgramsNV = unsafeBitCast(OpenGL.getfp("glGenProgramsNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGenProgramsNV))
    OpenGL.glGenProgramsNV(n, programs)
}
fileprivate 
func _load_glGenQueries(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenQueries = unsafeBitCast(OpenGL.getfp("glGenQueries", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGenQueries))
    OpenGL.glGenQueries(n, ids)
}
fileprivate 
func _load_glGenQueriesARB(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenQueriesARB = unsafeBitCast(OpenGL.getfp("glGenQueriesARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glGenQueriesARB))
    OpenGL.glGenQueriesARB(n, ids)
}
fileprivate 
func _load_glGenQueriesEXT(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenQueriesEXT = unsafeBitCast(OpenGL.getfp("glGenQueriesEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glGenQueriesEXT))
    OpenGL.glGenQueriesEXT(n, ids)
}
fileprivate 
func _load_glGenRenderbuffers(n:OpenGL.Size, renderbuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenRenderbuffers = unsafeBitCast(OpenGL.getfp("glGenRenderbuffers", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glGenRenderbuffers))
    OpenGL.glGenRenderbuffers(n, renderbuffers)
}
fileprivate 
func _load_glGenRenderbuffersEXT(n:OpenGL.Size, renderbuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenRenderbuffersEXT = unsafeBitCast(OpenGL.getfp("glGenRenderbuffersEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glGenRenderbuffersEXT))
    OpenGL.glGenRenderbuffersEXT(n, renderbuffers)
}
fileprivate 
func _load_glGenRenderbuffersOES(n:OpenGL.Size, renderbuffers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenRenderbuffersOES = unsafeBitCast(OpenGL.getfp("glGenRenderbuffersOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glGenRenderbuffersOES))
    OpenGL.glGenRenderbuffersOES(n, renderbuffers)
}
fileprivate 
func _load_glGenSamplers(count:OpenGL.Size, samplers:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenSamplers = unsafeBitCast(OpenGL.getfp("glGenSamplers", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glGenSamplers))
    OpenGL.glGenSamplers(count, samplers)
}
fileprivate 
func _load_glGenSymbolsEXT(datatype:OpenGL.Enum, storagetype:OpenGL.Enum, range:OpenGL.Enum, components:OpenGL.UInt) -> OpenGL.UInt
{
    OpenGL.glGenSymbolsEXT = unsafeBitCast(OpenGL.getfp("glGenSymbolsEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGenSymbolsEXT))
    return OpenGL.glGenSymbolsEXT(datatype, storagetype, range, components)
}
fileprivate 
func _load_glGenTextures(n:OpenGL.Size, textures:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenTextures = unsafeBitCast(OpenGL.getfp("glGenTextures", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGenTextures))
    OpenGL.glGenTextures(n, textures)
}
fileprivate 
func _load_glGenTexturesEXT(n:OpenGL.Size, textures:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenTexturesEXT = unsafeBitCast(OpenGL.getfp("glGenTexturesEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glGenTexturesEXT))
    OpenGL.glGenTexturesEXT(n, textures)
}
fileprivate 
func _load_glGenTransformFeedbacks(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenTransformFeedbacks = unsafeBitCast(OpenGL.getfp("glGenTransformFeedbacks", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glGenTransformFeedbacks))
    OpenGL.glGenTransformFeedbacks(n, ids)
}
fileprivate 
func _load_glGenTransformFeedbacksNV(n:OpenGL.Size, ids:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenTransformFeedbacksNV = unsafeBitCast(OpenGL.getfp("glGenTransformFeedbacksNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glGenTransformFeedbacksNV))
    OpenGL.glGenTransformFeedbacksNV(n, ids)
}
fileprivate 
func _load_glGenVertexArrays(n:OpenGL.Size, arrays:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenVertexArrays = unsafeBitCast(OpenGL.getfp("glGenVertexArrays", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss105]), to: Swift.type(of: OpenGL.glGenVertexArrays))
    OpenGL.glGenVertexArrays(n, arrays)
}
fileprivate 
func _load_glGenVertexArraysAPPLE(n:OpenGL.Size, arrays:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenVertexArraysAPPLE = unsafeBitCast(OpenGL.getfp("glGenVertexArraysAPPLE", support: [OpenGL.ss25]), to: Swift.type(of: OpenGL.glGenVertexArraysAPPLE))
    OpenGL.glGenVertexArraysAPPLE(n, arrays)
}
fileprivate 
func _load_glGenVertexArraysOES(n:OpenGL.Size, arrays:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGenVertexArraysOES = unsafeBitCast(OpenGL.getfp("glGenVertexArraysOES", support: [OpenGL.ss310]), to: Swift.type(of: OpenGL.glGenVertexArraysOES))
    OpenGL.glGenVertexArraysOES(n, arrays)
}
fileprivate 
func _load_glGenVertexShadersEXT(range:OpenGL.UInt) -> OpenGL.UInt
{
    OpenGL.glGenVertexShadersEXT = unsafeBitCast(OpenGL.getfp("glGenVertexShadersEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGenVertexShadersEXT))
    return OpenGL.glGenVertexShadersEXT(range)
}
fileprivate 
func _load_glGenerateMipmap(target:OpenGL.Enum)
{
    OpenGL.glGenerateMipmap = unsafeBitCast(OpenGL.getfp("glGenerateMipmap", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glGenerateMipmap))
    OpenGL.glGenerateMipmap(target)
}
fileprivate 
func _load_glGenerateMipmapEXT(target:OpenGL.Enum)
{
    OpenGL.glGenerateMipmapEXT = unsafeBitCast(OpenGL.getfp("glGenerateMipmapEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glGenerateMipmapEXT))
    OpenGL.glGenerateMipmapEXT(target)
}
fileprivate 
func _load_glGenerateMipmapOES(target:OpenGL.Enum)
{
    OpenGL.glGenerateMipmapOES = unsafeBitCast(OpenGL.getfp("glGenerateMipmapOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glGenerateMipmapOES))
    OpenGL.glGenerateMipmapOES(target)
}
fileprivate 
func _load_glGenerateMultiTexMipmapEXT(texunit:OpenGL.Enum, target:OpenGL.Enum)
{
    OpenGL.glGenerateMultiTexMipmapEXT = unsafeBitCast(OpenGL.getfp("glGenerateMultiTexMipmapEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGenerateMultiTexMipmapEXT))
    OpenGL.glGenerateMultiTexMipmapEXT(texunit, target)
}
fileprivate 
func _load_glGenerateTextureMipmap(texture:OpenGL.UInt)
{
    OpenGL.glGenerateTextureMipmap = unsafeBitCast(OpenGL.getfp("glGenerateTextureMipmap", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGenerateTextureMipmap))
    OpenGL.glGenerateTextureMipmap(texture)
}
fileprivate 
func _load_glGenerateTextureMipmapEXT(texture:OpenGL.UInt, target:OpenGL.Enum)
{
    OpenGL.glGenerateTextureMipmapEXT = unsafeBitCast(OpenGL.getfp("glGenerateTextureMipmapEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGenerateTextureMipmapEXT))
    OpenGL.glGenerateTextureMipmapEXT(texture, target)
}
fileprivate 
func _load_glGetActiveAtomicCounterBufferiv(program:OpenGL.UInt, bufferIndex:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetActiveAtomicCounterBufferiv = unsafeBitCast(OpenGL.getfp("glGetActiveAtomicCounterBufferiv", support: [OpenGL.ss360, OpenGL.ss81]), to: Swift.type(of: OpenGL.glGetActiveAtomicCounterBufferiv))
    OpenGL.glGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params)
}
fileprivate 
func _load_glGetActiveAttrib(program:OpenGL.UInt, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Int>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveAttrib = unsafeBitCast(OpenGL.getfp("glGetActiveAttrib", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetActiveAttrib))
    OpenGL.glGetActiveAttrib(program, index, bufSize, length, size, type, name)
}
fileprivate 
func _load_glGetActiveAttribARB(programObj:OpenGL.HandleARB, index:OpenGL.UInt, maxLength:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Int>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.CharARB>?)
{
    OpenGL.glGetActiveAttribARB = unsafeBitCast(OpenGL.getfp("glGetActiveAttribARB", support: [OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetActiveAttribARB))
    OpenGL.glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)
}
fileprivate 
func _load_glGetActiveSubroutineName(program:OpenGL.UInt, shadertype:OpenGL.Enum, index:OpenGL.UInt, bufsize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveSubroutineName = unsafeBitCast(OpenGL.getfp("glGetActiveSubroutineName", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetActiveSubroutineName))
    OpenGL.glGetActiveSubroutineName(program, shadertype, index, bufsize, length, name)
}
fileprivate 
func _load_glGetActiveSubroutineUniformName(program:OpenGL.UInt, shadertype:OpenGL.Enum, index:OpenGL.UInt, bufsize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveSubroutineUniformName = unsafeBitCast(OpenGL.getfp("glGetActiveSubroutineUniformName", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetActiveSubroutineUniformName))
    OpenGL.glGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name)
}
fileprivate 
func _load_glGetActiveSubroutineUniformiv(program:OpenGL.UInt, shadertype:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, values:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetActiveSubroutineUniformiv = unsafeBitCast(OpenGL.getfp("glGetActiveSubroutineUniformiv", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetActiveSubroutineUniformiv))
    OpenGL.glGetActiveSubroutineUniformiv(program, shadertype, index, pname, values)
}
fileprivate 
func _load_glGetActiveUniform(program:OpenGL.UInt, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Int>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveUniform = unsafeBitCast(OpenGL.getfp("glGetActiveUniform", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetActiveUniform))
    OpenGL.glGetActiveUniform(program, index, bufSize, length, size, type, name)
}
fileprivate 
func _load_glGetActiveUniformARB(programObj:OpenGL.HandleARB, index:OpenGL.UInt, maxLength:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Int>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.CharARB>?)
{
    OpenGL.glGetActiveUniformARB = unsafeBitCast(OpenGL.getfp("glGetActiveUniformARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetActiveUniformARB))
    OpenGL.glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name)
}
fileprivate 
func _load_glGetActiveUniformBlockName(program:OpenGL.UInt, uniformBlockIndex:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, uniformBlockName:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveUniformBlockName = unsafeBitCast(OpenGL.getfp("glGetActiveUniformBlockName", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetActiveUniformBlockName))
    OpenGL.glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName)
}
fileprivate 
func _load_glGetActiveUniformBlockiv(program:OpenGL.UInt, uniformBlockIndex:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetActiveUniformBlockiv = unsafeBitCast(OpenGL.getfp("glGetActiveUniformBlockiv", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetActiveUniformBlockiv))
    OpenGL.glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params)
}
fileprivate 
func _load_glGetActiveUniformName(program:OpenGL.UInt, uniformIndex:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, uniformName:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveUniformName = unsafeBitCast(OpenGL.getfp("glGetActiveUniformName", support: [OpenGL.ss355, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetActiveUniformName))
    OpenGL.glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName)
}
fileprivate 
func _load_glGetActiveUniformsiv(program:OpenGL.UInt, uniformCount:OpenGL.Size, uniformIndices:UnsafePointer<OpenGL.UInt>?, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetActiveUniformsiv = unsafeBitCast(OpenGL.getfp("glGetActiveUniformsiv", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetActiveUniformsiv))
    OpenGL.glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params)
}
fileprivate 
func _load_glGetActiveVaryingNV(program:OpenGL.UInt, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Size>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetActiveVaryingNV = unsafeBitCast(OpenGL.getfp("glGetActiveVaryingNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glGetActiveVaryingNV))
    OpenGL.glGetActiveVaryingNV(program, index, bufSize, length, size, type, name)
}
fileprivate 
func _load_glGetArrayObjectfvATI(array:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetArrayObjectfvATI = unsafeBitCast(OpenGL.getfp("glGetArrayObjectfvATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetArrayObjectfvATI))
    OpenGL.glGetArrayObjectfvATI(array, pname, params)
}
fileprivate 
func _load_glGetArrayObjectivATI(array:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetArrayObjectivATI = unsafeBitCast(OpenGL.getfp("glGetArrayObjectivATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetArrayObjectivATI))
    OpenGL.glGetArrayObjectivATI(array, pname, params)
}
fileprivate 
func _load_glGetAttachedObjectsARB(containerObj:OpenGL.HandleARB, maxCount:OpenGL.Size, count:UnsafeMutablePointer<OpenGL.Size>?, obj:UnsafeMutablePointer<OpenGL.HandleARB>?)
{
    OpenGL.glGetAttachedObjectsARB = unsafeBitCast(OpenGL.getfp("glGetAttachedObjectsARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetAttachedObjectsARB))
    OpenGL.glGetAttachedObjectsARB(containerObj, maxCount, count, obj)
}
fileprivate 
func _load_glGetAttachedShaders(program:OpenGL.UInt, maxCount:OpenGL.Size, count:UnsafeMutablePointer<OpenGL.Size>?, shaders:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetAttachedShaders = unsafeBitCast(OpenGL.getfp("glGetAttachedShaders", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetAttachedShaders))
    OpenGL.glGetAttachedShaders(program, maxCount, count, shaders)
}
fileprivate 
func _load_glGetAttribLocation(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetAttribLocation = unsafeBitCast(OpenGL.getfp("glGetAttribLocation", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetAttribLocation))
    return OpenGL.glGetAttribLocation(program, name)
}
fileprivate 
func _load_glGetAttribLocationARB(programObj:OpenGL.HandleARB, name:UnsafePointer<OpenGL.CharARB>?) -> OpenGL.Int
{
    OpenGL.glGetAttribLocationARB = unsafeBitCast(OpenGL.getfp("glGetAttribLocationARB", support: [OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetAttribLocationARB))
    return OpenGL.glGetAttribLocationARB(programObj, name)
}
fileprivate 
func _load_glGetBooleanIndexedvEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetBooleanIndexedvEXT = unsafeBitCast(OpenGL.getfp("glGetBooleanIndexedvEXT", support: [OpenGL.ss143, OpenGL.ss147]), to: Swift.type(of: OpenGL.glGetBooleanIndexedvEXT))
    OpenGL.glGetBooleanIndexedvEXT(target, index, data)
}
fileprivate 
func _load_glGetBooleani_v(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetBooleani_v = unsafeBitCast(OpenGL.getfp("glGetBooleani_v", support: [OpenGL.ss354, OpenGL.ss367]), to: Swift.type(of: OpenGL.glGetBooleani_v))
    OpenGL.glGetBooleani_v(target, index, data)
}
fileprivate 
func _load_glGetBooleanv(pname:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetBooleanv = unsafeBitCast(OpenGL.getfp("glGetBooleanv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetBooleanv))
    OpenGL.glGetBooleanv(pname, data)
}
fileprivate 
func _load_glGetBufferParameteri64v(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetBufferParameteri64v = unsafeBitCast(OpenGL.getfp("glGetBufferParameteri64v", support: [OpenGL.ss356, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetBufferParameteri64v))
    OpenGL.glGetBufferParameteri64v(target, pname, params)
}
fileprivate 
func _load_glGetBufferParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetBufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetBufferParameteriv", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetBufferParameteriv))
    OpenGL.glGetBufferParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetBufferParameterivARB(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetBufferParameterivARB = unsafeBitCast(OpenGL.getfp("glGetBufferParameterivARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glGetBufferParameterivARB))
    OpenGL.glGetBufferParameterivARB(target, pname, params)
}
fileprivate 
func _load_glGetBufferParameterui64vNV(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetBufferParameterui64vNV = unsafeBitCast(OpenGL.getfp("glGetBufferParameterui64vNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glGetBufferParameterui64vNV))
    OpenGL.glGetBufferParameterui64vNV(target, pname, params)
}
fileprivate 
func _load_glGetBufferPointerv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetBufferPointerv = unsafeBitCast(OpenGL.getfp("glGetBufferPointerv", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetBufferPointerv))
    OpenGL.glGetBufferPointerv(target, pname, params)
}
fileprivate 
func _load_glGetBufferPointervARB(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetBufferPointervARB = unsafeBitCast(OpenGL.getfp("glGetBufferPointervARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glGetBufferPointervARB))
    OpenGL.glGetBufferPointervARB(target, pname, params)
}
fileprivate 
func _load_glGetBufferPointervOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetBufferPointervOES = unsafeBitCast(OpenGL.getfp("glGetBufferPointervOES", support: [OpenGL.ss296]), to: Swift.type(of: OpenGL.glGetBufferPointervOES))
    OpenGL.glGetBufferPointervOES(target, pname, params)
}
fileprivate 
func _load_glGetBufferSubData(target:OpenGL.Enum, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetBufferSubData = unsafeBitCast(OpenGL.getfp("glGetBufferSubData", support: [OpenGL.ss351]), to: Swift.type(of: OpenGL.glGetBufferSubData))
    OpenGL.glGetBufferSubData(target, offset, size, data)
}
fileprivate 
func _load_glGetBufferSubDataARB(target:OpenGL.Enum, offset:OpenGL.IntPointerARB, size:OpenGL.SizePointerARB, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetBufferSubDataARB = unsafeBitCast(OpenGL.getfp("glGetBufferSubDataARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glGetBufferSubDataARB))
    OpenGL.glGetBufferSubDataARB(target, offset, size, data)
}
fileprivate 
func _load_glGetClipPlane(plane:OpenGL.Enum, equation:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetClipPlane = unsafeBitCast(OpenGL.getfp("glGetClipPlane", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetClipPlane))
    OpenGL.glGetClipPlane(plane, equation)
}
fileprivate 
func _load_glGetClipPlanef(plane:OpenGL.Enum, equation:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetClipPlanef = unsafeBitCast(OpenGL.getfp("glGetClipPlanef", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetClipPlanef))
    OpenGL.glGetClipPlanef(plane, equation)
}
fileprivate 
func _load_glGetClipPlanefOES(plane:OpenGL.Enum, equation:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetClipPlanefOES = unsafeBitCast(OpenGL.getfp("glGetClipPlanefOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glGetClipPlanefOES))
    OpenGL.glGetClipPlanefOES(plane, equation)
}
fileprivate 
func _load_glGetClipPlanex(plane:OpenGL.Enum, equation:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetClipPlanex = unsafeBitCast(OpenGL.getfp("glGetClipPlanex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetClipPlanex))
    OpenGL.glGetClipPlanex(plane, equation)
}
fileprivate 
func _load_glGetClipPlanexOES(plane:OpenGL.Enum, equation:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetClipPlanexOES = unsafeBitCast(OpenGL.getfp("glGetClipPlanexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetClipPlanexOES))
    OpenGL.glGetClipPlanexOES(plane, equation)
}
fileprivate 
func _load_glGetColorTable(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, table:UnsafeMutableRawPointer?)
{
    OpenGL.glGetColorTable = unsafeBitCast(OpenGL.getfp("glGetColorTable", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetColorTable))
    OpenGL.glGetColorTable(target, format, type, table)
}
fileprivate 
func _load_glGetColorTableEXT(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetColorTableEXT = unsafeBitCast(OpenGL.getfp("glGetColorTableEXT", support: [OpenGL.ss172]), to: Swift.type(of: OpenGL.glGetColorTableEXT))
    OpenGL.glGetColorTableEXT(target, format, type, data)
}
fileprivate 
func _load_glGetColorTableParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetColorTableParameterfv = unsafeBitCast(OpenGL.getfp("glGetColorTableParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetColorTableParameterfv))
    OpenGL.glGetColorTableParameterfv(target, pname, params)
}
fileprivate 
func _load_glGetColorTableParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetColorTableParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetColorTableParameterfvEXT", support: [OpenGL.ss172]), to: Swift.type(of: OpenGL.glGetColorTableParameterfvEXT))
    OpenGL.glGetColorTableParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glGetColorTableParameterfvSGI(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetColorTableParameterfvSGI = unsafeBitCast(OpenGL.getfp("glGetColorTableParameterfvSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glGetColorTableParameterfvSGI))
    OpenGL.glGetColorTableParameterfvSGI(target, pname, params)
}
fileprivate 
func _load_glGetColorTableParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetColorTableParameteriv = unsafeBitCast(OpenGL.getfp("glGetColorTableParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetColorTableParameteriv))
    OpenGL.glGetColorTableParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetColorTableParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetColorTableParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetColorTableParameterivEXT", support: [OpenGL.ss172]), to: Swift.type(of: OpenGL.glGetColorTableParameterivEXT))
    OpenGL.glGetColorTableParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetColorTableParameterivSGI(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetColorTableParameterivSGI = unsafeBitCast(OpenGL.getfp("glGetColorTableParameterivSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glGetColorTableParameterivSGI))
    OpenGL.glGetColorTableParameterivSGI(target, pname, params)
}
fileprivate 
func _load_glGetColorTableSGI(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, table:UnsafeMutableRawPointer?)
{
    OpenGL.glGetColorTableSGI = unsafeBitCast(OpenGL.getfp("glGetColorTableSGI", support: [OpenGL.ss340]), to: Swift.type(of: OpenGL.glGetColorTableSGI))
    OpenGL.glGetColorTableSGI(target, format, type, table)
}
fileprivate 
func _load_glGetCombinerInputParameterfvNV(stage:OpenGL.Enum, portion:OpenGL.Enum, variable:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetCombinerInputParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetCombinerInputParameterfvNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetCombinerInputParameterfvNV))
    OpenGL.glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params)
}
fileprivate 
func _load_glGetCombinerInputParameterivNV(stage:OpenGL.Enum, portion:OpenGL.Enum, variable:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetCombinerInputParameterivNV = unsafeBitCast(OpenGL.getfp("glGetCombinerInputParameterivNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetCombinerInputParameterivNV))
    OpenGL.glGetCombinerInputParameterivNV(stage, portion, variable, pname, params)
}
fileprivate 
func _load_glGetCombinerOutputParameterfvNV(stage:OpenGL.Enum, portion:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetCombinerOutputParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetCombinerOutputParameterfvNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetCombinerOutputParameterfvNV))
    OpenGL.glGetCombinerOutputParameterfvNV(stage, portion, pname, params)
}
fileprivate 
func _load_glGetCombinerOutputParameterivNV(stage:OpenGL.Enum, portion:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetCombinerOutputParameterivNV = unsafeBitCast(OpenGL.getfp("glGetCombinerOutputParameterivNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetCombinerOutputParameterivNV))
    OpenGL.glGetCombinerOutputParameterivNV(stage, portion, pname, params)
}
fileprivate 
func _load_glGetCombinerStageParameterfvNV(stage:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetCombinerStageParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetCombinerStageParameterfvNV", support: [OpenGL.ss268]), to: Swift.type(of: OpenGL.glGetCombinerStageParameterfvNV))
    OpenGL.glGetCombinerStageParameterfvNV(stage, pname, params)
}
fileprivate 
func _load_glGetCommandHeaderNV(tokenID:OpenGL.Enum, size:OpenGL.UInt) -> OpenGL.UInt
{
    OpenGL.glGetCommandHeaderNV = unsafeBitCast(OpenGL.getfp("glGetCommandHeaderNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glGetCommandHeaderNV))
    return OpenGL.glGetCommandHeaderNV(tokenID, size)
}
fileprivate 
func _load_glGetCompressedMultiTexImageEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, lod:OpenGL.Int, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedMultiTexImageEXT = unsafeBitCast(OpenGL.getfp("glGetCompressedMultiTexImageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetCompressedMultiTexImageEXT))
    OpenGL.glGetCompressedMultiTexImageEXT(texunit, target, lod, img)
}
fileprivate 
func _load_glGetCompressedTexImage(target:OpenGL.Enum, level:OpenGL.Int, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedTexImage = unsafeBitCast(OpenGL.getfp("glGetCompressedTexImage", support: [OpenGL.ss349]), to: Swift.type(of: OpenGL.glGetCompressedTexImage))
    OpenGL.glGetCompressedTexImage(target, level, img)
}
fileprivate 
func _load_glGetCompressedTexImageARB(target:OpenGL.Enum, level:OpenGL.Int, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedTexImageARB = unsafeBitCast(OpenGL.getfp("glGetCompressedTexImageARB", support: [OpenGL.ss94]), to: Swift.type(of: OpenGL.glGetCompressedTexImageARB))
    OpenGL.glGetCompressedTexImageARB(target, level, img)
}
fileprivate 
func _load_glGetCompressedTextureImage(texture:OpenGL.UInt, level:OpenGL.Int, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedTextureImage = unsafeBitCast(OpenGL.getfp("glGetCompressedTextureImage", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetCompressedTextureImage))
    OpenGL.glGetCompressedTextureImage(texture, level, bufSize, pixels)
}
fileprivate 
func _load_glGetCompressedTextureImageEXT(texture:OpenGL.UInt, target:OpenGL.Enum, lod:OpenGL.Int, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedTextureImageEXT = unsafeBitCast(OpenGL.getfp("glGetCompressedTextureImageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetCompressedTextureImageEXT))
    OpenGL.glGetCompressedTextureImageEXT(texture, target, lod, img)
}
fileprivate 
func _load_glGetCompressedTextureSubImage(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetCompressedTextureSubImage = unsafeBitCast(OpenGL.getfp("glGetCompressedTextureSubImage", support: [OpenGL.ss363, OpenGL.ss56]), to: Swift.type(of: OpenGL.glGetCompressedTextureSubImage))
    OpenGL.glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
}
fileprivate 
func _load_glGetConvolutionFilter(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeMutableRawPointer?)
{
    OpenGL.glGetConvolutionFilter = unsafeBitCast(OpenGL.getfp("glGetConvolutionFilter", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetConvolutionFilter))
    OpenGL.glGetConvolutionFilter(target, format, type, image)
}
fileprivate 
func _load_glGetConvolutionFilterEXT(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, image:UnsafeMutableRawPointer?)
{
    OpenGL.glGetConvolutionFilterEXT = unsafeBitCast(OpenGL.getfp("glGetConvolutionFilterEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glGetConvolutionFilterEXT))
    OpenGL.glGetConvolutionFilterEXT(target, format, type, image)
}
fileprivate 
func _load_glGetConvolutionParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetConvolutionParameterfv = unsafeBitCast(OpenGL.getfp("glGetConvolutionParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetConvolutionParameterfv))
    OpenGL.glGetConvolutionParameterfv(target, pname, params)
}
fileprivate 
func _load_glGetConvolutionParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetConvolutionParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetConvolutionParameterfvEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glGetConvolutionParameterfvEXT))
    OpenGL.glGetConvolutionParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glGetConvolutionParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetConvolutionParameteriv = unsafeBitCast(OpenGL.getfp("glGetConvolutionParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetConvolutionParameteriv))
    OpenGL.glGetConvolutionParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetConvolutionParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetConvolutionParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetConvolutionParameterivEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glGetConvolutionParameterivEXT))
    OpenGL.glGetConvolutionParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetConvolutionParameterxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetConvolutionParameterxvOES = unsafeBitCast(OpenGL.getfp("glGetConvolutionParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetConvolutionParameterxvOES))
    OpenGL.glGetConvolutionParameterxvOES(target, pname, params)
}
fileprivate 
func _load_glGetCoverageModulationTableNV(bufsize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetCoverageModulationTableNV = unsafeBitCast(OpenGL.getfp("glGetCoverageModulationTableNV", support: [OpenGL.ss247]), to: Swift.type(of: OpenGL.glGetCoverageModulationTableNV))
    OpenGL.glGetCoverageModulationTableNV(bufsize, v)
}
fileprivate 
func _load_glGetDebugMessageLog(count:OpenGL.UInt, bufSize:OpenGL.Size, sources:UnsafeMutablePointer<OpenGL.Enum>?, types:UnsafeMutablePointer<OpenGL.Enum>?, ids:UnsafeMutablePointer<OpenGL.UInt>?, severities:UnsafeMutablePointer<OpenGL.Enum>?, lengths:UnsafeMutablePointer<OpenGL.Size>?, messageLog:UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetDebugMessageLog = unsafeBitCast(OpenGL.getfp("glGetDebugMessageLog", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetDebugMessageLog))
    return OpenGL.glGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
fileprivate 
func _load_glGetDebugMessageLogAMD(count:OpenGL.UInt, bufsize:OpenGL.Size, categories:UnsafeMutablePointer<OpenGL.Enum>?, severities:UnsafeMutablePointer<OpenGL.UInt>?, ids:UnsafeMutablePointer<OpenGL.UInt>?, lengths:UnsafeMutablePointer<OpenGL.Size>?, message:UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetDebugMessageLogAMD = unsafeBitCast(OpenGL.getfp("glGetDebugMessageLogAMD", support: [OpenGL.ss1]), to: Swift.type(of: OpenGL.glGetDebugMessageLogAMD))
    return OpenGL.glGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message)
}
fileprivate 
func _load_glGetDebugMessageLogARB(count:OpenGL.UInt, bufSize:OpenGL.Size, sources:UnsafeMutablePointer<OpenGL.Enum>?, types:UnsafeMutablePointer<OpenGL.Enum>?, ids:UnsafeMutablePointer<OpenGL.UInt>?, severities:UnsafeMutablePointer<OpenGL.Enum>?, lengths:UnsafeMutablePointer<OpenGL.Size>?, messageLog:UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetDebugMessageLogARB = unsafeBitCast(OpenGL.getfp("glGetDebugMessageLogARB", support: [OpenGL.ss44]), to: Swift.type(of: OpenGL.glGetDebugMessageLogARB))
    return OpenGL.glGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
fileprivate 
func _load_glGetDebugMessageLogKHR(count:OpenGL.UInt, bufSize:OpenGL.Size, sources:UnsafeMutablePointer<OpenGL.Enum>?, types:UnsafeMutablePointer<OpenGL.Enum>?, ids:UnsafeMutablePointer<OpenGL.UInt>?, severities:UnsafeMutablePointer<OpenGL.Enum>?, lengths:UnsafeMutablePointer<OpenGL.Size>?, messageLog:UnsafeMutablePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetDebugMessageLogKHR = unsafeBitCast(OpenGL.getfp("glGetDebugMessageLogKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetDebugMessageLogKHR))
    return OpenGL.glGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
fileprivate 
func _load_glGetDetailTexFuncSGIS(target:OpenGL.Enum, points:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetDetailTexFuncSGIS = unsafeBitCast(OpenGL.getfp("glGetDetailTexFuncSGIS", support: [OpenGL.ss319]), to: Swift.type(of: OpenGL.glGetDetailTexFuncSGIS))
    OpenGL.glGetDetailTexFuncSGIS(target, points)
}
fileprivate 
func _load_glGetDoubleIndexedvEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetDoubleIndexedvEXT = unsafeBitCast(OpenGL.getfp("glGetDoubleIndexedvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetDoubleIndexedvEXT))
    OpenGL.glGetDoubleIndexedvEXT(target, index, data)
}
fileprivate 
func _load_glGetDoublei_v(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetDoublei_v = unsafeBitCast(OpenGL.getfp("glGetDoublei_v", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glGetDoublei_v))
    OpenGL.glGetDoublei_v(target, index, data)
}
fileprivate 
func _load_glGetDoublei_vEXT(pname:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetDoublei_vEXT = unsafeBitCast(OpenGL.getfp("glGetDoublei_vEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetDoublei_vEXT))
    OpenGL.glGetDoublei_vEXT(pname, index, params)
}
fileprivate 
func _load_glGetDoublev(pname:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetDoublev = unsafeBitCast(OpenGL.getfp("glGetDoublev", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glGetDoublev))
    OpenGL.glGetDoublev(pname, data)
}
fileprivate 
func _load_glGetDriverControlStringQCOM(driverControl:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, driverControlString:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetDriverControlStringQCOM = unsafeBitCast(OpenGL.getfp("glGetDriverControlStringQCOM", support: [OpenGL.ss315]), to: Swift.type(of: OpenGL.glGetDriverControlStringQCOM))
    OpenGL.glGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString)
}
fileprivate 
func _load_glGetDriverControlsQCOM(num:UnsafeMutablePointer<OpenGL.Int>?, size:OpenGL.Size, driverControls:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetDriverControlsQCOM = unsafeBitCast(OpenGL.getfp("glGetDriverControlsQCOM", support: [OpenGL.ss315]), to: Swift.type(of: OpenGL.glGetDriverControlsQCOM))
    OpenGL.glGetDriverControlsQCOM(num, size, driverControls)
}
fileprivate 
func _load_glGetError() -> OpenGL.Enum
{
    OpenGL.glGetError = unsafeBitCast(OpenGL.getfp("glGetError", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetError))
    return OpenGL.glGetError()
}
fileprivate 
func _load_glGetFenceivNV(fence:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFenceivNV = unsafeBitCast(OpenGL.getfp("glGetFenceivNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glGetFenceivNV))
    OpenGL.glGetFenceivNV(fence, pname, params)
}
fileprivate 
func _load_glGetFinalCombinerInputParameterfvNV(variable:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFinalCombinerInputParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetFinalCombinerInputParameterfvNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetFinalCombinerInputParameterfvNV))
    OpenGL.glGetFinalCombinerInputParameterfvNV(variable, pname, params)
}
fileprivate 
func _load_glGetFinalCombinerInputParameterivNV(variable:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFinalCombinerInputParameterivNV = unsafeBitCast(OpenGL.getfp("glGetFinalCombinerInputParameterivNV", support: [OpenGL.ss267]), to: Swift.type(of: OpenGL.glGetFinalCombinerInputParameterivNV))
    OpenGL.glGetFinalCombinerInputParameterivNV(variable, pname, params)
}
fileprivate 
func _load_glGetFirstPerfQueryIdINTEL(queryId:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetFirstPerfQueryIdINTEL = unsafeBitCast(OpenGL.getfp("glGetFirstPerfQueryIdINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetFirstPerfQueryIdINTEL))
    OpenGL.glGetFirstPerfQueryIdINTEL(queryId)
}
fileprivate 
func _load_glGetFixedv(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetFixedv = unsafeBitCast(OpenGL.getfp("glGetFixedv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetFixedv))
    OpenGL.glGetFixedv(pname, params)
}
fileprivate 
func _load_glGetFixedvOES(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetFixedvOES = unsafeBitCast(OpenGL.getfp("glGetFixedvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetFixedvOES))
    OpenGL.glGetFixedvOES(pname, params)
}
fileprivate 
func _load_glGetFloatIndexedvEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFloatIndexedvEXT = unsafeBitCast(OpenGL.getfp("glGetFloatIndexedvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetFloatIndexedvEXT))
    OpenGL.glGetFloatIndexedvEXT(target, index, data)
}
fileprivate 
func _load_glGetFloati_v(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFloati_v = unsafeBitCast(OpenGL.getfp("glGetFloati_v", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glGetFloati_v))
    OpenGL.glGetFloati_v(target, index, data)
}
fileprivate 
func _load_glGetFloati_vEXT(pname:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFloati_vEXT = unsafeBitCast(OpenGL.getfp("glGetFloati_vEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetFloati_vEXT))
    OpenGL.glGetFloati_vEXT(pname, index, params)
}
fileprivate 
func _load_glGetFloati_vNV(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFloati_vNV = unsafeBitCast(OpenGL.getfp("glGetFloati_vNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glGetFloati_vNV))
    OpenGL.glGetFloati_vNV(target, index, data)
}
fileprivate 
func _load_glGetFloatv(pname:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFloatv = unsafeBitCast(OpenGL.getfp("glGetFloatv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetFloatv))
    OpenGL.glGetFloatv(pname, data)
}
fileprivate 
func _load_glGetFogFuncSGIS(points:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFogFuncSGIS = unsafeBitCast(OpenGL.getfp("glGetFogFuncSGIS", support: [OpenGL.ss320]), to: Swift.type(of: OpenGL.glGetFogFuncSGIS))
    OpenGL.glGetFogFuncSGIS(points)
}
fileprivate 
func _load_glGetFragDataIndex(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetFragDataIndex = unsafeBitCast(OpenGL.getfp("glGetFragDataIndex", support: [OpenGL.ss357, OpenGL.ss33]), to: Swift.type(of: OpenGL.glGetFragDataIndex))
    return OpenGL.glGetFragDataIndex(program, name)
}
fileprivate 
func _load_glGetFragDataIndexEXT(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetFragDataIndexEXT = unsafeBitCast(OpenGL.getfp("glGetFragDataIndexEXT", support: [OpenGL.ss129]), to: Swift.type(of: OpenGL.glGetFragDataIndexEXT))
    return OpenGL.glGetFragDataIndexEXT(program, name)
}
fileprivate 
func _load_glGetFragDataLocation(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetFragDataLocation = unsafeBitCast(OpenGL.getfp("glGetFragDataLocation", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetFragDataLocation))
    return OpenGL.glGetFragDataLocation(program, name)
}
fileprivate 
func _load_glGetFragDataLocationEXT(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetFragDataLocationEXT = unsafeBitCast(OpenGL.getfp("glGetFragDataLocationEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glGetFragDataLocationEXT))
    return OpenGL.glGetFragDataLocationEXT(program, name)
}
fileprivate 
func _load_glGetFragmentLightfvSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFragmentLightfvSGIX = unsafeBitCast(OpenGL.getfp("glGetFragmentLightfvSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glGetFragmentLightfvSGIX))
    OpenGL.glGetFragmentLightfvSGIX(light, pname, params)
}
fileprivate 
func _load_glGetFragmentLightivSGIX(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFragmentLightivSGIX = unsafeBitCast(OpenGL.getfp("glGetFragmentLightivSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glGetFragmentLightivSGIX))
    OpenGL.glGetFragmentLightivSGIX(light, pname, params)
}
fileprivate 
func _load_glGetFragmentMaterialfvSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetFragmentMaterialfvSGIX = unsafeBitCast(OpenGL.getfp("glGetFragmentMaterialfvSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glGetFragmentMaterialfvSGIX))
    OpenGL.glGetFragmentMaterialfvSGIX(face, pname, params)
}
fileprivate 
func _load_glGetFragmentMaterialivSGIX(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFragmentMaterialivSGIX = unsafeBitCast(OpenGL.getfp("glGetFragmentMaterialivSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glGetFragmentMaterialivSGIX))
    OpenGL.glGetFragmentMaterialivSGIX(face, pname, params)
}
fileprivate 
func _load_glGetFramebufferAttachmentParameteriv(target:OpenGL.Enum, attachment:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFramebufferAttachmentParameteriv = unsafeBitCast(OpenGL.getfp("glGetFramebufferAttachmentParameteriv", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glGetFramebufferAttachmentParameteriv))
    OpenGL.glGetFramebufferAttachmentParameteriv(target, attachment, pname, params)
}
fileprivate 
func _load_glGetFramebufferAttachmentParameterivEXT(target:OpenGL.Enum, attachment:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFramebufferAttachmentParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetFramebufferAttachmentParameterivEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glGetFramebufferAttachmentParameterivEXT))
    OpenGL.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params)
}
fileprivate 
func _load_glGetFramebufferAttachmentParameterivOES(target:OpenGL.Enum, attachment:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFramebufferAttachmentParameterivOES = unsafeBitCast(OpenGL.getfp("glGetFramebufferAttachmentParameterivOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glGetFramebufferAttachmentParameterivOES))
    OpenGL.glGetFramebufferAttachmentParameterivOES(target, attachment, pname, params)
}
fileprivate 
func _load_glGetFramebufferParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFramebufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetFramebufferParameteriv", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss52]), to: Swift.type(of: OpenGL.glGetFramebufferParameteriv))
    OpenGL.glGetFramebufferParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetFramebufferParameterivEXT(framebuffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetFramebufferParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetFramebufferParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetFramebufferParameterivEXT))
    OpenGL.glGetFramebufferParameterivEXT(framebuffer, pname, params)
}
fileprivate 
func _load_glGetGraphicsResetStatus() -> OpenGL.Enum
{
    OpenGL.glGetGraphicsResetStatus = unsafeBitCast(OpenGL.getfp("glGetGraphicsResetStatus", support: [OpenGL.ss363, OpenGL.ss368, OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetGraphicsResetStatus))
    return OpenGL.glGetGraphicsResetStatus()
}
fileprivate 
func _load_glGetGraphicsResetStatusARB() -> OpenGL.Enum
{
    OpenGL.glGetGraphicsResetStatusARB = unsafeBitCast(OpenGL.getfp("glGetGraphicsResetStatusARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetGraphicsResetStatusARB))
    return OpenGL.glGetGraphicsResetStatusARB()
}
fileprivate 
func _load_glGetGraphicsResetStatusEXT() -> OpenGL.Enum
{
    OpenGL.glGetGraphicsResetStatusEXT = unsafeBitCast(OpenGL.getfp("glGetGraphicsResetStatusEXT", support: [OpenGL.ss180]), to: Swift.type(of: OpenGL.glGetGraphicsResetStatusEXT))
    return OpenGL.glGetGraphicsResetStatusEXT()
}
fileprivate 
func _load_glGetGraphicsResetStatusKHR() -> OpenGL.Enum
{
    OpenGL.glGetGraphicsResetStatusKHR = unsafeBitCast(OpenGL.getfp("glGetGraphicsResetStatusKHR", support: [OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetGraphicsResetStatusKHR))
    return OpenGL.glGetGraphicsResetStatusKHR()
}
fileprivate 
func _load_glGetHandleARB(pname:OpenGL.Enum) -> OpenGL.HandleARB
{
    OpenGL.glGetHandleARB = unsafeBitCast(OpenGL.getfp("glGetHandleARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetHandleARB))
    return OpenGL.glGetHandleARB(pname)
}
fileprivate 
func _load_glGetHistogram(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetHistogram = unsafeBitCast(OpenGL.getfp("glGetHistogram", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetHistogram))
    OpenGL.glGetHistogram(target, reset, format, type, values)
}
fileprivate 
func _load_glGetHistogramEXT(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetHistogramEXT = unsafeBitCast(OpenGL.getfp("glGetHistogramEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetHistogramEXT))
    OpenGL.glGetHistogramEXT(target, reset, format, type, values)
}
fileprivate 
func _load_glGetHistogramParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetHistogramParameterfv = unsafeBitCast(OpenGL.getfp("glGetHistogramParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetHistogramParameterfv))
    OpenGL.glGetHistogramParameterfv(target, pname, params)
}
fileprivate 
func _load_glGetHistogramParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetHistogramParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetHistogramParameterfvEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetHistogramParameterfvEXT))
    OpenGL.glGetHistogramParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glGetHistogramParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetHistogramParameteriv = unsafeBitCast(OpenGL.getfp("glGetHistogramParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetHistogramParameteriv))
    OpenGL.glGetHistogramParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetHistogramParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetHistogramParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetHistogramParameterivEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetHistogramParameterivEXT))
    OpenGL.glGetHistogramParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetHistogramParameterxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetHistogramParameterxvOES = unsafeBitCast(OpenGL.getfp("glGetHistogramParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetHistogramParameterxvOES))
    OpenGL.glGetHistogramParameterxvOES(target, pname, params)
}
fileprivate 
func _load_glGetImageHandleARB(texture:OpenGL.UInt, level:OpenGL.Int, layered:OpenGL.Bool, layer:OpenGL.Int, format:OpenGL.Enum) -> OpenGL.UInt64
{
    OpenGL.glGetImageHandleARB = unsafeBitCast(OpenGL.getfp("glGetImageHandleARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glGetImageHandleARB))
    return OpenGL.glGetImageHandleARB(texture, level, layered, layer, format)
}
fileprivate 
func _load_glGetImageHandleNV(texture:OpenGL.UInt, level:OpenGL.Int, layered:OpenGL.Bool, layer:OpenGL.Int, format:OpenGL.Enum) -> OpenGL.UInt64
{
    OpenGL.glGetImageHandleNV = unsafeBitCast(OpenGL.getfp("glGetImageHandleNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glGetImageHandleNV))
    return OpenGL.glGetImageHandleNV(texture, level, layered, layer, format)
}
fileprivate 
func _load_glGetImageTransformParameterfvHP(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetImageTransformParameterfvHP = unsafeBitCast(OpenGL.getfp("glGetImageTransformParameterfvHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glGetImageTransformParameterfvHP))
    OpenGL.glGetImageTransformParameterfvHP(target, pname, params)
}
fileprivate 
func _load_glGetImageTransformParameterivHP(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetImageTransformParameterivHP = unsafeBitCast(OpenGL.getfp("glGetImageTransformParameterivHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glGetImageTransformParameterivHP))
    OpenGL.glGetImageTransformParameterivHP(target, pname, params)
}
fileprivate 
func _load_glGetInfoLogARB(obj:OpenGL.HandleARB, maxLength:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, infoLog:UnsafeMutablePointer<OpenGL.CharARB>?)
{
    OpenGL.glGetInfoLogARB = unsafeBitCast(OpenGL.getfp("glGetInfoLogARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetInfoLogARB))
    OpenGL.glGetInfoLogARB(obj, maxLength, length, infoLog)
}
fileprivate 
func _load_glGetInstrumentsSGIX() -> OpenGL.Int
{
    OpenGL.glGetInstrumentsSGIX = unsafeBitCast(OpenGL.getfp("glGetInstrumentsSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glGetInstrumentsSGIX))
    return OpenGL.glGetInstrumentsSGIX()
}
fileprivate 
func _load_glGetInteger64i_v(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetInteger64i_v = unsafeBitCast(OpenGL.getfp("glGetInteger64i_v", support: [OpenGL.ss356, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetInteger64i_v))
    OpenGL.glGetInteger64i_v(target, index, data)
}
fileprivate 
func _load_glGetInteger64v(pname:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetInteger64v = unsafeBitCast(OpenGL.getfp("glGetInteger64v", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glGetInteger64v))
    OpenGL.glGetInteger64v(pname, data)
}
fileprivate 
func _load_glGetInteger64vAPPLE(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetInteger64vAPPLE = unsafeBitCast(OpenGL.getfp("glGetInteger64vAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glGetInteger64vAPPLE))
    OpenGL.glGetInteger64vAPPLE(pname, params)
}
fileprivate 
func _load_glGetIntegerIndexedvEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetIntegerIndexedvEXT = unsafeBitCast(OpenGL.getfp("glGetIntegerIndexedvEXT", support: [OpenGL.ss143, OpenGL.ss147]), to: Swift.type(of: OpenGL.glGetIntegerIndexedvEXT))
    OpenGL.glGetIntegerIndexedvEXT(target, index, data)
}
fileprivate 
func _load_glGetIntegeri_v(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetIntegeri_v = unsafeBitCast(OpenGL.getfp("glGetIntegeri_v", support: [OpenGL.ss354, OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetIntegeri_v))
    OpenGL.glGetIntegeri_v(target, index, data)
}
fileprivate 
func _load_glGetIntegeri_vEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetIntegeri_vEXT = unsafeBitCast(OpenGL.getfp("glGetIntegeri_vEXT", support: [OpenGL.ss170]), to: Swift.type(of: OpenGL.glGetIntegeri_vEXT))
    OpenGL.glGetIntegeri_vEXT(target, index, data)
}
fileprivate 
func _load_glGetIntegerui64i_vNV(value:OpenGL.Enum, index:OpenGL.UInt, result:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetIntegerui64i_vNV = unsafeBitCast(OpenGL.getfp("glGetIntegerui64i_vNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glGetIntegerui64i_vNV))
    OpenGL.glGetIntegerui64i_vNV(value, index, result)
}
fileprivate 
func _load_glGetIntegerui64vNV(value:OpenGL.Enum, result:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetIntegerui64vNV = unsafeBitCast(OpenGL.getfp("glGetIntegerui64vNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glGetIntegerui64vNV))
    OpenGL.glGetIntegerui64vNV(value, result)
}
fileprivate 
func _load_glGetIntegerv(pname:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetIntegerv = unsafeBitCast(OpenGL.getfp("glGetIntegerv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetIntegerv))
    OpenGL.glGetIntegerv(pname, data)
}
fileprivate 
func _load_glGetInternalformatSampleivNV(target:OpenGL.Enum, internalformat:OpenGL.Enum, samples:OpenGL.Size, pname:OpenGL.Enum, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetInternalformatSampleivNV = unsafeBitCast(OpenGL.getfp("glGetInternalformatSampleivNV", support: [OpenGL.ss256]), to: Swift.type(of: OpenGL.glGetInternalformatSampleivNV))
    OpenGL.glGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params)
}
fileprivate 
func _load_glGetInternalformati64v(target:OpenGL.Enum, internalformat:OpenGL.Enum, pname:OpenGL.Enum, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetInternalformati64v = unsafeBitCast(OpenGL.getfp("glGetInternalformati64v", support: [OpenGL.ss361, OpenGL.ss63]), to: Swift.type(of: OpenGL.glGetInternalformati64v))
    OpenGL.glGetInternalformati64v(target, internalformat, pname, bufSize, params)
}
fileprivate 
func _load_glGetInternalformativ(target:OpenGL.Enum, internalformat:OpenGL.Enum, pname:OpenGL.Enum, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetInternalformativ = unsafeBitCast(OpenGL.getfp("glGetInternalformativ", support: [OpenGL.ss360, OpenGL.ss366, OpenGL.ss62]), to: Swift.type(of: OpenGL.glGetInternalformativ))
    OpenGL.glGetInternalformativ(target, internalformat, pname, bufSize, params)
}
fileprivate 
func _load_glGetInvariantBooleanvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetInvariantBooleanvEXT = unsafeBitCast(OpenGL.getfp("glGetInvariantBooleanvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetInvariantBooleanvEXT))
    OpenGL.glGetInvariantBooleanvEXT(id, value, data)
}
fileprivate 
func _load_glGetInvariantFloatvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetInvariantFloatvEXT = unsafeBitCast(OpenGL.getfp("glGetInvariantFloatvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetInvariantFloatvEXT))
    OpenGL.glGetInvariantFloatvEXT(id, value, data)
}
fileprivate 
func _load_glGetInvariantIntegervEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetInvariantIntegervEXT = unsafeBitCast(OpenGL.getfp("glGetInvariantIntegervEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetInvariantIntegervEXT))
    OpenGL.glGetInvariantIntegervEXT(id, value, data)
}
fileprivate 
func _load_glGetLightfv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetLightfv = unsafeBitCast(OpenGL.getfp("glGetLightfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetLightfv))
    OpenGL.glGetLightfv(light, pname, params)
}
fileprivate 
func _load_glGetLightiv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetLightiv = unsafeBitCast(OpenGL.getfp("glGetLightiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetLightiv))
    OpenGL.glGetLightiv(light, pname, params)
}
fileprivate 
func _load_glGetLightxOES(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetLightxOES = unsafeBitCast(OpenGL.getfp("glGetLightxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetLightxOES))
    OpenGL.glGetLightxOES(light, pname, params)
}
fileprivate 
func _load_glGetLightxv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetLightxv = unsafeBitCast(OpenGL.getfp("glGetLightxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetLightxv))
    OpenGL.glGetLightxv(light, pname, params)
}
fileprivate 
func _load_glGetLightxvOES(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetLightxvOES = unsafeBitCast(OpenGL.getfp("glGetLightxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetLightxvOES))
    OpenGL.glGetLightxvOES(light, pname, params)
}
fileprivate 
func _load_glGetListParameterfvSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetListParameterfvSGIX = unsafeBitCast(OpenGL.getfp("glGetListParameterfvSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glGetListParameterfvSGIX))
    OpenGL.glGetListParameterfvSGIX(list, pname, params)
}
fileprivate 
func _load_glGetListParameterivSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetListParameterivSGIX = unsafeBitCast(OpenGL.getfp("glGetListParameterivSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glGetListParameterivSGIX))
    OpenGL.glGetListParameterivSGIX(list, pname, params)
}
fileprivate 
func _load_glGetLocalConstantBooleanvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetLocalConstantBooleanvEXT = unsafeBitCast(OpenGL.getfp("glGetLocalConstantBooleanvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetLocalConstantBooleanvEXT))
    OpenGL.glGetLocalConstantBooleanvEXT(id, value, data)
}
fileprivate 
func _load_glGetLocalConstantFloatvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetLocalConstantFloatvEXT = unsafeBitCast(OpenGL.getfp("glGetLocalConstantFloatvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetLocalConstantFloatvEXT))
    OpenGL.glGetLocalConstantFloatvEXT(id, value, data)
}
fileprivate 
func _load_glGetLocalConstantIntegervEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetLocalConstantIntegervEXT = unsafeBitCast(OpenGL.getfp("glGetLocalConstantIntegervEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetLocalConstantIntegervEXT))
    OpenGL.glGetLocalConstantIntegervEXT(id, value, data)
}
fileprivate 
func _load_glGetMapAttribParameterfvNV(target:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMapAttribParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetMapAttribParameterfvNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glGetMapAttribParameterfvNV))
    OpenGL.glGetMapAttribParameterfvNV(target, index, pname, params)
}
fileprivate 
func _load_glGetMapAttribParameterivNV(target:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMapAttribParameterivNV = unsafeBitCast(OpenGL.getfp("glGetMapAttribParameterivNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glGetMapAttribParameterivNV))
    OpenGL.glGetMapAttribParameterivNV(target, index, pname, params)
}
fileprivate 
func _load_glGetMapControlPointsNV(target:OpenGL.Enum, index:OpenGL.UInt, type:OpenGL.Enum, ustride:OpenGL.Size, vstride:OpenGL.Size, packed:OpenGL.Bool, points:UnsafeMutableRawPointer?)
{
    OpenGL.glGetMapControlPointsNV = unsafeBitCast(OpenGL.getfp("glGetMapControlPointsNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glGetMapControlPointsNV))
    OpenGL.glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points)
}
fileprivate 
func _load_glGetMapParameterfvNV(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMapParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetMapParameterfvNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glGetMapParameterfvNV))
    OpenGL.glGetMapParameterfvNV(target, pname, params)
}
fileprivate 
func _load_glGetMapParameterivNV(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMapParameterivNV = unsafeBitCast(OpenGL.getfp("glGetMapParameterivNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glGetMapParameterivNV))
    OpenGL.glGetMapParameterivNV(target, pname, params)
}
fileprivate 
func _load_glGetMapdv(target:OpenGL.Enum, query:OpenGL.Enum, v:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetMapdv = unsafeBitCast(OpenGL.getfp("glGetMapdv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetMapdv))
    OpenGL.glGetMapdv(target, query, v)
}
fileprivate 
func _load_glGetMapfv(target:OpenGL.Enum, query:OpenGL.Enum, v:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMapfv = unsafeBitCast(OpenGL.getfp("glGetMapfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetMapfv))
    OpenGL.glGetMapfv(target, query, v)
}
fileprivate 
func _load_glGetMapiv(target:OpenGL.Enum, query:OpenGL.Enum, v:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMapiv = unsafeBitCast(OpenGL.getfp("glGetMapiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetMapiv))
    OpenGL.glGetMapiv(target, query, v)
}
fileprivate 
func _load_glGetMapxvOES(target:OpenGL.Enum, query:OpenGL.Enum, v:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetMapxvOES = unsafeBitCast(OpenGL.getfp("glGetMapxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetMapxvOES))
    OpenGL.glGetMapxvOES(target, query, v)
}
fileprivate 
func _load_glGetMaterialfv(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMaterialfv = unsafeBitCast(OpenGL.getfp("glGetMaterialfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetMaterialfv))
    OpenGL.glGetMaterialfv(face, pname, params)
}
fileprivate 
func _load_glGetMaterialiv(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMaterialiv = unsafeBitCast(OpenGL.getfp("glGetMaterialiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetMaterialiv))
    OpenGL.glGetMaterialiv(face, pname, params)
}
fileprivate 
func _load_glGetMaterialxOES(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glGetMaterialxOES = unsafeBitCast(OpenGL.getfp("glGetMaterialxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetMaterialxOES))
    OpenGL.glGetMaterialxOES(face, pname, param)
}
fileprivate 
func _load_glGetMaterialxv(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetMaterialxv = unsafeBitCast(OpenGL.getfp("glGetMaterialxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetMaterialxv))
    OpenGL.glGetMaterialxv(face, pname, params)
}
fileprivate 
func _load_glGetMaterialxvOES(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetMaterialxvOES = unsafeBitCast(OpenGL.getfp("glGetMaterialxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetMaterialxvOES))
    OpenGL.glGetMaterialxvOES(face, pname, params)
}
fileprivate 
func _load_glGetMinmax(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetMinmax = unsafeBitCast(OpenGL.getfp("glGetMinmax", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetMinmax))
    OpenGL.glGetMinmax(target, reset, format, type, values)
}
fileprivate 
func _load_glGetMinmaxEXT(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetMinmaxEXT = unsafeBitCast(OpenGL.getfp("glGetMinmaxEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetMinmaxEXT))
    OpenGL.glGetMinmaxEXT(target, reset, format, type, values)
}
fileprivate 
func _load_glGetMinmaxParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMinmaxParameterfv = unsafeBitCast(OpenGL.getfp("glGetMinmaxParameterfv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetMinmaxParameterfv))
    OpenGL.glGetMinmaxParameterfv(target, pname, params)
}
fileprivate 
func _load_glGetMinmaxParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMinmaxParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetMinmaxParameterfvEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetMinmaxParameterfvEXT))
    OpenGL.glGetMinmaxParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glGetMinmaxParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMinmaxParameteriv = unsafeBitCast(OpenGL.getfp("glGetMinmaxParameteriv", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetMinmaxParameteriv))
    OpenGL.glGetMinmaxParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetMinmaxParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMinmaxParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetMinmaxParameterivEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glGetMinmaxParameterivEXT))
    OpenGL.glGetMinmaxParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetMultiTexEnvfvEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultiTexEnvfvEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexEnvfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexEnvfvEXT))
    OpenGL.glGetMultiTexEnvfvEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultiTexEnvivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMultiTexEnvivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexEnvivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexEnvivEXT))
    OpenGL.glGetMultiTexEnvivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultiTexGendvEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetMultiTexGendvEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexGendvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexGendvEXT))
    OpenGL.glGetMultiTexGendvEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glGetMultiTexGenfvEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultiTexGenfvEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexGenfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexGenfvEXT))
    OpenGL.glGetMultiTexGenfvEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glGetMultiTexGenivEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMultiTexGenivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexGenivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexGenivEXT))
    OpenGL.glGetMultiTexGenivEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glGetMultiTexImageEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetMultiTexImageEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexImageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexImageEXT))
    OpenGL.glGetMultiTexImageEXT(texunit, target, level, format, type, pixels)
}
fileprivate 
func _load_glGetMultiTexLevelParameterfvEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultiTexLevelParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexLevelParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexLevelParameterfvEXT))
    OpenGL.glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params)
}
fileprivate 
func _load_glGetMultiTexLevelParameterivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMultiTexLevelParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexLevelParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexLevelParameterivEXT))
    OpenGL.glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params)
}
fileprivate 
func _load_glGetMultiTexParameterIivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMultiTexParameterIivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexParameterIivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexParameterIivEXT))
    OpenGL.glGetMultiTexParameterIivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultiTexParameterIuivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetMultiTexParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexParameterIuivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexParameterIuivEXT))
    OpenGL.glGetMultiTexParameterIuivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultiTexParameterfvEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultiTexParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexParameterfvEXT))
    OpenGL.glGetMultiTexParameterfvEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultiTexParameterivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetMultiTexParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetMultiTexParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetMultiTexParameterivEXT))
    OpenGL.glGetMultiTexParameterivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glGetMultisamplefv(pname:OpenGL.Enum, index:OpenGL.UInt, val:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultisamplefv = unsafeBitCast(OpenGL.getfp("glGetMultisamplefv", support: [OpenGL.ss356, OpenGL.ss367, OpenGL.ss95]), to: Swift.type(of: OpenGL.glGetMultisamplefv))
    OpenGL.glGetMultisamplefv(pname, index, val)
}
fileprivate 
func _load_glGetMultisamplefvNV(pname:OpenGL.Enum, index:OpenGL.UInt, val:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetMultisamplefvNV = unsafeBitCast(OpenGL.getfp("glGetMultisamplefvNV", support: [OpenGL.ss242]), to: Swift.type(of: OpenGL.glGetMultisamplefvNV))
    OpenGL.glGetMultisamplefvNV(pname, index, val)
}
fileprivate 
func _load_glGetNamedBufferParameteri64v(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetNamedBufferParameteri64v = unsafeBitCast(OpenGL.getfp("glGetNamedBufferParameteri64v", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedBufferParameteri64v))
    OpenGL.glGetNamedBufferParameteri64v(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferParameteriv(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedBufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetNamedBufferParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedBufferParameteriv))
    OpenGL.glGetNamedBufferParameteriv(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferParameterivEXT(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedBufferParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedBufferParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedBufferParameterivEXT))
    OpenGL.glGetNamedBufferParameterivEXT(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferParameterui64vNV(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetNamedBufferParameterui64vNV = unsafeBitCast(OpenGL.getfp("glGetNamedBufferParameterui64vNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glGetNamedBufferParameterui64vNV))
    OpenGL.glGetNamedBufferParameterui64vNV(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferPointerv(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetNamedBufferPointerv = unsafeBitCast(OpenGL.getfp("glGetNamedBufferPointerv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedBufferPointerv))
    OpenGL.glGetNamedBufferPointerv(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferPointervEXT(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetNamedBufferPointervEXT = unsafeBitCast(OpenGL.getfp("glGetNamedBufferPointervEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedBufferPointervEXT))
    OpenGL.glGetNamedBufferPointervEXT(buffer, pname, params)
}
fileprivate 
func _load_glGetNamedBufferSubData(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetNamedBufferSubData = unsafeBitCast(OpenGL.getfp("glGetNamedBufferSubData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedBufferSubData))
    OpenGL.glGetNamedBufferSubData(buffer, offset, size, data)
}
fileprivate 
func _load_glGetNamedBufferSubDataEXT(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetNamedBufferSubDataEXT = unsafeBitCast(OpenGL.getfp("glGetNamedBufferSubDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedBufferSubDataEXT))
    OpenGL.glGetNamedBufferSubDataEXT(buffer, offset, size, data)
}
fileprivate 
func _load_glGetNamedFramebufferAttachmentParameteriv(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedFramebufferAttachmentParameteriv = unsafeBitCast(OpenGL.getfp("glGetNamedFramebufferAttachmentParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedFramebufferAttachmentParameteriv))
    OpenGL.glGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params)
}
fileprivate 
func _load_glGetNamedFramebufferAttachmentParameterivEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedFramebufferAttachmentParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedFramebufferAttachmentParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedFramebufferAttachmentParameterivEXT))
    OpenGL.glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params)
}
fileprivate 
func _load_glGetNamedFramebufferParameteriv(framebuffer:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedFramebufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetNamedFramebufferParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedFramebufferParameteriv))
    OpenGL.glGetNamedFramebufferParameteriv(framebuffer, pname, param)
}
fileprivate 
func _load_glGetNamedFramebufferParameterivEXT(framebuffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedFramebufferParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedFramebufferParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedFramebufferParameterivEXT))
    OpenGL.glGetNamedFramebufferParameterivEXT(framebuffer, pname, params)
}
fileprivate 
func _load_glGetNamedProgramLocalParameterIivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedProgramLocalParameterIivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramLocalParameterIivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramLocalParameterIivEXT))
    OpenGL.glGetNamedProgramLocalParameterIivEXT(program, target, index, params)
}
fileprivate 
func _load_glGetNamedProgramLocalParameterIuivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetNamedProgramLocalParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramLocalParameterIuivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramLocalParameterIuivEXT))
    OpenGL.glGetNamedProgramLocalParameterIuivEXT(program, target, index, params)
}
fileprivate 
func _load_glGetNamedProgramLocalParameterdvEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetNamedProgramLocalParameterdvEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramLocalParameterdvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramLocalParameterdvEXT))
    OpenGL.glGetNamedProgramLocalParameterdvEXT(program, target, index, params)
}
fileprivate 
func _load_glGetNamedProgramLocalParameterfvEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetNamedProgramLocalParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramLocalParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramLocalParameterfvEXT))
    OpenGL.glGetNamedProgramLocalParameterfvEXT(program, target, index, params)
}
fileprivate 
func _load_glGetNamedProgramStringEXT(program:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, string:UnsafeMutableRawPointer?)
{
    OpenGL.glGetNamedProgramStringEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramStringEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramStringEXT))
    OpenGL.glGetNamedProgramStringEXT(program, target, pname, string)
}
fileprivate 
func _load_glGetNamedProgramivEXT(program:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedProgramivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedProgramivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedProgramivEXT))
    OpenGL.glGetNamedProgramivEXT(program, target, pname, params)
}
fileprivate 
func _load_glGetNamedRenderbufferParameteriv(renderbuffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedRenderbufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetNamedRenderbufferParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetNamedRenderbufferParameteriv))
    OpenGL.glGetNamedRenderbufferParameteriv(renderbuffer, pname, params)
}
fileprivate 
func _load_glGetNamedRenderbufferParameterivEXT(renderbuffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedRenderbufferParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetNamedRenderbufferParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetNamedRenderbufferParameterivEXT))
    OpenGL.glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params)
}
fileprivate 
func _load_glGetNamedStringARB(namelen:OpenGL.Int, name:UnsafePointer<OpenGL.Char>?, bufSize:OpenGL.Size, stringlen:UnsafeMutablePointer<OpenGL.Int>?, string:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetNamedStringARB = unsafeBitCast(OpenGL.getfp("glGetNamedStringARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glGetNamedStringARB))
    OpenGL.glGetNamedStringARB(namelen, name, bufSize, stringlen, string)
}
fileprivate 
func _load_glGetNamedStringivARB(namelen:OpenGL.Int, name:UnsafePointer<OpenGL.Char>?, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetNamedStringivARB = unsafeBitCast(OpenGL.getfp("glGetNamedStringivARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glGetNamedStringivARB))
    OpenGL.glGetNamedStringivARB(namelen, name, pname, params)
}
fileprivate 
func _load_glGetNextPerfQueryIdINTEL(queryId:OpenGL.UInt, nextQueryId:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetNextPerfQueryIdINTEL = unsafeBitCast(OpenGL.getfp("glGetNextPerfQueryIdINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetNextPerfQueryIdINTEL))
    OpenGL.glGetNextPerfQueryIdINTEL(queryId, nextQueryId)
}
fileprivate 
func _load_glGetObjectBufferfvATI(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetObjectBufferfvATI = unsafeBitCast(OpenGL.getfp("glGetObjectBufferfvATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetObjectBufferfvATI))
    OpenGL.glGetObjectBufferfvATI(buffer, pname, params)
}
fileprivate 
func _load_glGetObjectBufferivATI(buffer:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetObjectBufferivATI = unsafeBitCast(OpenGL.getfp("glGetObjectBufferivATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetObjectBufferivATI))
    OpenGL.glGetObjectBufferivATI(buffer, pname, params)
}
fileprivate 
func _load_glGetObjectLabel(identifier:OpenGL.Enum, name:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, label:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetObjectLabel = unsafeBitCast(OpenGL.getfp("glGetObjectLabel", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetObjectLabel))
    OpenGL.glGetObjectLabel(identifier, name, bufSize, length, label)
}
fileprivate 
func _load_glGetObjectLabelEXT(type:OpenGL.Enum, object:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, label:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetObjectLabelEXT = unsafeBitCast(OpenGL.getfp("glGetObjectLabelEXT", support: [OpenGL.ss140]), to: Swift.type(of: OpenGL.glGetObjectLabelEXT))
    OpenGL.glGetObjectLabelEXT(type, object, bufSize, length, label)
}
fileprivate 
func _load_glGetObjectLabelKHR(identifier:OpenGL.Enum, name:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, label:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetObjectLabelKHR = unsafeBitCast(OpenGL.getfp("glGetObjectLabelKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetObjectLabelKHR))
    OpenGL.glGetObjectLabelKHR(identifier, name, bufSize, length, label)
}
fileprivate 
func _load_glGetObjectParameterfvARB(obj:OpenGL.HandleARB, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetObjectParameterfvARB = unsafeBitCast(OpenGL.getfp("glGetObjectParameterfvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetObjectParameterfvARB))
    OpenGL.glGetObjectParameterfvARB(obj, pname, params)
}
fileprivate 
func _load_glGetObjectParameterivAPPLE(objectType:OpenGL.Enum, name:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetObjectParameterivAPPLE = unsafeBitCast(OpenGL.getfp("glGetObjectParameterivAPPLE", support: [OpenGL.ss22]), to: Swift.type(of: OpenGL.glGetObjectParameterivAPPLE))
    OpenGL.glGetObjectParameterivAPPLE(objectType, name, pname, params)
}
fileprivate 
func _load_glGetObjectParameterivARB(obj:OpenGL.HandleARB, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetObjectParameterivARB = unsafeBitCast(OpenGL.getfp("glGetObjectParameterivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetObjectParameterivARB))
    OpenGL.glGetObjectParameterivARB(obj, pname, params)
}
fileprivate 
func _load_glGetObjectPtrLabel(ptr:UnsafeRawPointer?, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, label:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetObjectPtrLabel = unsafeBitCast(OpenGL.getfp("glGetObjectPtrLabel", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetObjectPtrLabel))
    OpenGL.glGetObjectPtrLabel(ptr, bufSize, length, label)
}
fileprivate 
func _load_glGetObjectPtrLabelKHR(ptr:UnsafeRawPointer?, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, label:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetObjectPtrLabelKHR = unsafeBitCast(OpenGL.getfp("glGetObjectPtrLabelKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetObjectPtrLabelKHR))
    OpenGL.glGetObjectPtrLabelKHR(ptr, bufSize, length, label)
}
fileprivate 
func _load_glGetOcclusionQueryivNV(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetOcclusionQueryivNV = unsafeBitCast(OpenGL.getfp("glGetOcclusionQueryivNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glGetOcclusionQueryivNV))
    OpenGL.glGetOcclusionQueryivNV(id, pname, params)
}
fileprivate 
func _load_glGetOcclusionQueryuivNV(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetOcclusionQueryuivNV = unsafeBitCast(OpenGL.getfp("glGetOcclusionQueryuivNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glGetOcclusionQueryuivNV))
    OpenGL.glGetOcclusionQueryuivNV(id, pname, params)
}
fileprivate 
func _load_glGetPathColorGenfvNV(color:OpenGL.Enum, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathColorGenfvNV = unsafeBitCast(OpenGL.getfp("glGetPathColorGenfvNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathColorGenfvNV))
    OpenGL.glGetPathColorGenfvNV(color, pname, value)
}
fileprivate 
func _load_glGetPathColorGenivNV(color:OpenGL.Enum, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPathColorGenivNV = unsafeBitCast(OpenGL.getfp("glGetPathColorGenivNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathColorGenivNV))
    OpenGL.glGetPathColorGenivNV(color, pname, value)
}
fileprivate 
func _load_glGetPathCommandsNV(path:OpenGL.UInt, commands:UnsafeMutablePointer<OpenGL.UByte>?)
{
    OpenGL.glGetPathCommandsNV = unsafeBitCast(OpenGL.getfp("glGetPathCommandsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathCommandsNV))
    OpenGL.glGetPathCommandsNV(path, commands)
}
fileprivate 
func _load_glGetPathCoordsNV(path:OpenGL.UInt, coords:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathCoordsNV = unsafeBitCast(OpenGL.getfp("glGetPathCoordsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathCoordsNV))
    OpenGL.glGetPathCoordsNV(path, coords)
}
fileprivate 
func _load_glGetPathDashArrayNV(path:OpenGL.UInt, dashArray:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathDashArrayNV = unsafeBitCast(OpenGL.getfp("glGetPathDashArrayNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathDashArrayNV))
    OpenGL.glGetPathDashArrayNV(path, dashArray)
}
fileprivate 
func _load_glGetPathLengthNV(path:OpenGL.UInt, startSegment:OpenGL.Size, numSegments:OpenGL.Size) -> OpenGL.Float
{
    OpenGL.glGetPathLengthNV = unsafeBitCast(OpenGL.getfp("glGetPathLengthNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathLengthNV))
    return OpenGL.glGetPathLengthNV(path, startSegment, numSegments)
}
fileprivate 
func _load_glGetPathMetricRangeNV(metricQueryMask:OpenGL.Bitfield, firstPathName:OpenGL.UInt, numPaths:OpenGL.Size, stride:OpenGL.Size, metrics:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathMetricRangeNV = unsafeBitCast(OpenGL.getfp("glGetPathMetricRangeNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathMetricRangeNV))
    OpenGL.glGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics)
}
fileprivate 
func _load_glGetPathMetricsNV(metricQueryMask:OpenGL.Bitfield, numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, stride:OpenGL.Size, metrics:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathMetricsNV = unsafeBitCast(OpenGL.getfp("glGetPathMetricsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathMetricsNV))
    OpenGL.glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
}
fileprivate 
func _load_glGetPathParameterfvNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetPathParameterfvNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathParameterfvNV))
    OpenGL.glGetPathParameterfvNV(path, pname, value)
}
fileprivate 
func _load_glGetPathParameterivNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPathParameterivNV = unsafeBitCast(OpenGL.getfp("glGetPathParameterivNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathParameterivNV))
    OpenGL.glGetPathParameterivNV(path, pname, value)
}
fileprivate 
func _load_glGetPathSpacingNV(pathListMode:OpenGL.Enum, numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, advanceScale:OpenGL.Float, kerningScale:OpenGL.Float, transformType:OpenGL.Enum, returnedSpacing:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathSpacingNV = unsafeBitCast(OpenGL.getfp("glGetPathSpacingNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathSpacingNV))
    OpenGL.glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
}
fileprivate 
func _load_glGetPathTexGenfvNV(texCoordSet:OpenGL.Enum, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPathTexGenfvNV = unsafeBitCast(OpenGL.getfp("glGetPathTexGenfvNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathTexGenfvNV))
    OpenGL.glGetPathTexGenfvNV(texCoordSet, pname, value)
}
fileprivate 
func _load_glGetPathTexGenivNV(texCoordSet:OpenGL.Enum, pname:OpenGL.Enum, value:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPathTexGenivNV = unsafeBitCast(OpenGL.getfp("glGetPathTexGenivNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetPathTexGenivNV))
    OpenGL.glGetPathTexGenivNV(texCoordSet, pname, value)
}
fileprivate 
func _load_glGetPerfCounterInfoINTEL(queryId:OpenGL.UInt, counterId:OpenGL.UInt, counterNameLength:OpenGL.UInt, counterName:UnsafeMutablePointer<OpenGL.Char>?, counterDescLength:OpenGL.UInt, counterDesc:UnsafeMutablePointer<OpenGL.Char>?, counterOffset:UnsafeMutablePointer<OpenGL.UInt>?, counterDataSize:UnsafeMutablePointer<OpenGL.UInt>?, counterTypeEnum:UnsafeMutablePointer<OpenGL.UInt>?, counterDataTypeEnum:UnsafeMutablePointer<OpenGL.UInt>?, rawCounterMaxValue:UnsafeMutablePointer<OpenGL.UInt64>?)
{
    OpenGL.glGetPerfCounterInfoINTEL = unsafeBitCast(OpenGL.getfp("glGetPerfCounterInfoINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetPerfCounterInfoINTEL))
    OpenGL.glGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
}
fileprivate 
func _load_glGetPerfMonitorCounterDataAMD(monitor:OpenGL.UInt, pname:OpenGL.Enum, dataSize:OpenGL.Size, data:UnsafeMutablePointer<OpenGL.UInt>?, bytesWritten:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPerfMonitorCounterDataAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorCounterDataAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorCounterDataAMD))
    OpenGL.glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten)
}
fileprivate 
func _load_glGetPerfMonitorCounterInfoAMD(group:OpenGL.UInt, counter:OpenGL.UInt, pname:OpenGL.Enum, data:UnsafeMutableRawPointer?)
{
    OpenGL.glGetPerfMonitorCounterInfoAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorCounterInfoAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorCounterInfoAMD))
    OpenGL.glGetPerfMonitorCounterInfoAMD(group, counter, pname, data)
}
fileprivate 
func _load_glGetPerfMonitorCounterStringAMD(group:OpenGL.UInt, counter:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, counterString:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetPerfMonitorCounterStringAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorCounterStringAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorCounterStringAMD))
    OpenGL.glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString)
}
fileprivate 
func _load_glGetPerfMonitorCountersAMD(group:OpenGL.UInt, numCounters:UnsafeMutablePointer<OpenGL.Int>?, maxActiveCounters:UnsafeMutablePointer<OpenGL.Int>?, counterSize:OpenGL.Size, counters:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPerfMonitorCountersAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorCountersAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorCountersAMD))
    OpenGL.glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters)
}
fileprivate 
func _load_glGetPerfMonitorGroupStringAMD(group:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, groupString:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetPerfMonitorGroupStringAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorGroupStringAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorGroupStringAMD))
    OpenGL.glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString)
}
fileprivate 
func _load_glGetPerfMonitorGroupsAMD(numGroups:UnsafeMutablePointer<OpenGL.Int>?, groupsSize:OpenGL.Size, groups:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPerfMonitorGroupsAMD = unsafeBitCast(OpenGL.getfp("glGetPerfMonitorGroupsAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glGetPerfMonitorGroupsAMD))
    OpenGL.glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups)
}
fileprivate 
func _load_glGetPerfQueryDataINTEL(queryHandle:OpenGL.UInt, flags:OpenGL.UInt, dataSize:OpenGL.Size, data:UnsafeMutableRawPointer?, bytesWritten:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPerfQueryDataINTEL = unsafeBitCast(OpenGL.getfp("glGetPerfQueryDataINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetPerfQueryDataINTEL))
    OpenGL.glGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten)
}
fileprivate 
func _load_glGetPerfQueryIdByNameINTEL(queryName:UnsafeMutablePointer<OpenGL.Char>?, queryId:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPerfQueryIdByNameINTEL = unsafeBitCast(OpenGL.getfp("glGetPerfQueryIdByNameINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetPerfQueryIdByNameINTEL))
    OpenGL.glGetPerfQueryIdByNameINTEL(queryName, queryId)
}
fileprivate 
func _load_glGetPerfQueryInfoINTEL(queryId:OpenGL.UInt, queryNameLength:OpenGL.UInt, queryName:UnsafeMutablePointer<OpenGL.Char>?, dataSize:UnsafeMutablePointer<OpenGL.UInt>?, noCounters:UnsafeMutablePointer<OpenGL.UInt>?, noInstances:UnsafeMutablePointer<OpenGL.UInt>?, capsMask:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPerfQueryInfoINTEL = unsafeBitCast(OpenGL.getfp("glGetPerfQueryInfoINTEL", support: [OpenGL.ss219]), to: Swift.type(of: OpenGL.glGetPerfQueryInfoINTEL))
    OpenGL.glGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
}
fileprivate 
func _load_glGetPixelMapfv(map:OpenGL.Enum, values:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPixelMapfv = unsafeBitCast(OpenGL.getfp("glGetPixelMapfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetPixelMapfv))
    OpenGL.glGetPixelMapfv(map, values)
}
fileprivate 
func _load_glGetPixelMapuiv(map:OpenGL.Enum, values:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetPixelMapuiv = unsafeBitCast(OpenGL.getfp("glGetPixelMapuiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetPixelMapuiv))
    OpenGL.glGetPixelMapuiv(map, values)
}
fileprivate 
func _load_glGetPixelMapusv(map:OpenGL.Enum, values:UnsafeMutablePointer<OpenGL.UShort>?)
{
    OpenGL.glGetPixelMapusv = unsafeBitCast(OpenGL.getfp("glGetPixelMapusv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetPixelMapusv))
    OpenGL.glGetPixelMapusv(map, values)
}
fileprivate 
func _load_glGetPixelMapxv(map:OpenGL.Enum, size:OpenGL.Int, values:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetPixelMapxv = unsafeBitCast(OpenGL.getfp("glGetPixelMapxv", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetPixelMapxv))
    OpenGL.glGetPixelMapxv(map, size, values)
}
fileprivate 
func _load_glGetPixelTexGenParameterfvSGIS(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPixelTexGenParameterfvSGIS = unsafeBitCast(OpenGL.getfp("glGetPixelTexGenParameterfvSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glGetPixelTexGenParameterfvSGIS))
    OpenGL.glGetPixelTexGenParameterfvSGIS(pname, params)
}
fileprivate 
func _load_glGetPixelTexGenParameterivSGIS(pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPixelTexGenParameterivSGIS = unsafeBitCast(OpenGL.getfp("glGetPixelTexGenParameterivSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glGetPixelTexGenParameterivSGIS))
    OpenGL.glGetPixelTexGenParameterivSGIS(pname, params)
}
fileprivate 
func _load_glGetPixelTransformParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetPixelTransformParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetPixelTransformParameterfvEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glGetPixelTransformParameterfvEXT))
    OpenGL.glGetPixelTransformParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glGetPixelTransformParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetPixelTransformParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetPixelTransformParameterivEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glGetPixelTransformParameterivEXT))
    OpenGL.glGetPixelTransformParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetPointerIndexedvEXT(target:OpenGL.Enum, index:OpenGL.UInt, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetPointerIndexedvEXT = unsafeBitCast(OpenGL.getfp("glGetPointerIndexedvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetPointerIndexedvEXT))
    OpenGL.glGetPointerIndexedvEXT(target, index, data)
}
fileprivate 
func _load_glGetPointeri_vEXT(pname:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetPointeri_vEXT = unsafeBitCast(OpenGL.getfp("glGetPointeri_vEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetPointeri_vEXT))
    OpenGL.glGetPointeri_vEXT(pname, index, params)
}
fileprivate 
func _load_glGetPointerv(pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetPointerv = unsafeBitCast(OpenGL.getfp("glGetPointerv", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss361, OpenGL.ss361, OpenGL.ss364, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetPointerv))
    OpenGL.glGetPointerv(pname, params)
}
fileprivate 
func _load_glGetPointervEXT(pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetPointervEXT = unsafeBitCast(OpenGL.getfp("glGetPointervEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glGetPointervEXT))
    OpenGL.glGetPointervEXT(pname, params)
}
fileprivate 
func _load_glGetPointervKHR(pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetPointervKHR = unsafeBitCast(OpenGL.getfp("glGetPointervKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glGetPointervKHR))
    OpenGL.glGetPointervKHR(pname, params)
}
fileprivate 
func _load_glGetPolygonStipple(mask:UnsafeMutablePointer<OpenGL.UByte>?)
{
    OpenGL.glGetPolygonStipple = unsafeBitCast(OpenGL.getfp("glGetPolygonStipple", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetPolygonStipple))
    OpenGL.glGetPolygonStipple(mask)
}
fileprivate 
func _load_glGetProgramBinary(program:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, binaryFormat:UnsafeMutablePointer<OpenGL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    OpenGL.glGetProgramBinary = unsafeBitCast(OpenGL.getfp("glGetProgramBinary", support: [OpenGL.ss359, OpenGL.ss366, OpenGL.ss55]), to: Swift.type(of: OpenGL.glGetProgramBinary))
    OpenGL.glGetProgramBinary(program, bufSize, length, binaryFormat, binary)
}
fileprivate 
func _load_glGetProgramBinaryOES(program:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, binaryFormat:UnsafeMutablePointer<OpenGL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    OpenGL.glGetProgramBinaryOES = unsafeBitCast(OpenGL.getfp("glGetProgramBinaryOES", support: [OpenGL.ss295]), to: Swift.type(of: OpenGL.glGetProgramBinaryOES))
    OpenGL.glGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary)
}
fileprivate 
func _load_glGetProgramEnvParameterIivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramEnvParameterIivNV = unsafeBitCast(OpenGL.getfp("glGetProgramEnvParameterIivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glGetProgramEnvParameterIivNV))
    OpenGL.glGetProgramEnvParameterIivNV(target, index, params)
}
fileprivate 
func _load_glGetProgramEnvParameterIuivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetProgramEnvParameterIuivNV = unsafeBitCast(OpenGL.getfp("glGetProgramEnvParameterIuivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glGetProgramEnvParameterIuivNV))
    OpenGL.glGetProgramEnvParameterIuivNV(target, index, params)
}
fileprivate 
func _load_glGetProgramEnvParameterdvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetProgramEnvParameterdvARB = unsafeBitCast(OpenGL.getfp("glGetProgramEnvParameterdvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramEnvParameterdvARB))
    OpenGL.glGetProgramEnvParameterdvARB(target, index, params)
}
fileprivate 
func _load_glGetProgramEnvParameterfvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetProgramEnvParameterfvARB = unsafeBitCast(OpenGL.getfp("glGetProgramEnvParameterfvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramEnvParameterfvARB))
    OpenGL.glGetProgramEnvParameterfvARB(target, index, params)
}
fileprivate 
func _load_glGetProgramInfoLog(program:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, infoLog:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetProgramInfoLog = unsafeBitCast(OpenGL.getfp("glGetProgramInfoLog", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetProgramInfoLog))
    OpenGL.glGetProgramInfoLog(program, bufSize, length, infoLog)
}
fileprivate 
func _load_glGetProgramInterfaceiv(program:OpenGL.UInt, programInterface:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramInterfaceiv = unsafeBitCast(OpenGL.getfp("glGetProgramInterfaceiv", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramInterfaceiv))
    OpenGL.glGetProgramInterfaceiv(program, programInterface, pname, params)
}
fileprivate 
func _load_glGetProgramLocalParameterIivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramLocalParameterIivNV = unsafeBitCast(OpenGL.getfp("glGetProgramLocalParameterIivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glGetProgramLocalParameterIivNV))
    OpenGL.glGetProgramLocalParameterIivNV(target, index, params)
}
fileprivate 
func _load_glGetProgramLocalParameterIuivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetProgramLocalParameterIuivNV = unsafeBitCast(OpenGL.getfp("glGetProgramLocalParameterIuivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glGetProgramLocalParameterIuivNV))
    OpenGL.glGetProgramLocalParameterIuivNV(target, index, params)
}
fileprivate 
func _load_glGetProgramLocalParameterdvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetProgramLocalParameterdvARB = unsafeBitCast(OpenGL.getfp("glGetProgramLocalParameterdvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramLocalParameterdvARB))
    OpenGL.glGetProgramLocalParameterdvARB(target, index, params)
}
fileprivate 
func _load_glGetProgramLocalParameterfvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetProgramLocalParameterfvARB = unsafeBitCast(OpenGL.getfp("glGetProgramLocalParameterfvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramLocalParameterfvARB))
    OpenGL.glGetProgramLocalParameterfvARB(target, index, params)
}
fileprivate 
func _load_glGetProgramNamedParameterdvNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetProgramNamedParameterdvNV = unsafeBitCast(OpenGL.getfp("glGetProgramNamedParameterdvNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glGetProgramNamedParameterdvNV))
    OpenGL.glGetProgramNamedParameterdvNV(id, len, name, params)
}
fileprivate 
func _load_glGetProgramNamedParameterfvNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetProgramNamedParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetProgramNamedParameterfvNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glGetProgramNamedParameterfvNV))
    OpenGL.glGetProgramNamedParameterfvNV(id, len, name, params)
}
fileprivate 
func _load_glGetProgramParameterdvNV(target:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetProgramParameterdvNV = unsafeBitCast(OpenGL.getfp("glGetProgramParameterdvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetProgramParameterdvNV))
    OpenGL.glGetProgramParameterdvNV(target, index, pname, params)
}
fileprivate 
func _load_glGetProgramParameterfvNV(target:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetProgramParameterfvNV = unsafeBitCast(OpenGL.getfp("glGetProgramParameterfvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetProgramParameterfvNV))
    OpenGL.glGetProgramParameterfvNV(target, index, pname, params)
}
fileprivate 
func _load_glGetProgramPipelineInfoLog(pipeline:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, infoLog:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetProgramPipelineInfoLog = unsafeBitCast(OpenGL.getfp("glGetProgramPipelineInfoLog", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glGetProgramPipelineInfoLog))
    OpenGL.glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog)
}
fileprivate 
func _load_glGetProgramPipelineInfoLogEXT(pipeline:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, infoLog:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetProgramPipelineInfoLogEXT = unsafeBitCast(OpenGL.getfp("glGetProgramPipelineInfoLogEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glGetProgramPipelineInfoLogEXT))
    OpenGL.glGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog)
}
fileprivate 
func _load_glGetProgramPipelineiv(pipeline:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramPipelineiv = unsafeBitCast(OpenGL.getfp("glGetProgramPipelineiv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glGetProgramPipelineiv))
    OpenGL.glGetProgramPipelineiv(pipeline, pname, params)
}
fileprivate 
func _load_glGetProgramPipelineivEXT(pipeline:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramPipelineivEXT = unsafeBitCast(OpenGL.getfp("glGetProgramPipelineivEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glGetProgramPipelineivEXT))
    OpenGL.glGetProgramPipelineivEXT(pipeline, pname, params)
}
fileprivate 
func _load_glGetProgramResourceIndex(program:OpenGL.UInt, programInterface:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetProgramResourceIndex = unsafeBitCast(OpenGL.getfp("glGetProgramResourceIndex", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramResourceIndex))
    return OpenGL.glGetProgramResourceIndex(program, programInterface, name)
}
fileprivate 
func _load_glGetProgramResourceLocation(program:OpenGL.UInt, programInterface:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetProgramResourceLocation = unsafeBitCast(OpenGL.getfp("glGetProgramResourceLocation", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramResourceLocation))
    return OpenGL.glGetProgramResourceLocation(program, programInterface, name)
}
fileprivate 
func _load_glGetProgramResourceLocationIndex(program:OpenGL.UInt, programInterface:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetProgramResourceLocationIndex = unsafeBitCast(OpenGL.getfp("glGetProgramResourceLocationIndex", support: [OpenGL.ss361, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramResourceLocationIndex))
    return OpenGL.glGetProgramResourceLocationIndex(program, programInterface, name)
}
fileprivate 
func _load_glGetProgramResourceLocationIndexEXT(program:OpenGL.UInt, programInterface:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetProgramResourceLocationIndexEXT = unsafeBitCast(OpenGL.getfp("glGetProgramResourceLocationIndexEXT", support: [OpenGL.ss129]), to: Swift.type(of: OpenGL.glGetProgramResourceLocationIndexEXT))
    return OpenGL.glGetProgramResourceLocationIndexEXT(program, programInterface, name)
}
fileprivate 
func _load_glGetProgramResourceName(program:OpenGL.UInt, programInterface:OpenGL.Enum, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetProgramResourceName = unsafeBitCast(OpenGL.getfp("glGetProgramResourceName", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramResourceName))
    OpenGL.glGetProgramResourceName(program, programInterface, index, bufSize, length, name)
}
fileprivate 
func _load_glGetProgramResourcefvNV(program:OpenGL.UInt, programInterface:OpenGL.Enum, index:OpenGL.UInt, propCount:OpenGL.Size, props:UnsafePointer<OpenGL.Enum>?, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetProgramResourcefvNV = unsafeBitCast(OpenGL.getfp("glGetProgramResourcefvNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glGetProgramResourcefvNV))
    OpenGL.glGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params)
}
fileprivate 
func _load_glGetProgramResourceiv(program:OpenGL.UInt, programInterface:OpenGL.Enum, index:OpenGL.UInt, propCount:OpenGL.Size, props:UnsafePointer<OpenGL.Enum>?, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramResourceiv = unsafeBitCast(OpenGL.getfp("glGetProgramResourceiv", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss74]), to: Swift.type(of: OpenGL.glGetProgramResourceiv))
    OpenGL.glGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params)
}
fileprivate 
func _load_glGetProgramStageiv(program:OpenGL.UInt, shadertype:OpenGL.Enum, pname:OpenGL.Enum, values:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramStageiv = unsafeBitCast(OpenGL.getfp("glGetProgramStageiv", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetProgramStageiv))
    OpenGL.glGetProgramStageiv(program, shadertype, pname, values)
}
fileprivate 
func _load_glGetProgramStringARB(target:OpenGL.Enum, pname:OpenGL.Enum, string:UnsafeMutableRawPointer?)
{
    OpenGL.glGetProgramStringARB = unsafeBitCast(OpenGL.getfp("glGetProgramStringARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramStringARB))
    OpenGL.glGetProgramStringARB(target, pname, string)
}
fileprivate 
func _load_glGetProgramStringNV(id:OpenGL.UInt, pname:OpenGL.Enum, program:UnsafeMutablePointer<OpenGL.UByte>?)
{
    OpenGL.glGetProgramStringNV = unsafeBitCast(OpenGL.getfp("glGetProgramStringNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetProgramStringNV))
    OpenGL.glGetProgramStringNV(id, pname, program)
}
fileprivate 
func _load_glGetProgramSubroutineParameteruivNV(target:OpenGL.Enum, index:OpenGL.UInt, param:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetProgramSubroutineParameteruivNV = unsafeBitCast(OpenGL.getfp("glGetProgramSubroutineParameteruivNV", support: [OpenGL.ss252]), to: Swift.type(of: OpenGL.glGetProgramSubroutineParameteruivNV))
    OpenGL.glGetProgramSubroutineParameteruivNV(target, index, param)
}
fileprivate 
func _load_glGetProgramiv(program:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramiv = unsafeBitCast(OpenGL.getfp("glGetProgramiv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetProgramiv))
    OpenGL.glGetProgramiv(program, pname, params)
}
fileprivate 
func _load_glGetProgramivARB(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramivARB = unsafeBitCast(OpenGL.getfp("glGetProgramivARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glGetProgramivARB))
    OpenGL.glGetProgramivARB(target, pname, params)
}
fileprivate 
func _load_glGetProgramivNV(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetProgramivNV = unsafeBitCast(OpenGL.getfp("glGetProgramivNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetProgramivNV))
    OpenGL.glGetProgramivNV(id, pname, params)
}
fileprivate 
func _load_glGetQueryBufferObjecti64v(id:OpenGL.UInt, buffer:OpenGL.UInt, pname:OpenGL.Enum, offset:OpenGL.IntPointer)
{
    OpenGL.glGetQueryBufferObjecti64v = unsafeBitCast(OpenGL.getfp("glGetQueryBufferObjecti64v", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetQueryBufferObjecti64v))
    OpenGL.glGetQueryBufferObjecti64v(id, buffer, pname, offset)
}
fileprivate 
func _load_glGetQueryBufferObjectiv(id:OpenGL.UInt, buffer:OpenGL.UInt, pname:OpenGL.Enum, offset:OpenGL.IntPointer)
{
    OpenGL.glGetQueryBufferObjectiv = unsafeBitCast(OpenGL.getfp("glGetQueryBufferObjectiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetQueryBufferObjectiv))
    OpenGL.glGetQueryBufferObjectiv(id, buffer, pname, offset)
}
fileprivate 
func _load_glGetQueryBufferObjectui64v(id:OpenGL.UInt, buffer:OpenGL.UInt, pname:OpenGL.Enum, offset:OpenGL.IntPointer)
{
    OpenGL.glGetQueryBufferObjectui64v = unsafeBitCast(OpenGL.getfp("glGetQueryBufferObjectui64v", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetQueryBufferObjectui64v))
    OpenGL.glGetQueryBufferObjectui64v(id, buffer, pname, offset)
}
fileprivate 
func _load_glGetQueryBufferObjectuiv(id:OpenGL.UInt, buffer:OpenGL.UInt, pname:OpenGL.Enum, offset:OpenGL.IntPointer)
{
    OpenGL.glGetQueryBufferObjectuiv = unsafeBitCast(OpenGL.getfp("glGetQueryBufferObjectuiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetQueryBufferObjectuiv))
    OpenGL.glGetQueryBufferObjectuiv(id, buffer, pname, offset)
}
fileprivate 
func _load_glGetQueryIndexediv(target:OpenGL.Enum, index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryIndexediv = unsafeBitCast(OpenGL.getfp("glGetQueryIndexediv", support: [OpenGL.ss358, OpenGL.ss101]), to: Swift.type(of: OpenGL.glGetQueryIndexediv))
    OpenGL.glGetQueryIndexediv(target, index, pname, params)
}
fileprivate 
func _load_glGetQueryObjecti64v(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetQueryObjecti64v = unsafeBitCast(OpenGL.getfp("glGetQueryObjecti64v", support: [OpenGL.ss357, OpenGL.ss99]), to: Swift.type(of: OpenGL.glGetQueryObjecti64v))
    OpenGL.glGetQueryObjecti64v(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjecti64vEXT(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetQueryObjecti64vEXT = unsafeBitCast(OpenGL.getfp("glGetQueryObjecti64vEXT", support: [OpenGL.ss145, OpenGL.ss200]), to: Swift.type(of: OpenGL.glGetQueryObjecti64vEXT))
    OpenGL.glGetQueryObjecti64vEXT(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectiv(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryObjectiv = unsafeBitCast(OpenGL.getfp("glGetQueryObjectiv", support: [OpenGL.ss351]), to: Swift.type(of: OpenGL.glGetQueryObjectiv))
    OpenGL.glGetQueryObjectiv(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectivARB(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryObjectivARB = unsafeBitCast(OpenGL.getfp("glGetQueryObjectivARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glGetQueryObjectivARB))
    OpenGL.glGetQueryObjectivARB(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectivEXT(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryObjectivEXT = unsafeBitCast(OpenGL.getfp("glGetQueryObjectivEXT", support: [OpenGL.ss145]), to: Swift.type(of: OpenGL.glGetQueryObjectivEXT))
    OpenGL.glGetQueryObjectivEXT(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectui64v(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64>?)
{
    OpenGL.glGetQueryObjectui64v = unsafeBitCast(OpenGL.getfp("glGetQueryObjectui64v", support: [OpenGL.ss357, OpenGL.ss99]), to: Swift.type(of: OpenGL.glGetQueryObjectui64v))
    OpenGL.glGetQueryObjectui64v(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectui64vEXT(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64>?)
{
    OpenGL.glGetQueryObjectui64vEXT = unsafeBitCast(OpenGL.getfp("glGetQueryObjectui64vEXT", support: [OpenGL.ss145, OpenGL.ss200]), to: Swift.type(of: OpenGL.glGetQueryObjectui64vEXT))
    OpenGL.glGetQueryObjectui64vEXT(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectuiv(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetQueryObjectuiv = unsafeBitCast(OpenGL.getfp("glGetQueryObjectuiv", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetQueryObjectuiv))
    OpenGL.glGetQueryObjectuiv(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectuivARB(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetQueryObjectuivARB = unsafeBitCast(OpenGL.getfp("glGetQueryObjectuivARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glGetQueryObjectuivARB))
    OpenGL.glGetQueryObjectuivARB(id, pname, params)
}
fileprivate 
func _load_glGetQueryObjectuivEXT(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetQueryObjectuivEXT = unsafeBitCast(OpenGL.getfp("glGetQueryObjectuivEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glGetQueryObjectuivEXT))
    OpenGL.glGetQueryObjectuivEXT(id, pname, params)
}
fileprivate 
func _load_glGetQueryiv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryiv = unsafeBitCast(OpenGL.getfp("glGetQueryiv", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetQueryiv))
    OpenGL.glGetQueryiv(target, pname, params)
}
fileprivate 
func _load_glGetQueryivARB(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryivARB = unsafeBitCast(OpenGL.getfp("glGetQueryivARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glGetQueryivARB))
    OpenGL.glGetQueryivARB(target, pname, params)
}
fileprivate 
func _load_glGetQueryivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetQueryivEXT = unsafeBitCast(OpenGL.getfp("glGetQueryivEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glGetQueryivEXT))
    OpenGL.glGetQueryivEXT(target, pname, params)
}
fileprivate 
func _load_glGetRenderbufferParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetRenderbufferParameteriv = unsafeBitCast(OpenGL.getfp("glGetRenderbufferParameteriv", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glGetRenderbufferParameteriv))
    OpenGL.glGetRenderbufferParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetRenderbufferParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetRenderbufferParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetRenderbufferParameterivEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glGetRenderbufferParameterivEXT))
    OpenGL.glGetRenderbufferParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glGetRenderbufferParameterivOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetRenderbufferParameterivOES = unsafeBitCast(OpenGL.getfp("glGetRenderbufferParameterivOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glGetRenderbufferParameterivOES))
    OpenGL.glGetRenderbufferParameterivOES(target, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIiv(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSamplerParameterIiv = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIiv", support: [OpenGL.ss357, OpenGL.ss368, OpenGL.ss79]), to: Swift.type(of: OpenGL.glGetSamplerParameterIiv))
    OpenGL.glGetSamplerParameterIiv(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIivEXT(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSamplerParameterIivEXT = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIivEXT", support: [OpenGL.ss191]), to: Swift.type(of: OpenGL.glGetSamplerParameterIivEXT))
    OpenGL.glGetSamplerParameterIivEXT(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIivOES(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSamplerParameterIivOES = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glGetSamplerParameterIivOES))
    OpenGL.glGetSamplerParameterIivOES(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIuiv(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetSamplerParameterIuiv = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIuiv", support: [OpenGL.ss357, OpenGL.ss368, OpenGL.ss79]), to: Swift.type(of: OpenGL.glGetSamplerParameterIuiv))
    OpenGL.glGetSamplerParameterIuiv(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIuivEXT(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetSamplerParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIuivEXT", support: [OpenGL.ss191]), to: Swift.type(of: OpenGL.glGetSamplerParameterIuivEXT))
    OpenGL.glGetSamplerParameterIuivEXT(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterIuivOES(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetSamplerParameterIuivOES = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterIuivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glGetSamplerParameterIuivOES))
    OpenGL.glGetSamplerParameterIuivOES(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameterfv(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetSamplerParameterfv = unsafeBitCast(OpenGL.getfp("glGetSamplerParameterfv", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glGetSamplerParameterfv))
    OpenGL.glGetSamplerParameterfv(sampler, pname, params)
}
fileprivate 
func _load_glGetSamplerParameteriv(sampler:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSamplerParameteriv = unsafeBitCast(OpenGL.getfp("glGetSamplerParameteriv", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glGetSamplerParameteriv))
    OpenGL.glGetSamplerParameteriv(sampler, pname, params)
}
fileprivate 
func _load_glGetSeparableFilter(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    OpenGL.glGetSeparableFilter = unsafeBitCast(OpenGL.getfp("glGetSeparableFilter", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glGetSeparableFilter))
    OpenGL.glGetSeparableFilter(target, format, type, row, column, span)
}
fileprivate 
func _load_glGetSeparableFilterEXT(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    OpenGL.glGetSeparableFilterEXT = unsafeBitCast(OpenGL.getfp("glGetSeparableFilterEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glGetSeparableFilterEXT))
    OpenGL.glGetSeparableFilterEXT(target, format, type, row, column, span)
}
fileprivate 
func _load_glGetShaderInfoLog(shader:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, infoLog:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetShaderInfoLog = unsafeBitCast(OpenGL.getfp("glGetShaderInfoLog", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetShaderInfoLog))
    OpenGL.glGetShaderInfoLog(shader, bufSize, length, infoLog)
}
fileprivate 
func _load_glGetShaderPrecisionFormat(shadertype:OpenGL.Enum, precisiontype:OpenGL.Enum, range:UnsafeMutablePointer<OpenGL.Int>?, precision:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetShaderPrecisionFormat = unsafeBitCast(OpenGL.getfp("glGetShaderPrecisionFormat", support: [OpenGL.ss359, OpenGL.ss365, OpenGL.ss28]), to: Swift.type(of: OpenGL.glGetShaderPrecisionFormat))
    OpenGL.glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision)
}
fileprivate 
func _load_glGetShaderSource(shader:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, source:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetShaderSource = unsafeBitCast(OpenGL.getfp("glGetShaderSource", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetShaderSource))
    OpenGL.glGetShaderSource(shader, bufSize, length, source)
}
fileprivate 
func _load_glGetShaderSourceARB(obj:OpenGL.HandleARB, maxLength:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, source:UnsafeMutablePointer<OpenGL.CharARB>?)
{
    OpenGL.glGetShaderSourceARB = unsafeBitCast(OpenGL.getfp("glGetShaderSourceARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetShaderSourceARB))
    OpenGL.glGetShaderSourceARB(obj, maxLength, length, source)
}
fileprivate 
func _load_glGetShaderiv(shader:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetShaderiv = unsafeBitCast(OpenGL.getfp("glGetShaderiv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetShaderiv))
    OpenGL.glGetShaderiv(shader, pname, params)
}
fileprivate 
func _load_glGetSharpenTexFuncSGIS(target:OpenGL.Enum, points:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetSharpenTexFuncSGIS = unsafeBitCast(OpenGL.getfp("glGetSharpenTexFuncSGIS", support: [OpenGL.ss324]), to: Swift.type(of: OpenGL.glGetSharpenTexFuncSGIS))
    OpenGL.glGetSharpenTexFuncSGIS(target, points)
}
fileprivate 
func _load_glGetStageIndexNV(shadertype:OpenGL.Enum) -> OpenGL.UShort
{
    OpenGL.glGetStageIndexNV = unsafeBitCast(OpenGL.getfp("glGetStageIndexNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glGetStageIndexNV))
    return OpenGL.glGetStageIndexNV(shadertype)
}
fileprivate 
func _load_glGetString(name:OpenGL.Enum) -> UnsafeMutablePointer<UInt8>?
{
    OpenGL.glGetString = unsafeBitCast(OpenGL.getfp("glGetString", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetString))
    return OpenGL.glGetString(name)
}
fileprivate 
func _load_glGetStringi(name:OpenGL.Enum, index:OpenGL.UInt) -> UnsafeMutablePointer<UInt8>?
{
    OpenGL.glGetStringi = unsafeBitCast(OpenGL.getfp("glGetStringi", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetStringi))
    return OpenGL.glGetStringi(name, index)
}
fileprivate 
func _load_glGetSubroutineIndex(program:OpenGL.UInt, shadertype:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetSubroutineIndex = unsafeBitCast(OpenGL.getfp("glGetSubroutineIndex", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetSubroutineIndex))
    return OpenGL.glGetSubroutineIndex(program, shadertype, name)
}
fileprivate 
func _load_glGetSubroutineUniformLocation(program:OpenGL.UInt, shadertype:OpenGL.Enum, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetSubroutineUniformLocation = unsafeBitCast(OpenGL.getfp("glGetSubroutineUniformLocation", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetSubroutineUniformLocation))
    return OpenGL.glGetSubroutineUniformLocation(program, shadertype, name)
}
fileprivate 
func _load_glGetSynciv(sync:OpenGL.Sync, pname:OpenGL.Enum, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, values:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSynciv = unsafeBitCast(OpenGL.getfp("glGetSynciv", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glGetSynciv))
    OpenGL.glGetSynciv(sync, pname, bufSize, length, values)
}
fileprivate 
func _load_glGetSyncivAPPLE(sync:OpenGL.Sync, pname:OpenGL.Enum, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, values:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetSyncivAPPLE = unsafeBitCast(OpenGL.getfp("glGetSyncivAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glGetSyncivAPPLE))
    OpenGL.glGetSyncivAPPLE(sync, pname, bufSize, length, values)
}
fileprivate 
func _load_glGetTexBumpParameterfvATI(pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexBumpParameterfvATI = unsafeBitCast(OpenGL.getfp("glGetTexBumpParameterfvATI", support: [OpenGL.ss117]), to: Swift.type(of: OpenGL.glGetTexBumpParameterfvATI))
    OpenGL.glGetTexBumpParameterfvATI(pname, param)
}
fileprivate 
func _load_glGetTexBumpParameterivATI(pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexBumpParameterivATI = unsafeBitCast(OpenGL.getfp("glGetTexBumpParameterivATI", support: [OpenGL.ss117]), to: Swift.type(of: OpenGL.glGetTexBumpParameterivATI))
    OpenGL.glGetTexBumpParameterivATI(pname, param)
}
fileprivate 
func _load_glGetTexEnvfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexEnvfv = unsafeBitCast(OpenGL.getfp("glGetTexEnvfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetTexEnvfv))
    OpenGL.glGetTexEnvfv(target, pname, params)
}
fileprivate 
func _load_glGetTexEnviv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexEnviv = unsafeBitCast(OpenGL.getfp("glGetTexEnviv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetTexEnviv))
    OpenGL.glGetTexEnviv(target, pname, params)
}
fileprivate 
func _load_glGetTexEnvxv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexEnvxv = unsafeBitCast(OpenGL.getfp("glGetTexEnvxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetTexEnvxv))
    OpenGL.glGetTexEnvxv(target, pname, params)
}
fileprivate 
func _load_glGetTexEnvxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexEnvxvOES = unsafeBitCast(OpenGL.getfp("glGetTexEnvxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetTexEnvxvOES))
    OpenGL.glGetTexEnvxvOES(target, pname, params)
}
fileprivate 
func _load_glGetTexFilterFuncSGIS(target:OpenGL.Enum, filter:OpenGL.Enum, weights:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexFilterFuncSGIS = unsafeBitCast(OpenGL.getfp("glGetTexFilterFuncSGIS", support: [OpenGL.ss327]), to: Swift.type(of: OpenGL.glGetTexFilterFuncSGIS))
    OpenGL.glGetTexFilterFuncSGIS(target, filter, weights)
}
fileprivate 
func _load_glGetTexGendv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetTexGendv = unsafeBitCast(OpenGL.getfp("glGetTexGendv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetTexGendv))
    OpenGL.glGetTexGendv(coord, pname, params)
}
fileprivate 
func _load_glGetTexGenfv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexGenfv = unsafeBitCast(OpenGL.getfp("glGetTexGenfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetTexGenfv))
    OpenGL.glGetTexGenfv(coord, pname, params)
}
fileprivate 
func _load_glGetTexGenfvOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexGenfvOES = unsafeBitCast(OpenGL.getfp("glGetTexGenfvOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glGetTexGenfvOES))
    OpenGL.glGetTexGenfvOES(coord, pname, params)
}
fileprivate 
func _load_glGetTexGeniv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexGeniv = unsafeBitCast(OpenGL.getfp("glGetTexGeniv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glGetTexGeniv))
    OpenGL.glGetTexGeniv(coord, pname, params)
}
fileprivate 
func _load_glGetTexGenivOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexGenivOES = unsafeBitCast(OpenGL.getfp("glGetTexGenivOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glGetTexGenivOES))
    OpenGL.glGetTexGenivOES(coord, pname, params)
}
fileprivate 
func _load_glGetTexGenxvOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexGenxvOES = unsafeBitCast(OpenGL.getfp("glGetTexGenxvOES", support: [OpenGL.ss292, OpenGL.ss307]), to: Swift.type(of: OpenGL.glGetTexGenxvOES))
    OpenGL.glGetTexGenxvOES(coord, pname, params)
}
fileprivate 
func _load_glGetTexImage(target:OpenGL.Enum, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetTexImage = unsafeBitCast(OpenGL.getfp("glGetTexImage", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glGetTexImage))
    OpenGL.glGetTexImage(target, level, format, type, pixels)
}
fileprivate 
func _load_glGetTexLevelParameterfv(target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexLevelParameterfv = unsafeBitCast(OpenGL.getfp("glGetTexLevelParameterfv", support: [OpenGL.ss346, OpenGL.ss367]), to: Swift.type(of: OpenGL.glGetTexLevelParameterfv))
    OpenGL.glGetTexLevelParameterfv(target, level, pname, params)
}
fileprivate 
func _load_glGetTexLevelParameteriv(target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexLevelParameteriv = unsafeBitCast(OpenGL.getfp("glGetTexLevelParameteriv", support: [OpenGL.ss346, OpenGL.ss367]), to: Swift.type(of: OpenGL.glGetTexLevelParameteriv))
    OpenGL.glGetTexLevelParameteriv(target, level, pname, params)
}
fileprivate 
func _load_glGetTexLevelParameterxvOES(target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexLevelParameterxvOES = unsafeBitCast(OpenGL.getfp("glGetTexLevelParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetTexLevelParameterxvOES))
    OpenGL.glGetTexLevelParameterxvOES(target, level, pname, params)
}
fileprivate 
func _load_glGetTexParameterIiv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexParameterIiv = unsafeBitCast(OpenGL.getfp("glGetTexParameterIiv", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glGetTexParameterIiv))
    OpenGL.glGetTexParameterIiv(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterIivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexParameterIivEXT = unsafeBitCast(OpenGL.getfp("glGetTexParameterIivEXT", support: [OpenGL.ss191, OpenGL.ss195]), to: Swift.type(of: OpenGL.glGetTexParameterIivEXT))
    OpenGL.glGetTexParameterIivEXT(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterIivOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexParameterIivOES = unsafeBitCast(OpenGL.getfp("glGetTexParameterIivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glGetTexParameterIivOES))
    OpenGL.glGetTexParameterIivOES(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterIuiv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetTexParameterIuiv = unsafeBitCast(OpenGL.getfp("glGetTexParameterIuiv", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glGetTexParameterIuiv))
    OpenGL.glGetTexParameterIuiv(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterIuivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetTexParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glGetTexParameterIuivEXT", support: [OpenGL.ss191, OpenGL.ss195]), to: Swift.type(of: OpenGL.glGetTexParameterIuivEXT))
    OpenGL.glGetTexParameterIuivEXT(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterIuivOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetTexParameterIuivOES = unsafeBitCast(OpenGL.getfp("glGetTexParameterIuivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glGetTexParameterIuivOES))
    OpenGL.glGetTexParameterIuivOES(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterPointervAPPLE(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetTexParameterPointervAPPLE = unsafeBitCast(OpenGL.getfp("glGetTexParameterPointervAPPLE", support: [OpenGL.ss24]), to: Swift.type(of: OpenGL.glGetTexParameterPointervAPPLE))
    OpenGL.glGetTexParameterPointervAPPLE(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTexParameterfv = unsafeBitCast(OpenGL.getfp("glGetTexParameterfv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetTexParameterfv))
    OpenGL.glGetTexParameterfv(target, pname, params)
}
fileprivate 
func _load_glGetTexParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTexParameteriv = unsafeBitCast(OpenGL.getfp("glGetTexParameteriv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetTexParameteriv))
    OpenGL.glGetTexParameteriv(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterxv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexParameterxv = unsafeBitCast(OpenGL.getfp("glGetTexParameterxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glGetTexParameterxv))
    OpenGL.glGetTexParameterxv(target, pname, params)
}
fileprivate 
func _load_glGetTexParameterxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Fixed>?)
{
    OpenGL.glGetTexParameterxvOES = unsafeBitCast(OpenGL.getfp("glGetTexParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glGetTexParameterxvOES))
    OpenGL.glGetTexParameterxvOES(target, pname, params)
}
fileprivate 
func _load_glGetTextureHandleARB(texture:OpenGL.UInt) -> OpenGL.UInt64
{
    OpenGL.glGetTextureHandleARB = unsafeBitCast(OpenGL.getfp("glGetTextureHandleARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glGetTextureHandleARB))
    return OpenGL.glGetTextureHandleARB(texture)
}
fileprivate 
func _load_glGetTextureHandleNV(texture:OpenGL.UInt) -> OpenGL.UInt64
{
    OpenGL.glGetTextureHandleNV = unsafeBitCast(OpenGL.getfp("glGetTextureHandleNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glGetTextureHandleNV))
    return OpenGL.glGetTextureHandleNV(texture)
}
fileprivate 
func _load_glGetTextureImage(texture:OpenGL.UInt, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetTextureImage = unsafeBitCast(OpenGL.getfp("glGetTextureImage", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureImage))
    OpenGL.glGetTextureImage(texture, level, format, type, bufSize, pixels)
}
fileprivate 
func _load_glGetTextureImageEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetTextureImageEXT = unsafeBitCast(OpenGL.getfp("glGetTextureImageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureImageEXT))
    OpenGL.glGetTextureImageEXT(texture, target, level, format, type, pixels)
}
fileprivate 
func _load_glGetTextureLevelParameterfv(texture:OpenGL.UInt, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTextureLevelParameterfv = unsafeBitCast(OpenGL.getfp("glGetTextureLevelParameterfv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureLevelParameterfv))
    OpenGL.glGetTextureLevelParameterfv(texture, level, pname, params)
}
fileprivate 
func _load_glGetTextureLevelParameterfvEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTextureLevelParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetTextureLevelParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureLevelParameterfvEXT))
    OpenGL.glGetTextureLevelParameterfvEXT(texture, target, level, pname, params)
}
fileprivate 
func _load_glGetTextureLevelParameteriv(texture:OpenGL.UInt, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureLevelParameteriv = unsafeBitCast(OpenGL.getfp("glGetTextureLevelParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureLevelParameteriv))
    OpenGL.glGetTextureLevelParameteriv(texture, level, pname, params)
}
fileprivate 
func _load_glGetTextureLevelParameterivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureLevelParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetTextureLevelParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureLevelParameterivEXT))
    OpenGL.glGetTextureLevelParameterivEXT(texture, target, level, pname, params)
}
fileprivate 
func _load_glGetTextureParameterIiv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureParameterIiv = unsafeBitCast(OpenGL.getfp("glGetTextureParameterIiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureParameterIiv))
    OpenGL.glGetTextureParameterIiv(texture, pname, params)
}
fileprivate 
func _load_glGetTextureParameterIivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureParameterIivEXT = unsafeBitCast(OpenGL.getfp("glGetTextureParameterIivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureParameterIivEXT))
    OpenGL.glGetTextureParameterIivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glGetTextureParameterIuiv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetTextureParameterIuiv = unsafeBitCast(OpenGL.getfp("glGetTextureParameterIuiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureParameterIuiv))
    OpenGL.glGetTextureParameterIuiv(texture, pname, params)
}
fileprivate 
func _load_glGetTextureParameterIuivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetTextureParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glGetTextureParameterIuivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureParameterIuivEXT))
    OpenGL.glGetTextureParameterIuivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glGetTextureParameterfv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTextureParameterfv = unsafeBitCast(OpenGL.getfp("glGetTextureParameterfv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureParameterfv))
    OpenGL.glGetTextureParameterfv(texture, pname, params)
}
fileprivate 
func _load_glGetTextureParameterfvEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetTextureParameterfvEXT = unsafeBitCast(OpenGL.getfp("glGetTextureParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureParameterfvEXT))
    OpenGL.glGetTextureParameterfvEXT(texture, target, pname, params)
}
fileprivate 
func _load_glGetTextureParameteriv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureParameteriv = unsafeBitCast(OpenGL.getfp("glGetTextureParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTextureParameteriv))
    OpenGL.glGetTextureParameteriv(texture, pname, params)
}
fileprivate 
func _load_glGetTextureParameterivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTextureParameterivEXT = unsafeBitCast(OpenGL.getfp("glGetTextureParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetTextureParameterivEXT))
    OpenGL.glGetTextureParameterivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glGetTextureSamplerHandleARB(texture:OpenGL.UInt, sampler:OpenGL.UInt) -> OpenGL.UInt64
{
    OpenGL.glGetTextureSamplerHandleARB = unsafeBitCast(OpenGL.getfp("glGetTextureSamplerHandleARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glGetTextureSamplerHandleARB))
    return OpenGL.glGetTextureSamplerHandleARB(texture, sampler)
}
fileprivate 
func _load_glGetTextureSamplerHandleNV(texture:OpenGL.UInt, sampler:OpenGL.UInt) -> OpenGL.UInt64
{
    OpenGL.glGetTextureSamplerHandleNV = unsafeBitCast(OpenGL.getfp("glGetTextureSamplerHandleNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glGetTextureSamplerHandleNV))
    return OpenGL.glGetTextureSamplerHandleNV(texture, sampler)
}
fileprivate 
func _load_glGetTextureSubImage(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetTextureSubImage = unsafeBitCast(OpenGL.getfp("glGetTextureSubImage", support: [OpenGL.ss363, OpenGL.ss56]), to: Swift.type(of: OpenGL.glGetTextureSubImage))
    OpenGL.glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
}
fileprivate 
func _load_glGetTrackMatrixivNV(target:OpenGL.Enum, address:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTrackMatrixivNV = unsafeBitCast(OpenGL.getfp("glGetTrackMatrixivNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetTrackMatrixivNV))
    OpenGL.glGetTrackMatrixivNV(target, address, pname, params)
}
fileprivate 
func _load_glGetTransformFeedbackVarying(program:OpenGL.UInt, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Size>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetTransformFeedbackVarying = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbackVarying", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetTransformFeedbackVarying))
    OpenGL.glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name)
}
fileprivate 
func _load_glGetTransformFeedbackVaryingEXT(program:OpenGL.UInt, index:OpenGL.UInt, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, size:UnsafeMutablePointer<OpenGL.Size>?, type:UnsafeMutablePointer<OpenGL.Enum>?, name:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetTransformFeedbackVaryingEXT = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbackVaryingEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glGetTransformFeedbackVaryingEXT))
    OpenGL.glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name)
}
fileprivate 
func _load_glGetTransformFeedbackVaryingNV(program:OpenGL.UInt, index:OpenGL.UInt, location:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTransformFeedbackVaryingNV = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbackVaryingNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glGetTransformFeedbackVaryingNV))
    OpenGL.glGetTransformFeedbackVaryingNV(program, index, location)
}
fileprivate 
func _load_glGetTransformFeedbacki64_v(xfb:OpenGL.UInt, pname:OpenGL.Enum, index:OpenGL.UInt, param:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetTransformFeedbacki64_v = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbacki64_v", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTransformFeedbacki64_v))
    OpenGL.glGetTransformFeedbacki64_v(xfb, pname, index, param)
}
fileprivate 
func _load_glGetTransformFeedbacki_v(xfb:OpenGL.UInt, pname:OpenGL.Enum, index:OpenGL.UInt, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTransformFeedbacki_v = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbacki_v", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTransformFeedbacki_v))
    OpenGL.glGetTransformFeedbacki_v(xfb, pname, index, param)
}
fileprivate 
func _load_glGetTransformFeedbackiv(xfb:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetTransformFeedbackiv = unsafeBitCast(OpenGL.getfp("glGetTransformFeedbackiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetTransformFeedbackiv))
    OpenGL.glGetTransformFeedbackiv(xfb, pname, param)
}
fileprivate 
func _load_glGetTranslatedShaderSourceANGLE(shader:OpenGL.UInt, bufsize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, source:UnsafeMutablePointer<OpenGL.Char>?)
{
    OpenGL.glGetTranslatedShaderSourceANGLE = unsafeBitCast(OpenGL.getfp("glGetTranslatedShaderSourceANGLE", support: [OpenGL.ss16]), to: Swift.type(of: OpenGL.glGetTranslatedShaderSourceANGLE))
    OpenGL.glGetTranslatedShaderSourceANGLE(shader, bufsize, length, source)
}
fileprivate 
func _load_glGetUniformBlockIndex(program:OpenGL.UInt, uniformBlockName:UnsafePointer<OpenGL.Char>?) -> OpenGL.UInt
{
    OpenGL.glGetUniformBlockIndex = unsafeBitCast(OpenGL.getfp("glGetUniformBlockIndex", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetUniformBlockIndex))
    return OpenGL.glGetUniformBlockIndex(program, uniformBlockName)
}
fileprivate 
func _load_glGetUniformBufferSizeEXT(program:OpenGL.UInt, location:OpenGL.Int) -> OpenGL.Int
{
    OpenGL.glGetUniformBufferSizeEXT = unsafeBitCast(OpenGL.getfp("glGetUniformBufferSizeEXT", support: [OpenGL.ss126]), to: Swift.type(of: OpenGL.glGetUniformBufferSizeEXT))
    return OpenGL.glGetUniformBufferSizeEXT(program, location)
}
fileprivate 
func _load_glGetUniformIndices(program:OpenGL.UInt, uniformCount:OpenGL.Size, uniformNames:UnsafePointer<UnsafePointer<OpenGL.Char>?>?, uniformIndices:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetUniformIndices = unsafeBitCast(OpenGL.getfp("glGetUniformIndices", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glGetUniformIndices))
    OpenGL.glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices)
}
fileprivate 
func _load_glGetUniformLocation(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetUniformLocation = unsafeBitCast(OpenGL.getfp("glGetUniformLocation", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetUniformLocation))
    return OpenGL.glGetUniformLocation(program, name)
}
fileprivate 
func _load_glGetUniformLocationARB(programObj:OpenGL.HandleARB, name:UnsafePointer<OpenGL.CharARB>?) -> OpenGL.Int
{
    OpenGL.glGetUniformLocationARB = unsafeBitCast(OpenGL.getfp("glGetUniformLocationARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetUniformLocationARB))
    return OpenGL.glGetUniformLocationARB(programObj, name)
}
fileprivate 
func _load_glGetUniformOffsetEXT(program:OpenGL.UInt, location:OpenGL.Int) -> OpenGL.IntPointer
{
    OpenGL.glGetUniformOffsetEXT = unsafeBitCast(OpenGL.getfp("glGetUniformOffsetEXT", support: [OpenGL.ss126]), to: Swift.type(of: OpenGL.glGetUniformOffsetEXT))
    return OpenGL.glGetUniformOffsetEXT(program, location)
}
fileprivate 
func _load_glGetUniformSubroutineuiv(shadertype:OpenGL.Enum, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetUniformSubroutineuiv = unsafeBitCast(OpenGL.getfp("glGetUniformSubroutineuiv", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glGetUniformSubroutineuiv))
    OpenGL.glGetUniformSubroutineuiv(shadertype, location, params)
}
fileprivate 
func _load_glGetUniformdv(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetUniformdv = unsafeBitCast(OpenGL.getfp("glGetUniformdv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glGetUniformdv))
    OpenGL.glGetUniformdv(program, location, params)
}
fileprivate 
func _load_glGetUniformfv(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetUniformfv = unsafeBitCast(OpenGL.getfp("glGetUniformfv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetUniformfv))
    OpenGL.glGetUniformfv(program, location, params)
}
fileprivate 
func _load_glGetUniformfvARB(programObj:OpenGL.HandleARB, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetUniformfvARB = unsafeBitCast(OpenGL.getfp("glGetUniformfvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetUniformfvARB))
    OpenGL.glGetUniformfvARB(programObj, location, params)
}
fileprivate 
func _load_glGetUniformi64vARB(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetUniformi64vARB = unsafeBitCast(OpenGL.getfp("glGetUniformi64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glGetUniformi64vARB))
    OpenGL.glGetUniformi64vARB(program, location, params)
}
fileprivate 
func _load_glGetUniformi64vNV(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glGetUniformi64vNV = unsafeBitCast(OpenGL.getfp("glGetUniformi64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glGetUniformi64vNV))
    OpenGL.glGetUniformi64vNV(program, location, params)
}
fileprivate 
func _load_glGetUniformiv(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetUniformiv = unsafeBitCast(OpenGL.getfp("glGetUniformiv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetUniformiv))
    OpenGL.glGetUniformiv(program, location, params)
}
fileprivate 
func _load_glGetUniformivARB(programObj:OpenGL.HandleARB, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetUniformivARB = unsafeBitCast(OpenGL.getfp("glGetUniformivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glGetUniformivARB))
    OpenGL.glGetUniformivARB(programObj, location, params)
}
fileprivate 
func _load_glGetUniformui64vARB(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.UInt64>?)
{
    OpenGL.glGetUniformui64vARB = unsafeBitCast(OpenGL.getfp("glGetUniformui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glGetUniformui64vARB))
    OpenGL.glGetUniformui64vARB(program, location, params)
}
fileprivate 
func _load_glGetUniformui64vNV(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetUniformui64vNV = unsafeBitCast(OpenGL.getfp("glGetUniformui64vNV", support: [OpenGL.ss3, OpenGL.ss270]), to: Swift.type(of: OpenGL.glGetUniformui64vNV))
    OpenGL.glGetUniformui64vNV(program, location, params)
}
fileprivate 
func _load_glGetUniformuiv(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetUniformuiv = unsafeBitCast(OpenGL.getfp("glGetUniformuiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetUniformuiv))
    OpenGL.glGetUniformuiv(program, location, params)
}
fileprivate 
func _load_glGetUniformuivEXT(program:OpenGL.UInt, location:OpenGL.Int, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetUniformuivEXT = unsafeBitCast(OpenGL.getfp("glGetUniformuivEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glGetUniformuivEXT))
    OpenGL.glGetUniformuivEXT(program, location, params)
}
fileprivate 
func _load_glGetVariantArrayObjectfvATI(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVariantArrayObjectfvATI = unsafeBitCast(OpenGL.getfp("glGetVariantArrayObjectfvATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetVariantArrayObjectfvATI))
    OpenGL.glGetVariantArrayObjectfvATI(id, pname, params)
}
fileprivate 
func _load_glGetVariantArrayObjectivATI(id:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVariantArrayObjectivATI = unsafeBitCast(OpenGL.getfp("glGetVariantArrayObjectivATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glGetVariantArrayObjectivATI))
    OpenGL.glGetVariantArrayObjectivATI(id, pname, params)
}
fileprivate 
func _load_glGetVariantBooleanvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Bool>?)
{
    OpenGL.glGetVariantBooleanvEXT = unsafeBitCast(OpenGL.getfp("glGetVariantBooleanvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetVariantBooleanvEXT))
    OpenGL.glGetVariantBooleanvEXT(id, value, data)
}
fileprivate 
func _load_glGetVariantFloatvEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVariantFloatvEXT = unsafeBitCast(OpenGL.getfp("glGetVariantFloatvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetVariantFloatvEXT))
    OpenGL.glGetVariantFloatvEXT(id, value, data)
}
fileprivate 
func _load_glGetVariantIntegervEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVariantIntegervEXT = unsafeBitCast(OpenGL.getfp("glGetVariantIntegervEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetVariantIntegervEXT))
    OpenGL.glGetVariantIntegervEXT(id, value, data)
}
fileprivate 
func _load_glGetVariantPointervEXT(id:OpenGL.UInt, value:OpenGL.Enum, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVariantPointervEXT = unsafeBitCast(OpenGL.getfp("glGetVariantPointervEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glGetVariantPointervEXT))
    OpenGL.glGetVariantPointervEXT(id, value, data)
}
fileprivate 
func _load_glGetVaryingLocationNV(program:OpenGL.UInt, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Int
{
    OpenGL.glGetVaryingLocationNV = unsafeBitCast(OpenGL.getfp("glGetVaryingLocationNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glGetVaryingLocationNV))
    return OpenGL.glGetVaryingLocationNV(program, name)
}
fileprivate 
func _load_glGetVertexArrayIndexed64iv(vaobj:OpenGL.UInt, index:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetVertexArrayIndexed64iv = unsafeBitCast(OpenGL.getfp("glGetVertexArrayIndexed64iv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetVertexArrayIndexed64iv))
    OpenGL.glGetVertexArrayIndexed64iv(vaobj, index, pname, param)
}
fileprivate 
func _load_glGetVertexArrayIndexediv(vaobj:OpenGL.UInt, index:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexArrayIndexediv = unsafeBitCast(OpenGL.getfp("glGetVertexArrayIndexediv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetVertexArrayIndexediv))
    OpenGL.glGetVertexArrayIndexediv(vaobj, index, pname, param)
}
fileprivate 
func _load_glGetVertexArrayIntegeri_vEXT(vaobj:OpenGL.UInt, index:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexArrayIntegeri_vEXT = unsafeBitCast(OpenGL.getfp("glGetVertexArrayIntegeri_vEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetVertexArrayIntegeri_vEXT))
    OpenGL.glGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param)
}
fileprivate 
func _load_glGetVertexArrayIntegervEXT(vaobj:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexArrayIntegervEXT = unsafeBitCast(OpenGL.getfp("glGetVertexArrayIntegervEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetVertexArrayIntegervEXT))
    OpenGL.glGetVertexArrayIntegervEXT(vaobj, pname, param)
}
fileprivate 
func _load_glGetVertexArrayPointeri_vEXT(vaobj:OpenGL.UInt, index:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVertexArrayPointeri_vEXT = unsafeBitCast(OpenGL.getfp("glGetVertexArrayPointeri_vEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetVertexArrayPointeri_vEXT))
    OpenGL.glGetVertexArrayPointeri_vEXT(vaobj, index, pname, param)
}
fileprivate 
func _load_glGetVertexArrayPointervEXT(vaobj:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVertexArrayPointervEXT = unsafeBitCast(OpenGL.getfp("glGetVertexArrayPointervEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glGetVertexArrayPointervEXT))
    OpenGL.glGetVertexArrayPointervEXT(vaobj, pname, param)
}
fileprivate 
func _load_glGetVertexArrayiv(vaobj:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexArrayiv = unsafeBitCast(OpenGL.getfp("glGetVertexArrayiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glGetVertexArrayiv))
    OpenGL.glGetVertexArrayiv(vaobj, pname, param)
}
fileprivate 
func _load_glGetVertexAttribArrayObjectfvATI(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVertexAttribArrayObjectfvATI = unsafeBitCast(OpenGL.getfp("glGetVertexAttribArrayObjectfvATI", support: [OpenGL.ss123]), to: Swift.type(of: OpenGL.glGetVertexAttribArrayObjectfvATI))
    OpenGL.glGetVertexAttribArrayObjectfvATI(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribArrayObjectivATI(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribArrayObjectivATI = unsafeBitCast(OpenGL.getfp("glGetVertexAttribArrayObjectivATI", support: [OpenGL.ss123]), to: Swift.type(of: OpenGL.glGetVertexAttribArrayObjectivATI))
    OpenGL.glGetVertexAttribArrayObjectivATI(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribIiv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribIiv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribIiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetVertexAttribIiv))
    OpenGL.glGetVertexAttribIiv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribIivEXT(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribIivEXT = unsafeBitCast(OpenGL.getfp("glGetVertexAttribIivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glGetVertexAttribIivEXT))
    OpenGL.glGetVertexAttribIivEXT(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribIuiv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetVertexAttribIuiv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribIuiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glGetVertexAttribIuiv))
    OpenGL.glGetVertexAttribIuiv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribIuivEXT(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetVertexAttribIuivEXT = unsafeBitCast(OpenGL.getfp("glGetVertexAttribIuivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glGetVertexAttribIuivEXT))
    OpenGL.glGetVertexAttribIuivEXT(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribLdv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVertexAttribLdv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribLdv", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glGetVertexAttribLdv))
    OpenGL.glGetVertexAttribLdv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribLdvEXT(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVertexAttribLdvEXT = unsafeBitCast(OpenGL.getfp("glGetVertexAttribLdvEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glGetVertexAttribLdvEXT))
    OpenGL.glGetVertexAttribLdvEXT(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribLi64vNV(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glGetVertexAttribLi64vNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribLi64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glGetVertexAttribLi64vNV))
    OpenGL.glGetVertexAttribLi64vNV(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribLui64vARB(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetVertexAttribLui64vARB = unsafeBitCast(OpenGL.getfp("glGetVertexAttribLui64vARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glGetVertexAttribLui64vARB))
    OpenGL.glGetVertexAttribLui64vARB(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribLui64vNV(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetVertexAttribLui64vNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribLui64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glGetVertexAttribLui64vNV))
    OpenGL.glGetVertexAttribLui64vNV(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribPointerv(index:OpenGL.UInt, pname:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVertexAttribPointerv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribPointerv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetVertexAttribPointerv))
    OpenGL.glGetVertexAttribPointerv(index, pname, pointer)
}
fileprivate 
func _load_glGetVertexAttribPointervARB(index:OpenGL.UInt, pname:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVertexAttribPointervARB = unsafeBitCast(OpenGL.getfp("glGetVertexAttribPointervARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetVertexAttribPointervARB))
    OpenGL.glGetVertexAttribPointervARB(index, pname, pointer)
}
fileprivate 
func _load_glGetVertexAttribPointervNV(index:OpenGL.UInt, pname:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    OpenGL.glGetVertexAttribPointervNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribPointervNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetVertexAttribPointervNV))
    OpenGL.glGetVertexAttribPointervNV(index, pname, pointer)
}
fileprivate 
func _load_glGetVertexAttribdv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVertexAttribdv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribdv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glGetVertexAttribdv))
    OpenGL.glGetVertexAttribdv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribdvARB(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVertexAttribdvARB = unsafeBitCast(OpenGL.getfp("glGetVertexAttribdvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetVertexAttribdvARB))
    OpenGL.glGetVertexAttribdvARB(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribdvNV(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVertexAttribdvNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribdvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetVertexAttribdvNV))
    OpenGL.glGetVertexAttribdvNV(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribfv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVertexAttribfv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribfv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetVertexAttribfv))
    OpenGL.glGetVertexAttribfv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribfvARB(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVertexAttribfvARB = unsafeBitCast(OpenGL.getfp("glGetVertexAttribfvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetVertexAttribfvARB))
    OpenGL.glGetVertexAttribfvARB(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribfvNV(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVertexAttribfvNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribfvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetVertexAttribfvNV))
    OpenGL.glGetVertexAttribfvNV(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribiv(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribiv = unsafeBitCast(OpenGL.getfp("glGetVertexAttribiv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glGetVertexAttribiv))
    OpenGL.glGetVertexAttribiv(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribivARB(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribivARB = unsafeBitCast(OpenGL.getfp("glGetVertexAttribivARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glGetVertexAttribivARB))
    OpenGL.glGetVertexAttribivARB(index, pname, params)
}
fileprivate 
func _load_glGetVertexAttribivNV(index:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVertexAttribivNV = unsafeBitCast(OpenGL.getfp("glGetVertexAttribivNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glGetVertexAttribivNV))
    OpenGL.glGetVertexAttribivNV(index, pname, params)
}
fileprivate 
func _load_glGetVideoCaptureStreamdvNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetVideoCaptureStreamdvNV = unsafeBitCast(OpenGL.getfp("glGetVideoCaptureStreamdvNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glGetVideoCaptureStreamdvNV))
    OpenGL.glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glGetVideoCaptureStreamfvNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetVideoCaptureStreamfvNV = unsafeBitCast(OpenGL.getfp("glGetVideoCaptureStreamfvNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glGetVideoCaptureStreamfvNV))
    OpenGL.glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glGetVideoCaptureStreamivNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVideoCaptureStreamivNV = unsafeBitCast(OpenGL.getfp("glGetVideoCaptureStreamivNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glGetVideoCaptureStreamivNV))
    OpenGL.glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glGetVideoCaptureivNV(video_capture_slot:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVideoCaptureivNV = unsafeBitCast(OpenGL.getfp("glGetVideoCaptureivNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glGetVideoCaptureivNV))
    OpenGL.glGetVideoCaptureivNV(video_capture_slot, pname, params)
}
fileprivate 
func _load_glGetVideoi64vNV(video_slot:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glGetVideoi64vNV = unsafeBitCast(OpenGL.getfp("glGetVideoi64vNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glGetVideoi64vNV))
    OpenGL.glGetVideoi64vNV(video_slot, pname, params)
}
fileprivate 
func _load_glGetVideoivNV(video_slot:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetVideoivNV = unsafeBitCast(OpenGL.getfp("glGetVideoivNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glGetVideoivNV))
    OpenGL.glGetVideoivNV(video_slot, pname, params)
}
fileprivate 
func _load_glGetVideoui64vNV(video_slot:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glGetVideoui64vNV = unsafeBitCast(OpenGL.getfp("glGetVideoui64vNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glGetVideoui64vNV))
    OpenGL.glGetVideoui64vNV(video_slot, pname, params)
}
fileprivate 
func _load_glGetVideouivNV(video_slot:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetVideouivNV = unsafeBitCast(OpenGL.getfp("glGetVideouivNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glGetVideouivNV))
    OpenGL.glGetVideouivNV(video_slot, pname, params)
}
fileprivate 
func _load_glGetnColorTable(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, table:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnColorTable = unsafeBitCast(OpenGL.getfp("glGetnColorTable", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnColorTable))
    OpenGL.glGetnColorTable(target, format, type, bufSize, table)
}
fileprivate 
func _load_glGetnColorTableARB(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, table:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnColorTableARB = unsafeBitCast(OpenGL.getfp("glGetnColorTableARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnColorTableARB))
    OpenGL.glGetnColorTableARB(target, format, type, bufSize, table)
}
fileprivate 
func _load_glGetnCompressedTexImage(target:OpenGL.Enum, lod:OpenGL.Int, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnCompressedTexImage = unsafeBitCast(OpenGL.getfp("glGetnCompressedTexImage", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnCompressedTexImage))
    OpenGL.glGetnCompressedTexImage(target, lod, bufSize, pixels)
}
fileprivate 
func _load_glGetnCompressedTexImageARB(target:OpenGL.Enum, lod:OpenGL.Int, bufSize:OpenGL.Size, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnCompressedTexImageARB = unsafeBitCast(OpenGL.getfp("glGetnCompressedTexImageARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnCompressedTexImageARB))
    OpenGL.glGetnCompressedTexImageARB(target, lod, bufSize, img)
}
fileprivate 
func _load_glGetnConvolutionFilter(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, image:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnConvolutionFilter = unsafeBitCast(OpenGL.getfp("glGetnConvolutionFilter", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnConvolutionFilter))
    OpenGL.glGetnConvolutionFilter(target, format, type, bufSize, image)
}
fileprivate 
func _load_glGetnConvolutionFilterARB(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, image:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnConvolutionFilterARB = unsafeBitCast(OpenGL.getfp("glGetnConvolutionFilterARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnConvolutionFilterARB))
    OpenGL.glGetnConvolutionFilterARB(target, format, type, bufSize, image)
}
fileprivate 
func _load_glGetnHistogram(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnHistogram = unsafeBitCast(OpenGL.getfp("glGetnHistogram", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnHistogram))
    OpenGL.glGetnHistogram(target, reset, format, type, bufSize, values)
}
fileprivate 
func _load_glGetnHistogramARB(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnHistogramARB = unsafeBitCast(OpenGL.getfp("glGetnHistogramARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnHistogramARB))
    OpenGL.glGetnHistogramARB(target, reset, format, type, bufSize, values)
}
fileprivate 
func _load_glGetnMapdv(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetnMapdv = unsafeBitCast(OpenGL.getfp("glGetnMapdv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnMapdv))
    OpenGL.glGetnMapdv(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMapdvARB(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetnMapdvARB = unsafeBitCast(OpenGL.getfp("glGetnMapdvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnMapdvARB))
    OpenGL.glGetnMapdvARB(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMapfv(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnMapfv = unsafeBitCast(OpenGL.getfp("glGetnMapfv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnMapfv))
    OpenGL.glGetnMapfv(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMapfvARB(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnMapfvARB = unsafeBitCast(OpenGL.getfp("glGetnMapfvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnMapfvARB))
    OpenGL.glGetnMapfvARB(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMapiv(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnMapiv = unsafeBitCast(OpenGL.getfp("glGetnMapiv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnMapiv))
    OpenGL.glGetnMapiv(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMapivARB(target:OpenGL.Enum, query:OpenGL.Enum, bufSize:OpenGL.Size, v:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnMapivARB = unsafeBitCast(OpenGL.getfp("glGetnMapivARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnMapivARB))
    OpenGL.glGetnMapivARB(target, query, bufSize, v)
}
fileprivate 
func _load_glGetnMinmax(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnMinmax = unsafeBitCast(OpenGL.getfp("glGetnMinmax", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnMinmax))
    OpenGL.glGetnMinmax(target, reset, format, type, bufSize, values)
}
fileprivate 
func _load_glGetnMinmaxARB(target:OpenGL.Enum, reset:OpenGL.Bool, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnMinmaxARB = unsafeBitCast(OpenGL.getfp("glGetnMinmaxARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnMinmaxARB))
    OpenGL.glGetnMinmaxARB(target, reset, format, type, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapfv(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnPixelMapfv = unsafeBitCast(OpenGL.getfp("glGetnPixelMapfv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnPixelMapfv))
    OpenGL.glGetnPixelMapfv(map, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapfvARB(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnPixelMapfvARB = unsafeBitCast(OpenGL.getfp("glGetnPixelMapfvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnPixelMapfvARB))
    OpenGL.glGetnPixelMapfvARB(map, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapuiv(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetnPixelMapuiv = unsafeBitCast(OpenGL.getfp("glGetnPixelMapuiv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnPixelMapuiv))
    OpenGL.glGetnPixelMapuiv(map, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapuivARB(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetnPixelMapuivARB = unsafeBitCast(OpenGL.getfp("glGetnPixelMapuivARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnPixelMapuivARB))
    OpenGL.glGetnPixelMapuivARB(map, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapusv(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.UShort>?)
{
    OpenGL.glGetnPixelMapusv = unsafeBitCast(OpenGL.getfp("glGetnPixelMapusv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnPixelMapusv))
    OpenGL.glGetnPixelMapusv(map, bufSize, values)
}
fileprivate 
func _load_glGetnPixelMapusvARB(map:OpenGL.Enum, bufSize:OpenGL.Size, values:UnsafeMutablePointer<OpenGL.UShort>?)
{
    OpenGL.glGetnPixelMapusvARB = unsafeBitCast(OpenGL.getfp("glGetnPixelMapusvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnPixelMapusvARB))
    OpenGL.glGetnPixelMapusvARB(map, bufSize, values)
}
fileprivate 
func _load_glGetnPolygonStipple(bufSize:OpenGL.Size, pattern:UnsafeMutablePointer<OpenGL.UByte>?)
{
    OpenGL.glGetnPolygonStipple = unsafeBitCast(OpenGL.getfp("glGetnPolygonStipple", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnPolygonStipple))
    OpenGL.glGetnPolygonStipple(bufSize, pattern)
}
fileprivate 
func _load_glGetnPolygonStippleARB(bufSize:OpenGL.Size, pattern:UnsafeMutablePointer<OpenGL.UByte>?)
{
    OpenGL.glGetnPolygonStippleARB = unsafeBitCast(OpenGL.getfp("glGetnPolygonStippleARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnPolygonStippleARB))
    OpenGL.glGetnPolygonStippleARB(bufSize, pattern)
}
fileprivate 
func _load_glGetnSeparableFilter(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, rowBufSize:OpenGL.Size, row:UnsafeMutableRawPointer?, columnBufSize:OpenGL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnSeparableFilter = unsafeBitCast(OpenGL.getfp("glGetnSeparableFilter", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnSeparableFilter))
    OpenGL.glGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
fileprivate 
func _load_glGetnSeparableFilterARB(target:OpenGL.Enum, format:OpenGL.Enum, type:OpenGL.Enum, rowBufSize:OpenGL.Size, row:UnsafeMutableRawPointer?, columnBufSize:OpenGL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnSeparableFilterARB = unsafeBitCast(OpenGL.getfp("glGetnSeparableFilterARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnSeparableFilterARB))
    OpenGL.glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
fileprivate 
func _load_glGetnTexImage(target:OpenGL.Enum, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnTexImage = unsafeBitCast(OpenGL.getfp("glGetnTexImage", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnTexImage))
    OpenGL.glGetnTexImage(target, level, format, type, bufSize, pixels)
}
fileprivate 
func _load_glGetnTexImageARB(target:OpenGL.Enum, level:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, img:UnsafeMutableRawPointer?)
{
    OpenGL.glGetnTexImageARB = unsafeBitCast(OpenGL.getfp("glGetnTexImageARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnTexImageARB))
    OpenGL.glGetnTexImageARB(target, level, format, type, bufSize, img)
}
fileprivate 
func _load_glGetnUniformdv(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetnUniformdv = unsafeBitCast(OpenGL.getfp("glGetnUniformdv", support: [OpenGL.ss363]), to: Swift.type(of: OpenGL.glGetnUniformdv))
    OpenGL.glGetnUniformdv(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformdvARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Double>?)
{
    OpenGL.glGetnUniformdvARB = unsafeBitCast(OpenGL.getfp("glGetnUniformdvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnUniformdvARB))
    OpenGL.glGetnUniformdvARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformfv(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnUniformfv = unsafeBitCast(OpenGL.getfp("glGetnUniformfv", support: [OpenGL.ss363, OpenGL.ss368, OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformfv))
    OpenGL.glGetnUniformfv(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformfvARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnUniformfvARB = unsafeBitCast(OpenGL.getfp("glGetnUniformfvARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnUniformfvARB))
    OpenGL.glGetnUniformfvARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformfvEXT(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnUniformfvEXT = unsafeBitCast(OpenGL.getfp("glGetnUniformfvEXT", support: [OpenGL.ss180]), to: Swift.type(of: OpenGL.glGetnUniformfvEXT))
    OpenGL.glGetnUniformfvEXT(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformfvKHR(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Float>?)
{
    OpenGL.glGetnUniformfvKHR = unsafeBitCast(OpenGL.getfp("glGetnUniformfvKHR", support: [OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformfvKHR))
    OpenGL.glGetnUniformfvKHR(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformi64vARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int64>?)
{
    OpenGL.glGetnUniformi64vARB = unsafeBitCast(OpenGL.getfp("glGetnUniformi64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glGetnUniformi64vARB))
    OpenGL.glGetnUniformi64vARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformiv(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnUniformiv = unsafeBitCast(OpenGL.getfp("glGetnUniformiv", support: [OpenGL.ss363, OpenGL.ss368, OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformiv))
    OpenGL.glGetnUniformiv(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformivARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnUniformivARB = unsafeBitCast(OpenGL.getfp("glGetnUniformivARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnUniformivARB))
    OpenGL.glGetnUniformivARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformivEXT(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnUniformivEXT = unsafeBitCast(OpenGL.getfp("glGetnUniformivEXT", support: [OpenGL.ss180]), to: Swift.type(of: OpenGL.glGetnUniformivEXT))
    OpenGL.glGetnUniformivEXT(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformivKHR(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glGetnUniformivKHR = unsafeBitCast(OpenGL.getfp("glGetnUniformivKHR", support: [OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformivKHR))
    OpenGL.glGetnUniformivKHR(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformui64vARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.UInt64>?)
{
    OpenGL.glGetnUniformui64vARB = unsafeBitCast(OpenGL.getfp("glGetnUniformui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glGetnUniformui64vARB))
    OpenGL.glGetnUniformui64vARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformuiv(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetnUniformuiv = unsafeBitCast(OpenGL.getfp("glGetnUniformuiv", support: [OpenGL.ss363, OpenGL.ss368, OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformuiv))
    OpenGL.glGetnUniformuiv(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformuivARB(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetnUniformuivARB = unsafeBitCast(OpenGL.getfp("glGetnUniformuivARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glGetnUniformuivARB))
    OpenGL.glGetnUniformuivARB(program, location, bufSize, params)
}
fileprivate 
func _load_glGetnUniformuivKHR(program:OpenGL.UInt, location:OpenGL.Int, bufSize:OpenGL.Size, params:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glGetnUniformuivKHR = unsafeBitCast(OpenGL.getfp("glGetnUniformuivKHR", support: [OpenGL.ss222]), to: Swift.type(of: OpenGL.glGetnUniformuivKHR))
    OpenGL.glGetnUniformuivKHR(program, location, bufSize, params)
}
fileprivate 
func _load_glGlobalAlphaFactorbSUN(factor:OpenGL.Byte)
{
    OpenGL.glGlobalAlphaFactorbSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactorbSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactorbSUN))
    OpenGL.glGlobalAlphaFactorbSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactordSUN(factor:OpenGL.Double)
{
    OpenGL.glGlobalAlphaFactordSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactordSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactordSUN))
    OpenGL.glGlobalAlphaFactordSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactorfSUN(factor:OpenGL.Float)
{
    OpenGL.glGlobalAlphaFactorfSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactorfSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactorfSUN))
    OpenGL.glGlobalAlphaFactorfSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactoriSUN(factor:OpenGL.Int)
{
    OpenGL.glGlobalAlphaFactoriSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactoriSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactoriSUN))
    OpenGL.glGlobalAlphaFactoriSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactorsSUN(factor:OpenGL.Short)
{
    OpenGL.glGlobalAlphaFactorsSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactorsSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactorsSUN))
    OpenGL.glGlobalAlphaFactorsSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactorubSUN(factor:OpenGL.UByte)
{
    OpenGL.glGlobalAlphaFactorubSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactorubSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactorubSUN))
    OpenGL.glGlobalAlphaFactorubSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactoruiSUN(factor:OpenGL.UInt)
{
    OpenGL.glGlobalAlphaFactoruiSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactoruiSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactoruiSUN))
    OpenGL.glGlobalAlphaFactoruiSUN(factor)
}
fileprivate 
func _load_glGlobalAlphaFactorusSUN(factor:OpenGL.UShort)
{
    OpenGL.glGlobalAlphaFactorusSUN = unsafeBitCast(OpenGL.getfp("glGlobalAlphaFactorusSUN", support: [OpenGL.ss342]), to: Swift.type(of: OpenGL.glGlobalAlphaFactorusSUN))
    OpenGL.glGlobalAlphaFactorusSUN(factor)
}
fileprivate 
func _load_glHint(target:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glHint = unsafeBitCast(OpenGL.getfp("glHint", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glHint))
    OpenGL.glHint(target, mode)
}
fileprivate 
func _load_glHintPGI(target:OpenGL.Enum, mode:OpenGL.Int)
{
    OpenGL.glHintPGI = unsafeBitCast(OpenGL.getfp("glHintPGI", support: [OpenGL.ss313]), to: Swift.type(of: OpenGL.glHintPGI))
    OpenGL.glHintPGI(target, mode)
}
fileprivate 
func _load_glHistogram(target:OpenGL.Enum, width:OpenGL.Size, internalformat:OpenGL.Enum, sink:OpenGL.Bool)
{
    OpenGL.glHistogram = unsafeBitCast(OpenGL.getfp("glHistogram", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glHistogram))
    OpenGL.glHistogram(target, width, internalformat, sink)
}
fileprivate 
func _load_glHistogramEXT(target:OpenGL.Enum, width:OpenGL.Size, internalformat:OpenGL.Enum, sink:OpenGL.Bool)
{
    OpenGL.glHistogramEXT = unsafeBitCast(OpenGL.getfp("glHistogramEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glHistogramEXT))
    OpenGL.glHistogramEXT(target, width, internalformat, sink)
}
fileprivate 
func _load_glIglooInterfaceSGIX(pname:OpenGL.Enum, params:UnsafeRawPointer?)
{
    OpenGL.glIglooInterfaceSGIX = unsafeBitCast(OpenGL.getfp("glIglooInterfaceSGIX", support: [OpenGL.ss332]), to: Swift.type(of: OpenGL.glIglooInterfaceSGIX))
    OpenGL.glIglooInterfaceSGIX(pname, params)
}
fileprivate 
func _load_glImageTransformParameterfHP(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glImageTransformParameterfHP = unsafeBitCast(OpenGL.getfp("glImageTransformParameterfHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glImageTransformParameterfHP))
    OpenGL.glImageTransformParameterfHP(target, pname, param)
}
fileprivate 
func _load_glImageTransformParameterfvHP(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glImageTransformParameterfvHP = unsafeBitCast(OpenGL.getfp("glImageTransformParameterfvHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glImageTransformParameterfvHP))
    OpenGL.glImageTransformParameterfvHP(target, pname, params)
}
fileprivate 
func _load_glImageTransformParameteriHP(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glImageTransformParameteriHP = unsafeBitCast(OpenGL.getfp("glImageTransformParameteriHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glImageTransformParameteriHP))
    OpenGL.glImageTransformParameteriHP(target, pname, param)
}
fileprivate 
func _load_glImageTransformParameterivHP(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glImageTransformParameterivHP = unsafeBitCast(OpenGL.getfp("glImageTransformParameterivHP", support: [OpenGL.ss209]), to: Swift.type(of: OpenGL.glImageTransformParameterivHP))
    OpenGL.glImageTransformParameterivHP(target, pname, params)
}
fileprivate 
func _load_glImportSyncEXT(external_sync_type:OpenGL.Enum, external_sync:OpenGL.IntPointer, flags:OpenGL.Bitfield) -> OpenGL.Sync
{
    OpenGL.glImportSyncEXT = unsafeBitCast(OpenGL.getfp("glImportSyncEXT", support: [OpenGL.ss206]), to: Swift.type(of: OpenGL.glImportSyncEXT))
    return OpenGL.glImportSyncEXT(external_sync_type, external_sync, flags)
}
fileprivate 
func _load_glIndexFormatNV(type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glIndexFormatNV = unsafeBitCast(OpenGL.getfp("glIndexFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glIndexFormatNV))
    OpenGL.glIndexFormatNV(type, stride)
}
fileprivate 
func _load_glIndexFuncEXT(f:OpenGL.Enum, ref:OpenGL.ClampFloat)
{
    OpenGL.glIndexFuncEXT = unsafeBitCast(OpenGL.getfp("glIndexFuncEXT", support: [OpenGL.ss161]), to: Swift.type(of: OpenGL.glIndexFuncEXT))
    OpenGL.glIndexFuncEXT(f, ref)
}
fileprivate 
func _load_glIndexMask(mask:OpenGL.UInt)
{
    OpenGL.glIndexMask = unsafeBitCast(OpenGL.getfp("glIndexMask", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexMask))
    OpenGL.glIndexMask(mask)
}
fileprivate 
func _load_glIndexMaterialEXT(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glIndexMaterialEXT = unsafeBitCast(OpenGL.getfp("glIndexMaterialEXT", support: [OpenGL.ss162]), to: Swift.type(of: OpenGL.glIndexMaterialEXT))
    OpenGL.glIndexMaterialEXT(face, mode)
}
fileprivate 
func _load_glIndexPointer(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glIndexPointer = unsafeBitCast(OpenGL.getfp("glIndexPointer", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexPointer))
    OpenGL.glIndexPointer(type, stride, pointer)
}
fileprivate 
func _load_glIndexPointerEXT(type:OpenGL.Enum, stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glIndexPointerEXT = unsafeBitCast(OpenGL.getfp("glIndexPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glIndexPointerEXT))
    OpenGL.glIndexPointerEXT(type, stride, count, pointer)
}
fileprivate 
func _load_glIndexPointerListIBM(type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glIndexPointerListIBM = unsafeBitCast(OpenGL.getfp("glIndexPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glIndexPointerListIBM))
    OpenGL.glIndexPointerListIBM(type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glIndexd(c:OpenGL.Double)
{
    OpenGL.glIndexd = unsafeBitCast(OpenGL.getfp("glIndexd", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexd))
    OpenGL.glIndexd(c)
}
fileprivate 
func _load_glIndexdv(c:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glIndexdv = unsafeBitCast(OpenGL.getfp("glIndexdv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexdv))
    OpenGL.glIndexdv(c)
}
fileprivate 
func _load_glIndexf(c:OpenGL.Float)
{
    OpenGL.glIndexf = unsafeBitCast(OpenGL.getfp("glIndexf", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexf))
    OpenGL.glIndexf(c)
}
fileprivate 
func _load_glIndexfv(c:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glIndexfv = unsafeBitCast(OpenGL.getfp("glIndexfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexfv))
    OpenGL.glIndexfv(c)
}
fileprivate 
func _load_glIndexi(c:OpenGL.Int)
{
    OpenGL.glIndexi = unsafeBitCast(OpenGL.getfp("glIndexi", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexi))
    OpenGL.glIndexi(c)
}
fileprivate 
func _load_glIndexiv(c:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glIndexiv = unsafeBitCast(OpenGL.getfp("glIndexiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexiv))
    OpenGL.glIndexiv(c)
}
fileprivate 
func _load_glIndexs(c:OpenGL.Short)
{
    OpenGL.glIndexs = unsafeBitCast(OpenGL.getfp("glIndexs", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexs))
    OpenGL.glIndexs(c)
}
fileprivate 
func _load_glIndexsv(c:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glIndexsv = unsafeBitCast(OpenGL.getfp("glIndexsv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexsv))
    OpenGL.glIndexsv(c)
}
fileprivate 
func _load_glIndexub(c:OpenGL.UByte)
{
    OpenGL.glIndexub = unsafeBitCast(OpenGL.getfp("glIndexub", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexub))
    OpenGL.glIndexub(c)
}
fileprivate 
func _load_glIndexubv(c:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glIndexubv = unsafeBitCast(OpenGL.getfp("glIndexubv", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIndexubv))
    OpenGL.glIndexubv(c)
}
fileprivate 
func _load_glIndexxOES(component:OpenGL.Fixed)
{
    OpenGL.glIndexxOES = unsafeBitCast(OpenGL.getfp("glIndexxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glIndexxOES))
    OpenGL.glIndexxOES(component)
}
fileprivate 
func _load_glIndexxvOES(component:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glIndexxvOES = unsafeBitCast(OpenGL.getfp("glIndexxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glIndexxvOES))
    OpenGL.glIndexxvOES(component)
}
fileprivate 
func _load_glInitNames()
{
    OpenGL.glInitNames = unsafeBitCast(OpenGL.getfp("glInitNames", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glInitNames))
    OpenGL.glInitNames()
}
fileprivate 
func _load_glInsertComponentEXT(res:OpenGL.UInt, src:OpenGL.UInt, num:OpenGL.UInt)
{
    OpenGL.glInsertComponentEXT = unsafeBitCast(OpenGL.getfp("glInsertComponentEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glInsertComponentEXT))
    OpenGL.glInsertComponentEXT(res, src, num)
}
fileprivate 
func _load_glInsertEventMarkerEXT(length:OpenGL.Size, marker:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glInsertEventMarkerEXT = unsafeBitCast(OpenGL.getfp("glInsertEventMarkerEXT", support: [OpenGL.ss141]), to: Swift.type(of: OpenGL.glInsertEventMarkerEXT))
    OpenGL.glInsertEventMarkerEXT(length, marker)
}
fileprivate 
func _load_glInstrumentsBufferSGIX(size:OpenGL.Size, buffer:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glInstrumentsBufferSGIX = unsafeBitCast(OpenGL.getfp("glInstrumentsBufferSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glInstrumentsBufferSGIX))
    OpenGL.glInstrumentsBufferSGIX(size, buffer)
}
fileprivate 
func _load_glInterleavedArrays(format:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glInterleavedArrays = unsafeBitCast(OpenGL.getfp("glInterleavedArrays", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glInterleavedArrays))
    OpenGL.glInterleavedArrays(format, stride, pointer)
}
fileprivate 
func _load_glInterpolatePathsNV(resultPath:OpenGL.UInt, pathA:OpenGL.UInt, pathB:OpenGL.UInt, weight:OpenGL.Float)
{
    OpenGL.glInterpolatePathsNV = unsafeBitCast(OpenGL.getfp("glInterpolatePathsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glInterpolatePathsNV))
    OpenGL.glInterpolatePathsNV(resultPath, pathA, pathB, weight)
}
fileprivate 
func _load_glInvalidateBufferData(buffer:OpenGL.UInt)
{
    OpenGL.glInvalidateBufferData = unsafeBitCast(OpenGL.getfp("glInvalidateBufferData", support: [OpenGL.ss361, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateBufferData))
    OpenGL.glInvalidateBufferData(buffer)
}
fileprivate 
func _load_glInvalidateBufferSubData(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, length:OpenGL.SizePointer)
{
    OpenGL.glInvalidateBufferSubData = unsafeBitCast(OpenGL.getfp("glInvalidateBufferSubData", support: [OpenGL.ss361, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateBufferSubData))
    OpenGL.glInvalidateBufferSubData(buffer, offset, length)
}
fileprivate 
func _load_glInvalidateFramebuffer(target:OpenGL.Enum, numAttachments:OpenGL.Size, attachments:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glInvalidateFramebuffer = unsafeBitCast(OpenGL.getfp("glInvalidateFramebuffer", support: [OpenGL.ss361, OpenGL.ss366, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateFramebuffer))
    OpenGL.glInvalidateFramebuffer(target, numAttachments, attachments)
}
fileprivate 
func _load_glInvalidateNamedFramebufferData(framebuffer:OpenGL.UInt, numAttachments:OpenGL.Size, attachments:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glInvalidateNamedFramebufferData = unsafeBitCast(OpenGL.getfp("glInvalidateNamedFramebufferData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glInvalidateNamedFramebufferData))
    OpenGL.glInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments)
}
fileprivate 
func _load_glInvalidateNamedFramebufferSubData(framebuffer:OpenGL.UInt, numAttachments:OpenGL.Size, attachments:UnsafePointer<OpenGL.Enum>?, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glInvalidateNamedFramebufferSubData = unsafeBitCast(OpenGL.getfp("glInvalidateNamedFramebufferSubData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glInvalidateNamedFramebufferSubData))
    OpenGL.glInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height)
}
fileprivate 
func _load_glInvalidateSubFramebuffer(target:OpenGL.Enum, numAttachments:OpenGL.Size, attachments:UnsafePointer<OpenGL.Enum>?, x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glInvalidateSubFramebuffer = unsafeBitCast(OpenGL.getfp("glInvalidateSubFramebuffer", support: [OpenGL.ss361, OpenGL.ss366, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateSubFramebuffer))
    OpenGL.glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height)
}
fileprivate 
func _load_glInvalidateTexImage(texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glInvalidateTexImage = unsafeBitCast(OpenGL.getfp("glInvalidateTexImage", support: [OpenGL.ss361, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateTexImage))
    OpenGL.glInvalidateTexImage(texture, level)
}
fileprivate 
func _load_glInvalidateTexSubImage(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glInvalidateTexSubImage = unsafeBitCast(OpenGL.getfp("glInvalidateTexSubImage", support: [OpenGL.ss361, OpenGL.ss64]), to: Swift.type(of: OpenGL.glInvalidateTexSubImage))
    OpenGL.glInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth)
}
fileprivate 
func _load_glIsAsyncMarkerSGIX(marker:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsAsyncMarkerSGIX = unsafeBitCast(OpenGL.getfp("glIsAsyncMarkerSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glIsAsyncMarkerSGIX))
    return OpenGL.glIsAsyncMarkerSGIX(marker)
}
fileprivate 
func _load_glIsBuffer(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsBuffer = unsafeBitCast(OpenGL.getfp("glIsBuffer", support: [OpenGL.ss351, OpenGL.ss365]), to: Swift.type(of: OpenGL.glIsBuffer))
    return OpenGL.glIsBuffer(buffer)
}
fileprivate 
func _load_glIsBufferARB(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsBufferARB = unsafeBitCast(OpenGL.getfp("glIsBufferARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glIsBufferARB))
    return OpenGL.glIsBufferARB(buffer)
}
fileprivate 
func _load_glIsBufferResidentNV(target:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glIsBufferResidentNV = unsafeBitCast(OpenGL.getfp("glIsBufferResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glIsBufferResidentNV))
    return OpenGL.glIsBufferResidentNV(target)
}
fileprivate 
func _load_glIsCommandListNV(list:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsCommandListNV = unsafeBitCast(OpenGL.getfp("glIsCommandListNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glIsCommandListNV))
    return OpenGL.glIsCommandListNV(list)
}
fileprivate 
func _load_glIsEnabled(cap:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glIsEnabled = unsafeBitCast(OpenGL.getfp("glIsEnabled", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glIsEnabled))
    return OpenGL.glIsEnabled(cap)
}
fileprivate 
func _load_glIsEnabledIndexedEXT(target:OpenGL.Enum, index:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsEnabledIndexedEXT = unsafeBitCast(OpenGL.getfp("glIsEnabledIndexedEXT", support: [OpenGL.ss143, OpenGL.ss147]), to: Swift.type(of: OpenGL.glIsEnabledIndexedEXT))
    return OpenGL.glIsEnabledIndexedEXT(target, index)
}
fileprivate 
func _load_glIsEnabledi(target:OpenGL.Enum, index:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsEnabledi = unsafeBitCast(OpenGL.getfp("glIsEnabledi", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glIsEnabledi))
    return OpenGL.glIsEnabledi(target, index)
}
fileprivate 
func _load_glIsEnablediEXT(target:OpenGL.Enum, index:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsEnablediEXT = unsafeBitCast(OpenGL.getfp("glIsEnablediEXT", support: [OpenGL.ss148]), to: Swift.type(of: OpenGL.glIsEnablediEXT))
    return OpenGL.glIsEnablediEXT(target, index)
}
fileprivate 
func _load_glIsEnablediNV(target:OpenGL.Enum, index:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsEnablediNV = unsafeBitCast(OpenGL.getfp("glIsEnablediNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glIsEnablediNV))
    return OpenGL.glIsEnablediNV(target, index)
}
fileprivate 
func _load_glIsEnablediOES(target:OpenGL.Enum, index:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsEnablediOES = unsafeBitCast(OpenGL.getfp("glIsEnablediOES", support: [OpenGL.ss289]), to: Swift.type(of: OpenGL.glIsEnablediOES))
    return OpenGL.glIsEnablediOES(target, index)
}
fileprivate 
func _load_glIsFenceAPPLE(fence:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsFenceAPPLE = unsafeBitCast(OpenGL.getfp("glIsFenceAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glIsFenceAPPLE))
    return OpenGL.glIsFenceAPPLE(fence)
}
fileprivate 
func _load_glIsFenceNV(fence:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsFenceNV = unsafeBitCast(OpenGL.getfp("glIsFenceNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glIsFenceNV))
    return OpenGL.glIsFenceNV(fence)
}
fileprivate 
func _load_glIsFramebuffer(framebuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsFramebuffer = unsafeBitCast(OpenGL.getfp("glIsFramebuffer", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glIsFramebuffer))
    return OpenGL.glIsFramebuffer(framebuffer)
}
fileprivate 
func _load_glIsFramebufferEXT(framebuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsFramebufferEXT = unsafeBitCast(OpenGL.getfp("glIsFramebufferEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glIsFramebufferEXT))
    return OpenGL.glIsFramebufferEXT(framebuffer)
}
fileprivate 
func _load_glIsFramebufferOES(framebuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsFramebufferOES = unsafeBitCast(OpenGL.getfp("glIsFramebufferOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glIsFramebufferOES))
    return OpenGL.glIsFramebufferOES(framebuffer)
}
fileprivate 
func _load_glIsImageHandleResidentARB(handle:OpenGL.UInt64) -> OpenGL.Bool
{
    OpenGL.glIsImageHandleResidentARB = unsafeBitCast(OpenGL.getfp("glIsImageHandleResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glIsImageHandleResidentARB))
    return OpenGL.glIsImageHandleResidentARB(handle)
}
fileprivate 
func _load_glIsImageHandleResidentNV(handle:OpenGL.UInt64) -> OpenGL.Bool
{
    OpenGL.glIsImageHandleResidentNV = unsafeBitCast(OpenGL.getfp("glIsImageHandleResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glIsImageHandleResidentNV))
    return OpenGL.glIsImageHandleResidentNV(handle)
}
fileprivate 
func _load_glIsList(list:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsList = unsafeBitCast(OpenGL.getfp("glIsList", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glIsList))
    return OpenGL.glIsList(list)
}
fileprivate 
func _load_glIsNameAMD(identifier:OpenGL.Enum, name:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsNameAMD = unsafeBitCast(OpenGL.getfp("glIsNameAMD", support: [OpenGL.ss6]), to: Swift.type(of: OpenGL.glIsNameAMD))
    return OpenGL.glIsNameAMD(identifier, name)
}
fileprivate 
func _load_glIsNamedBufferResidentNV(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsNamedBufferResidentNV = unsafeBitCast(OpenGL.getfp("glIsNamedBufferResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glIsNamedBufferResidentNV))
    return OpenGL.glIsNamedBufferResidentNV(buffer)
}
fileprivate 
func _load_glIsNamedStringARB(namelen:OpenGL.Int, name:UnsafePointer<OpenGL.Char>?) -> OpenGL.Bool
{
    OpenGL.glIsNamedStringARB = unsafeBitCast(OpenGL.getfp("glIsNamedStringARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glIsNamedStringARB))
    return OpenGL.glIsNamedStringARB(namelen, name)
}
fileprivate 
func _load_glIsObjectBufferATI(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsObjectBufferATI = unsafeBitCast(OpenGL.getfp("glIsObjectBufferATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glIsObjectBufferATI))
    return OpenGL.glIsObjectBufferATI(buffer)
}
fileprivate 
func _load_glIsOcclusionQueryNV(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsOcclusionQueryNV = unsafeBitCast(OpenGL.getfp("glIsOcclusionQueryNV", support: [OpenGL.ss258]), to: Swift.type(of: OpenGL.glIsOcclusionQueryNV))
    return OpenGL.glIsOcclusionQueryNV(id)
}
fileprivate 
func _load_glIsPathNV(path:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsPathNV = unsafeBitCast(OpenGL.getfp("glIsPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glIsPathNV))
    return OpenGL.glIsPathNV(path)
}
fileprivate 
func _load_glIsPointInFillPathNV(path:OpenGL.UInt, mask:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float) -> OpenGL.Bool
{
    OpenGL.glIsPointInFillPathNV = unsafeBitCast(OpenGL.getfp("glIsPointInFillPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glIsPointInFillPathNV))
    return OpenGL.glIsPointInFillPathNV(path, mask, x, y)
}
fileprivate 
func _load_glIsPointInStrokePathNV(path:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float) -> OpenGL.Bool
{
    OpenGL.glIsPointInStrokePathNV = unsafeBitCast(OpenGL.getfp("glIsPointInStrokePathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glIsPointInStrokePathNV))
    return OpenGL.glIsPointInStrokePathNV(path, x, y)
}
fileprivate 
func _load_glIsProgram(program:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsProgram = unsafeBitCast(OpenGL.getfp("glIsProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glIsProgram))
    return OpenGL.glIsProgram(program)
}
fileprivate 
func _load_glIsProgramARB(program:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsProgramARB = unsafeBitCast(OpenGL.getfp("glIsProgramARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glIsProgramARB))
    return OpenGL.glIsProgramARB(program)
}
fileprivate 
func _load_glIsProgramNV(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsProgramNV = unsafeBitCast(OpenGL.getfp("glIsProgramNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glIsProgramNV))
    return OpenGL.glIsProgramNV(id)
}
fileprivate 
func _load_glIsProgramPipeline(pipeline:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsProgramPipeline = unsafeBitCast(OpenGL.getfp("glIsProgramPipeline", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glIsProgramPipeline))
    return OpenGL.glIsProgramPipeline(pipeline)
}
fileprivate 
func _load_glIsProgramPipelineEXT(pipeline:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsProgramPipelineEXT = unsafeBitCast(OpenGL.getfp("glIsProgramPipelineEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glIsProgramPipelineEXT))
    return OpenGL.glIsProgramPipelineEXT(pipeline)
}
fileprivate 
func _load_glIsQuery(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsQuery = unsafeBitCast(OpenGL.getfp("glIsQuery", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glIsQuery))
    return OpenGL.glIsQuery(id)
}
fileprivate 
func _load_glIsQueryARB(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsQueryARB = unsafeBitCast(OpenGL.getfp("glIsQueryARB", support: [OpenGL.ss71]), to: Swift.type(of: OpenGL.glIsQueryARB))
    return OpenGL.glIsQueryARB(id)
}
fileprivate 
func _load_glIsQueryEXT(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsQueryEXT = unsafeBitCast(OpenGL.getfp("glIsQueryEXT", support: [OpenGL.ss145, OpenGL.ss171]), to: Swift.type(of: OpenGL.glIsQueryEXT))
    return OpenGL.glIsQueryEXT(id)
}
fileprivate 
func _load_glIsRenderbuffer(renderbuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsRenderbuffer = unsafeBitCast(OpenGL.getfp("glIsRenderbuffer", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glIsRenderbuffer))
    return OpenGL.glIsRenderbuffer(renderbuffer)
}
fileprivate 
func _load_glIsRenderbufferEXT(renderbuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glIsRenderbufferEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glIsRenderbufferEXT))
    return OpenGL.glIsRenderbufferEXT(renderbuffer)
}
fileprivate 
func _load_glIsRenderbufferOES(renderbuffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsRenderbufferOES = unsafeBitCast(OpenGL.getfp("glIsRenderbufferOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glIsRenderbufferOES))
    return OpenGL.glIsRenderbufferOES(renderbuffer)
}
fileprivate 
func _load_glIsSampler(sampler:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsSampler = unsafeBitCast(OpenGL.getfp("glIsSampler", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glIsSampler))
    return OpenGL.glIsSampler(sampler)
}
fileprivate 
func _load_glIsShader(shader:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsShader = unsafeBitCast(OpenGL.getfp("glIsShader", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glIsShader))
    return OpenGL.glIsShader(shader)
}
fileprivate 
func _load_glIsStateNV(state:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsStateNV = unsafeBitCast(OpenGL.getfp("glIsStateNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glIsStateNV))
    return OpenGL.glIsStateNV(state)
}
fileprivate 
func _load_glIsSync(sync:OpenGL.Sync) -> OpenGL.Bool
{
    OpenGL.glIsSync = unsafeBitCast(OpenGL.getfp("glIsSync", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glIsSync))
    return OpenGL.glIsSync(sync)
}
fileprivate 
func _load_glIsSyncAPPLE(sync:OpenGL.Sync) -> OpenGL.Bool
{
    OpenGL.glIsSyncAPPLE = unsafeBitCast(OpenGL.getfp("glIsSyncAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glIsSyncAPPLE))
    return OpenGL.glIsSyncAPPLE(sync)
}
fileprivate 
func _load_glIsTexture(texture:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsTexture = unsafeBitCast(OpenGL.getfp("glIsTexture", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glIsTexture))
    return OpenGL.glIsTexture(texture)
}
fileprivate 
func _load_glIsTextureEXT(texture:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsTextureEXT = unsafeBitCast(OpenGL.getfp("glIsTextureEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glIsTextureEXT))
    return OpenGL.glIsTextureEXT(texture)
}
fileprivate 
func _load_glIsTextureHandleResidentARB(handle:OpenGL.UInt64) -> OpenGL.Bool
{
    OpenGL.glIsTextureHandleResidentARB = unsafeBitCast(OpenGL.getfp("glIsTextureHandleResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glIsTextureHandleResidentARB))
    return OpenGL.glIsTextureHandleResidentARB(handle)
}
fileprivate 
func _load_glIsTextureHandleResidentNV(handle:OpenGL.UInt64) -> OpenGL.Bool
{
    OpenGL.glIsTextureHandleResidentNV = unsafeBitCast(OpenGL.getfp("glIsTextureHandleResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glIsTextureHandleResidentNV))
    return OpenGL.glIsTextureHandleResidentNV(handle)
}
fileprivate 
func _load_glIsTransformFeedback(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsTransformFeedback = unsafeBitCast(OpenGL.getfp("glIsTransformFeedback", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glIsTransformFeedback))
    return OpenGL.glIsTransformFeedback(id)
}
fileprivate 
func _load_glIsTransformFeedbackNV(id:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glIsTransformFeedbackNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glIsTransformFeedbackNV))
    return OpenGL.glIsTransformFeedbackNV(id)
}
fileprivate 
func _load_glIsVariantEnabledEXT(id:OpenGL.UInt, cap:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glIsVariantEnabledEXT = unsafeBitCast(OpenGL.getfp("glIsVariantEnabledEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glIsVariantEnabledEXT))
    return OpenGL.glIsVariantEnabledEXT(id, cap)
}
fileprivate 
func _load_glIsVertexArray(array:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsVertexArray = unsafeBitCast(OpenGL.getfp("glIsVertexArray", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss105]), to: Swift.type(of: OpenGL.glIsVertexArray))
    return OpenGL.glIsVertexArray(array)
}
fileprivate 
func _load_glIsVertexArrayAPPLE(array:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsVertexArrayAPPLE = unsafeBitCast(OpenGL.getfp("glIsVertexArrayAPPLE", support: [OpenGL.ss25]), to: Swift.type(of: OpenGL.glIsVertexArrayAPPLE))
    return OpenGL.glIsVertexArrayAPPLE(array)
}
fileprivate 
func _load_glIsVertexArrayOES(array:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glIsVertexArrayOES = unsafeBitCast(OpenGL.getfp("glIsVertexArrayOES", support: [OpenGL.ss310]), to: Swift.type(of: OpenGL.glIsVertexArrayOES))
    return OpenGL.glIsVertexArrayOES(array)
}
fileprivate 
func _load_glIsVertexAttribEnabledAPPLE(index:OpenGL.UInt, pname:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glIsVertexAttribEnabledAPPLE = unsafeBitCast(OpenGL.getfp("glIsVertexAttribEnabledAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glIsVertexAttribEnabledAPPLE))
    return OpenGL.glIsVertexAttribEnabledAPPLE(index, pname)
}
fileprivate 
func _load_glLabelObjectEXT(type:OpenGL.Enum, object:OpenGL.UInt, length:OpenGL.Size, label:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glLabelObjectEXT = unsafeBitCast(OpenGL.getfp("glLabelObjectEXT", support: [OpenGL.ss140]), to: Swift.type(of: OpenGL.glLabelObjectEXT))
    OpenGL.glLabelObjectEXT(type, object, length, label)
}
fileprivate 
func _load_glLightEnviSGIX(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glLightEnviSGIX = unsafeBitCast(OpenGL.getfp("glLightEnviSGIX", support: [OpenGL.ss330]), to: Swift.type(of: OpenGL.glLightEnviSGIX))
    OpenGL.glLightEnviSGIX(pname, param)
}
fileprivate 
func _load_glLightModelf(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glLightModelf = unsafeBitCast(OpenGL.getfp("glLightModelf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightModelf))
    OpenGL.glLightModelf(pname, param)
}
fileprivate 
func _load_glLightModelfv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glLightModelfv = unsafeBitCast(OpenGL.getfp("glLightModelfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightModelfv))
    OpenGL.glLightModelfv(pname, params)
}
fileprivate 
func _load_glLightModeli(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glLightModeli = unsafeBitCast(OpenGL.getfp("glLightModeli", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLightModeli))
    OpenGL.glLightModeli(pname, param)
}
fileprivate 
func _load_glLightModeliv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glLightModeliv = unsafeBitCast(OpenGL.getfp("glLightModeliv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLightModeliv))
    OpenGL.glLightModeliv(pname, params)
}
fileprivate 
func _load_glLightModelx(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glLightModelx = unsafeBitCast(OpenGL.getfp("glLightModelx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightModelx))
    OpenGL.glLightModelx(pname, param)
}
fileprivate 
func _load_glLightModelxOES(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glLightModelxOES = unsafeBitCast(OpenGL.getfp("glLightModelxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLightModelxOES))
    OpenGL.glLightModelxOES(pname, param)
}
fileprivate 
func _load_glLightModelxv(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLightModelxv = unsafeBitCast(OpenGL.getfp("glLightModelxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightModelxv))
    OpenGL.glLightModelxv(pname, param)
}
fileprivate 
func _load_glLightModelxvOES(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLightModelxvOES = unsafeBitCast(OpenGL.getfp("glLightModelxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLightModelxvOES))
    OpenGL.glLightModelxvOES(pname, param)
}
fileprivate 
func _load_glLightf(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glLightf = unsafeBitCast(OpenGL.getfp("glLightf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightf))
    OpenGL.glLightf(light, pname, param)
}
fileprivate 
func _load_glLightfv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glLightfv = unsafeBitCast(OpenGL.getfp("glLightfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightfv))
    OpenGL.glLightfv(light, pname, params)
}
fileprivate 
func _load_glLighti(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glLighti = unsafeBitCast(OpenGL.getfp("glLighti", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLighti))
    OpenGL.glLighti(light, pname, param)
}
fileprivate 
func _load_glLightiv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glLightiv = unsafeBitCast(OpenGL.getfp("glLightiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLightiv))
    OpenGL.glLightiv(light, pname, params)
}
fileprivate 
func _load_glLightx(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glLightx = unsafeBitCast(OpenGL.getfp("glLightx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightx))
    OpenGL.glLightx(light, pname, param)
}
fileprivate 
func _load_glLightxOES(light:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glLightxOES = unsafeBitCast(OpenGL.getfp("glLightxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLightxOES))
    OpenGL.glLightxOES(light, pname, param)
}
fileprivate 
func _load_glLightxv(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLightxv = unsafeBitCast(OpenGL.getfp("glLightxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLightxv))
    OpenGL.glLightxv(light, pname, params)
}
fileprivate 
func _load_glLightxvOES(light:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLightxvOES = unsafeBitCast(OpenGL.getfp("glLightxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLightxvOES))
    OpenGL.glLightxvOES(light, pname, params)
}
fileprivate 
func _load_glLineStipple(factor:OpenGL.Int, pattern:OpenGL.UShort)
{
    OpenGL.glLineStipple = unsafeBitCast(OpenGL.getfp("glLineStipple", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLineStipple))
    OpenGL.glLineStipple(factor, pattern)
}
fileprivate 
func _load_glLineWidth(width:OpenGL.Float)
{
    OpenGL.glLineWidth = unsafeBitCast(OpenGL.getfp("glLineWidth", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glLineWidth))
    OpenGL.glLineWidth(width)
}
fileprivate 
func _load_glLineWidthx(width:OpenGL.Fixed)
{
    OpenGL.glLineWidthx = unsafeBitCast(OpenGL.getfp("glLineWidthx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLineWidthx))
    OpenGL.glLineWidthx(width)
}
fileprivate 
func _load_glLineWidthxOES(width:OpenGL.Fixed)
{
    OpenGL.glLineWidthxOES = unsafeBitCast(OpenGL.getfp("glLineWidthxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLineWidthxOES))
    OpenGL.glLineWidthxOES(width)
}
fileprivate 
func _load_glLinkProgram(program:OpenGL.UInt)
{
    OpenGL.glLinkProgram = unsafeBitCast(OpenGL.getfp("glLinkProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glLinkProgram))
    OpenGL.glLinkProgram(program)
}
fileprivate 
func _load_glLinkProgramARB(programObj:OpenGL.HandleARB)
{
    OpenGL.glLinkProgramARB = unsafeBitCast(OpenGL.getfp("glLinkProgramARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glLinkProgramARB))
    OpenGL.glLinkProgramARB(programObj)
}
fileprivate 
func _load_glListBase(base:OpenGL.UInt)
{
    OpenGL.glListBase = unsafeBitCast(OpenGL.getfp("glListBase", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glListBase))
    OpenGL.glListBase(base)
}
fileprivate 
func _load_glListDrawCommandsStatesClientNV(list:OpenGL.UInt, segment:OpenGL.UInt, indirects:UnsafeMutablePointer<UnsafeRawPointer?>?, sizes:UnsafePointer<OpenGL.Size>?, states:UnsafePointer<OpenGL.UInt>?, fbos:UnsafePointer<OpenGL.UInt>?, count:OpenGL.UInt)
{
    OpenGL.glListDrawCommandsStatesClientNV = unsafeBitCast(OpenGL.getfp("glListDrawCommandsStatesClientNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glListDrawCommandsStatesClientNV))
    OpenGL.glListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count)
}
fileprivate 
func _load_glListParameterfSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glListParameterfSGIX = unsafeBitCast(OpenGL.getfp("glListParameterfSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glListParameterfSGIX))
    OpenGL.glListParameterfSGIX(list, pname, param)
}
fileprivate 
func _load_glListParameterfvSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glListParameterfvSGIX = unsafeBitCast(OpenGL.getfp("glListParameterfvSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glListParameterfvSGIX))
    OpenGL.glListParameterfvSGIX(list, pname, params)
}
fileprivate 
func _load_glListParameteriSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glListParameteriSGIX = unsafeBitCast(OpenGL.getfp("glListParameteriSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glListParameteriSGIX))
    OpenGL.glListParameteriSGIX(list, pname, param)
}
fileprivate 
func _load_glListParameterivSGIX(list:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glListParameterivSGIX = unsafeBitCast(OpenGL.getfp("glListParameterivSGIX", support: [OpenGL.ss334]), to: Swift.type(of: OpenGL.glListParameterivSGIX))
    OpenGL.glListParameterivSGIX(list, pname, params)
}
fileprivate 
func _load_glLoadIdentity()
{
    OpenGL.glLoadIdentity = unsafeBitCast(OpenGL.getfp("glLoadIdentity", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLoadIdentity))
    OpenGL.glLoadIdentity()
}
fileprivate 
func _load_glLoadIdentityDeformationMapSGIX(mask:OpenGL.Bitfield)
{
    OpenGL.glLoadIdentityDeformationMapSGIX = unsafeBitCast(OpenGL.getfp("glLoadIdentityDeformationMapSGIX", support: [OpenGL.ss336]), to: Swift.type(of: OpenGL.glLoadIdentityDeformationMapSGIX))
    OpenGL.glLoadIdentityDeformationMapSGIX(mask)
}
fileprivate 
func _load_glLoadMatrixd(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glLoadMatrixd = unsafeBitCast(OpenGL.getfp("glLoadMatrixd", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLoadMatrixd))
    OpenGL.glLoadMatrixd(m)
}
fileprivate 
func _load_glLoadMatrixf(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glLoadMatrixf = unsafeBitCast(OpenGL.getfp("glLoadMatrixf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLoadMatrixf))
    OpenGL.glLoadMatrixf(m)
}
fileprivate 
func _load_glLoadMatrixx(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLoadMatrixx = unsafeBitCast(OpenGL.getfp("glLoadMatrixx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glLoadMatrixx))
    OpenGL.glLoadMatrixx(m)
}
fileprivate 
func _load_glLoadMatrixxOES(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLoadMatrixxOES = unsafeBitCast(OpenGL.getfp("glLoadMatrixxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLoadMatrixxOES))
    OpenGL.glLoadMatrixxOES(m)
}
fileprivate 
func _load_glLoadName(name:OpenGL.UInt)
{
    OpenGL.glLoadName = unsafeBitCast(OpenGL.getfp("glLoadName", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLoadName))
    OpenGL.glLoadName(name)
}
fileprivate 
func _load_glLoadPaletteFromModelViewMatrixOES()
{
    OpenGL.glLoadPaletteFromModelViewMatrixOES = unsafeBitCast(OpenGL.getfp("glLoadPaletteFromModelViewMatrixOES", support: [OpenGL.ss297]), to: Swift.type(of: OpenGL.glLoadPaletteFromModelViewMatrixOES))
    OpenGL.glLoadPaletteFromModelViewMatrixOES()
}
fileprivate 
func _load_glLoadProgramNV(target:OpenGL.Enum, id:OpenGL.UInt, len:OpenGL.Size, program:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glLoadProgramNV = unsafeBitCast(OpenGL.getfp("glLoadProgramNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glLoadProgramNV))
    OpenGL.glLoadProgramNV(target, id, len, program)
}
fileprivate 
func _load_glLoadTransposeMatrixd(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glLoadTransposeMatrixd = unsafeBitCast(OpenGL.getfp("glLoadTransposeMatrixd", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLoadTransposeMatrixd))
    OpenGL.glLoadTransposeMatrixd(m)
}
fileprivate 
func _load_glLoadTransposeMatrixdARB(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glLoadTransposeMatrixdARB = unsafeBitCast(OpenGL.getfp("glLoadTransposeMatrixdARB", support: [OpenGL.ss103]), to: Swift.type(of: OpenGL.glLoadTransposeMatrixdARB))
    OpenGL.glLoadTransposeMatrixdARB(m)
}
fileprivate 
func _load_glLoadTransposeMatrixf(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glLoadTransposeMatrixf = unsafeBitCast(OpenGL.getfp("glLoadTransposeMatrixf", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glLoadTransposeMatrixf))
    OpenGL.glLoadTransposeMatrixf(m)
}
fileprivate 
func _load_glLoadTransposeMatrixfARB(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glLoadTransposeMatrixfARB = unsafeBitCast(OpenGL.getfp("glLoadTransposeMatrixfARB", support: [OpenGL.ss103]), to: Swift.type(of: OpenGL.glLoadTransposeMatrixfARB))
    OpenGL.glLoadTransposeMatrixfARB(m)
}
fileprivate 
func _load_glLoadTransposeMatrixxOES(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glLoadTransposeMatrixxOES = unsafeBitCast(OpenGL.getfp("glLoadTransposeMatrixxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glLoadTransposeMatrixxOES))
    OpenGL.glLoadTransposeMatrixxOES(m)
}
fileprivate 
func _load_glLockArraysEXT(first:OpenGL.Int, count:OpenGL.Size)
{
    OpenGL.glLockArraysEXT = unsafeBitCast(OpenGL.getfp("glLockArraysEXT", support: [OpenGL.ss134]), to: Swift.type(of: OpenGL.glLockArraysEXT))
    OpenGL.glLockArraysEXT(first, count)
}
fileprivate 
func _load_glLogicOp(opcode:OpenGL.Enum)
{
    OpenGL.glLogicOp = unsafeBitCast(OpenGL.getfp("glLogicOp", support: [OpenGL.ss346, OpenGL.ss364]), to: Swift.type(of: OpenGL.glLogicOp))
    OpenGL.glLogicOp(opcode)
}
fileprivate 
func _load_glMakeBufferNonResidentNV(target:OpenGL.Enum)
{
    OpenGL.glMakeBufferNonResidentNV = unsafeBitCast(OpenGL.getfp("glMakeBufferNonResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glMakeBufferNonResidentNV))
    OpenGL.glMakeBufferNonResidentNV(target)
}
fileprivate 
func _load_glMakeBufferResidentNV(target:OpenGL.Enum, access:OpenGL.Enum)
{
    OpenGL.glMakeBufferResidentNV = unsafeBitCast(OpenGL.getfp("glMakeBufferResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glMakeBufferResidentNV))
    OpenGL.glMakeBufferResidentNV(target, access)
}
fileprivate 
func _load_glMakeImageHandleNonResidentARB(handle:OpenGL.UInt64)
{
    OpenGL.glMakeImageHandleNonResidentARB = unsafeBitCast(OpenGL.getfp("glMakeImageHandleNonResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glMakeImageHandleNonResidentARB))
    OpenGL.glMakeImageHandleNonResidentARB(handle)
}
fileprivate 
func _load_glMakeImageHandleNonResidentNV(handle:OpenGL.UInt64)
{
    OpenGL.glMakeImageHandleNonResidentNV = unsafeBitCast(OpenGL.getfp("glMakeImageHandleNonResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glMakeImageHandleNonResidentNV))
    OpenGL.glMakeImageHandleNonResidentNV(handle)
}
fileprivate 
func _load_glMakeImageHandleResidentARB(handle:OpenGL.UInt64, access:OpenGL.Enum)
{
    OpenGL.glMakeImageHandleResidentARB = unsafeBitCast(OpenGL.getfp("glMakeImageHandleResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glMakeImageHandleResidentARB))
    OpenGL.glMakeImageHandleResidentARB(handle, access)
}
fileprivate 
func _load_glMakeImageHandleResidentNV(handle:OpenGL.UInt64, access:OpenGL.Enum)
{
    OpenGL.glMakeImageHandleResidentNV = unsafeBitCast(OpenGL.getfp("glMakeImageHandleResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glMakeImageHandleResidentNV))
    OpenGL.glMakeImageHandleResidentNV(handle, access)
}
fileprivate 
func _load_glMakeNamedBufferNonResidentNV(buffer:OpenGL.UInt)
{
    OpenGL.glMakeNamedBufferNonResidentNV = unsafeBitCast(OpenGL.getfp("glMakeNamedBufferNonResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glMakeNamedBufferNonResidentNV))
    OpenGL.glMakeNamedBufferNonResidentNV(buffer)
}
fileprivate 
func _load_glMakeNamedBufferResidentNV(buffer:OpenGL.UInt, access:OpenGL.Enum)
{
    OpenGL.glMakeNamedBufferResidentNV = unsafeBitCast(OpenGL.getfp("glMakeNamedBufferResidentNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glMakeNamedBufferResidentNV))
    OpenGL.glMakeNamedBufferResidentNV(buffer, access)
}
fileprivate 
func _load_glMakeTextureHandleNonResidentARB(handle:OpenGL.UInt64)
{
    OpenGL.glMakeTextureHandleNonResidentARB = unsafeBitCast(OpenGL.getfp("glMakeTextureHandleNonResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glMakeTextureHandleNonResidentARB))
    OpenGL.glMakeTextureHandleNonResidentARB(handle)
}
fileprivate 
func _load_glMakeTextureHandleNonResidentNV(handle:OpenGL.UInt64)
{
    OpenGL.glMakeTextureHandleNonResidentNV = unsafeBitCast(OpenGL.getfp("glMakeTextureHandleNonResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glMakeTextureHandleNonResidentNV))
    OpenGL.glMakeTextureHandleNonResidentNV(handle)
}
fileprivate 
func _load_glMakeTextureHandleResidentARB(handle:OpenGL.UInt64)
{
    OpenGL.glMakeTextureHandleResidentARB = unsafeBitCast(OpenGL.getfp("glMakeTextureHandleResidentARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glMakeTextureHandleResidentARB))
    OpenGL.glMakeTextureHandleResidentARB(handle)
}
fileprivate 
func _load_glMakeTextureHandleResidentNV(handle:OpenGL.UInt64)
{
    OpenGL.glMakeTextureHandleResidentNV = unsafeBitCast(OpenGL.getfp("glMakeTextureHandleResidentNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glMakeTextureHandleResidentNV))
    OpenGL.glMakeTextureHandleResidentNV(handle)
}
fileprivate 
func _load_glMap1d(target:OpenGL.Enum, u1:OpenGL.Double, u2:OpenGL.Double, stride:OpenGL.Int, order:OpenGL.Int, points:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMap1d = unsafeBitCast(OpenGL.getfp("glMap1d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMap1d))
    OpenGL.glMap1d(target, u1, u2, stride, order, points)
}
fileprivate 
func _load_glMap1f(target:OpenGL.Enum, u1:OpenGL.Float, u2:OpenGL.Float, stride:OpenGL.Int, order:OpenGL.Int, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMap1f = unsafeBitCast(OpenGL.getfp("glMap1f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMap1f))
    OpenGL.glMap1f(target, u1, u2, stride, order, points)
}
fileprivate 
func _load_glMap1xOES(target:OpenGL.Enum, u1:OpenGL.Fixed, u2:OpenGL.Fixed, stride:OpenGL.Int, order:OpenGL.Int, points:OpenGL.Fixed)
{
    OpenGL.glMap1xOES = unsafeBitCast(OpenGL.getfp("glMap1xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMap1xOES))
    OpenGL.glMap1xOES(target, u1, u2, stride, order, points)
}
fileprivate 
func _load_glMap2d(target:OpenGL.Enum, u1:OpenGL.Double, u2:OpenGL.Double, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Double, v2:OpenGL.Double, vstride:OpenGL.Int, vorder:OpenGL.Int, points:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMap2d = unsafeBitCast(OpenGL.getfp("glMap2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMap2d))
    OpenGL.glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
fileprivate 
func _load_glMap2f(target:OpenGL.Enum, u1:OpenGL.Float, u2:OpenGL.Float, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Float, v2:OpenGL.Float, vstride:OpenGL.Int, vorder:OpenGL.Int, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMap2f = unsafeBitCast(OpenGL.getfp("glMap2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMap2f))
    OpenGL.glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
fileprivate 
func _load_glMap2xOES(target:OpenGL.Enum, u1:OpenGL.Fixed, u2:OpenGL.Fixed, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Fixed, v2:OpenGL.Fixed, vstride:OpenGL.Int, vorder:OpenGL.Int, points:OpenGL.Fixed)
{
    OpenGL.glMap2xOES = unsafeBitCast(OpenGL.getfp("glMap2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMap2xOES))
    OpenGL.glMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
fileprivate 
func _load_glMapBuffer(target:OpenGL.Enum, access:OpenGL.Enum) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapBuffer = unsafeBitCast(OpenGL.getfp("glMapBuffer", support: [OpenGL.ss351]), to: Swift.type(of: OpenGL.glMapBuffer))
    return OpenGL.glMapBuffer(target, access)
}
fileprivate 
func _load_glMapBufferARB(target:OpenGL.Enum, access:OpenGL.Enum) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapBufferARB = unsafeBitCast(OpenGL.getfp("glMapBufferARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glMapBufferARB))
    return OpenGL.glMapBufferARB(target, access)
}
fileprivate 
func _load_glMapBufferOES(target:OpenGL.Enum, access:OpenGL.Enum) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapBufferOES = unsafeBitCast(OpenGL.getfp("glMapBufferOES", support: [OpenGL.ss296]), to: Swift.type(of: OpenGL.glMapBufferOES))
    return OpenGL.glMapBufferOES(target, access)
}
fileprivate 
func _load_glMapBufferRange(target:OpenGL.Enum, offset:OpenGL.IntPointer, length:OpenGL.SizePointer, access:OpenGL.Bitfield) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapBufferRange = unsafeBitCast(OpenGL.getfp("glMapBufferRange", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss65]), to: Swift.type(of: OpenGL.glMapBufferRange))
    return OpenGL.glMapBufferRange(target, offset, length, access)
}
fileprivate 
func _load_glMapBufferRangeEXT(target:OpenGL.Enum, offset:OpenGL.IntPointer, length:OpenGL.SizePointer, access:OpenGL.Bitfield) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glMapBufferRangeEXT", support: [OpenGL.ss165]), to: Swift.type(of: OpenGL.glMapBufferRangeEXT))
    return OpenGL.glMapBufferRangeEXT(target, offset, length, access)
}
fileprivate 
func _load_glMapControlPointsNV(target:OpenGL.Enum, index:OpenGL.UInt, type:OpenGL.Enum, ustride:OpenGL.Size, vstride:OpenGL.Size, uorder:OpenGL.Int, vorder:OpenGL.Int, packed:OpenGL.Bool, points:UnsafeRawPointer?)
{
    OpenGL.glMapControlPointsNV = unsafeBitCast(OpenGL.getfp("glMapControlPointsNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glMapControlPointsNV))
    OpenGL.glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points)
}
fileprivate 
func _load_glMapGrid1d(un:OpenGL.Int, u1:OpenGL.Double, u2:OpenGL.Double)
{
    OpenGL.glMapGrid1d = unsafeBitCast(OpenGL.getfp("glMapGrid1d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMapGrid1d))
    OpenGL.glMapGrid1d(un, u1, u2)
}
fileprivate 
func _load_glMapGrid1f(un:OpenGL.Int, u1:OpenGL.Float, u2:OpenGL.Float)
{
    OpenGL.glMapGrid1f = unsafeBitCast(OpenGL.getfp("glMapGrid1f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMapGrid1f))
    OpenGL.glMapGrid1f(un, u1, u2)
}
fileprivate 
func _load_glMapGrid1xOES(n:OpenGL.Int, u1:OpenGL.Fixed, u2:OpenGL.Fixed)
{
    OpenGL.glMapGrid1xOES = unsafeBitCast(OpenGL.getfp("glMapGrid1xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMapGrid1xOES))
    OpenGL.glMapGrid1xOES(n, u1, u2)
}
fileprivate 
func _load_glMapGrid2d(un:OpenGL.Int, u1:OpenGL.Double, u2:OpenGL.Double, vn:OpenGL.Int, v1:OpenGL.Double, v2:OpenGL.Double)
{
    OpenGL.glMapGrid2d = unsafeBitCast(OpenGL.getfp("glMapGrid2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMapGrid2d))
    OpenGL.glMapGrid2d(un, u1, u2, vn, v1, v2)
}
fileprivate 
func _load_glMapGrid2f(un:OpenGL.Int, u1:OpenGL.Float, u2:OpenGL.Float, vn:OpenGL.Int, v1:OpenGL.Float, v2:OpenGL.Float)
{
    OpenGL.glMapGrid2f = unsafeBitCast(OpenGL.getfp("glMapGrid2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMapGrid2f))
    OpenGL.glMapGrid2f(un, u1, u2, vn, v1, v2)
}
fileprivate 
func _load_glMapGrid2xOES(n:OpenGL.Int, u1:OpenGL.Fixed, u2:OpenGL.Fixed, v1:OpenGL.Fixed, v2:OpenGL.Fixed)
{
    OpenGL.glMapGrid2xOES = unsafeBitCast(OpenGL.getfp("glMapGrid2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMapGrid2xOES))
    OpenGL.glMapGrid2xOES(n, u1, u2, v1, v2)
}
fileprivate 
func _load_glMapNamedBuffer(buffer:OpenGL.UInt, access:OpenGL.Enum) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapNamedBuffer = unsafeBitCast(OpenGL.getfp("glMapNamedBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glMapNamedBuffer))
    return OpenGL.glMapNamedBuffer(buffer, access)
}
fileprivate 
func _load_glMapNamedBufferEXT(buffer:OpenGL.UInt, access:OpenGL.Enum) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapNamedBufferEXT = unsafeBitCast(OpenGL.getfp("glMapNamedBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMapNamedBufferEXT))
    return OpenGL.glMapNamedBufferEXT(buffer, access)
}
fileprivate 
func _load_glMapNamedBufferRange(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, length:OpenGL.SizePointer, access:OpenGL.Bitfield) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapNamedBufferRange = unsafeBitCast(OpenGL.getfp("glMapNamedBufferRange", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glMapNamedBufferRange))
    return OpenGL.glMapNamedBufferRange(buffer, offset, length, access)
}
fileprivate 
func _load_glMapNamedBufferRangeEXT(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, length:OpenGL.SizePointer, access:OpenGL.Bitfield) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapNamedBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glMapNamedBufferRangeEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMapNamedBufferRangeEXT))
    return OpenGL.glMapNamedBufferRangeEXT(buffer, offset, length, access)
}
fileprivate 
func _load_glMapObjectBufferATI(buffer:OpenGL.UInt) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapObjectBufferATI = unsafeBitCast(OpenGL.getfp("glMapObjectBufferATI", support: [OpenGL.ss119]), to: Swift.type(of: OpenGL.glMapObjectBufferATI))
    return OpenGL.glMapObjectBufferATI(buffer)
}
fileprivate 
func _load_glMapParameterfvNV(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMapParameterfvNV = unsafeBitCast(OpenGL.getfp("glMapParameterfvNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glMapParameterfvNV))
    OpenGL.glMapParameterfvNV(target, pname, params)
}
fileprivate 
func _load_glMapParameterivNV(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMapParameterivNV = unsafeBitCast(OpenGL.getfp("glMapParameterivNV", support: [OpenGL.ss241]), to: Swift.type(of: OpenGL.glMapParameterivNV))
    OpenGL.glMapParameterivNV(target, pname, params)
}
fileprivate 
func _load_glMapTexture2DINTEL(texture:OpenGL.UInt, level:OpenGL.Int, access:OpenGL.Bitfield, stride:UnsafeMutablePointer<OpenGL.Int>?, layout:UnsafeMutablePointer<OpenGL.Enum>?) -> UnsafeMutableRawPointer?
{
    OpenGL.glMapTexture2DINTEL = unsafeBitCast(OpenGL.getfp("glMapTexture2DINTEL", support: [OpenGL.ss217]), to: Swift.type(of: OpenGL.glMapTexture2DINTEL))
    return OpenGL.glMapTexture2DINTEL(texture, level, access, stride, layout)
}
fileprivate 
func _load_glMapVertexAttrib1dAPPLE(index:OpenGL.UInt, size:OpenGL.UInt, u1:OpenGL.Double, u2:OpenGL.Double, stride:OpenGL.Int, order:OpenGL.Int, points:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMapVertexAttrib1dAPPLE = unsafeBitCast(OpenGL.getfp("glMapVertexAttrib1dAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glMapVertexAttrib1dAPPLE))
    OpenGL.glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points)
}
fileprivate 
func _load_glMapVertexAttrib1fAPPLE(index:OpenGL.UInt, size:OpenGL.UInt, u1:OpenGL.Float, u2:OpenGL.Float, stride:OpenGL.Int, order:OpenGL.Int, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMapVertexAttrib1fAPPLE = unsafeBitCast(OpenGL.getfp("glMapVertexAttrib1fAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glMapVertexAttrib1fAPPLE))
    OpenGL.glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points)
}
fileprivate 
func _load_glMapVertexAttrib2dAPPLE(index:OpenGL.UInt, size:OpenGL.UInt, u1:OpenGL.Double, u2:OpenGL.Double, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Double, v2:OpenGL.Double, vstride:OpenGL.Int, vorder:OpenGL.Int, points:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMapVertexAttrib2dAPPLE = unsafeBitCast(OpenGL.getfp("glMapVertexAttrib2dAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glMapVertexAttrib2dAPPLE))
    OpenGL.glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
fileprivate 
func _load_glMapVertexAttrib2fAPPLE(index:OpenGL.UInt, size:OpenGL.UInt, u1:OpenGL.Float, u2:OpenGL.Float, ustride:OpenGL.Int, uorder:OpenGL.Int, v1:OpenGL.Float, v2:OpenGL.Float, vstride:OpenGL.Int, vorder:OpenGL.Int, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMapVertexAttrib2fAPPLE = unsafeBitCast(OpenGL.getfp("glMapVertexAttrib2fAPPLE", support: [OpenGL.ss27]), to: Swift.type(of: OpenGL.glMapVertexAttrib2fAPPLE))
    OpenGL.glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
fileprivate 
func _load_glMaterialf(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glMaterialf = unsafeBitCast(OpenGL.getfp("glMaterialf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glMaterialf))
    OpenGL.glMaterialf(face, pname, param)
}
fileprivate 
func _load_glMaterialfv(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMaterialfv = unsafeBitCast(OpenGL.getfp("glMaterialfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glMaterialfv))
    OpenGL.glMaterialfv(face, pname, params)
}
fileprivate 
func _load_glMateriali(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glMateriali = unsafeBitCast(OpenGL.getfp("glMateriali", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMateriali))
    OpenGL.glMateriali(face, pname, param)
}
fileprivate 
func _load_glMaterialiv(face:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMaterialiv = unsafeBitCast(OpenGL.getfp("glMaterialiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMaterialiv))
    OpenGL.glMaterialiv(face, pname, params)
}
fileprivate 
func _load_glMaterialx(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glMaterialx = unsafeBitCast(OpenGL.getfp("glMaterialx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glMaterialx))
    OpenGL.glMaterialx(face, pname, param)
}
fileprivate 
func _load_glMaterialxOES(face:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glMaterialxOES = unsafeBitCast(OpenGL.getfp("glMaterialxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMaterialxOES))
    OpenGL.glMaterialxOES(face, pname, param)
}
fileprivate 
func _load_glMaterialxv(face:OpenGL.Enum, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMaterialxv = unsafeBitCast(OpenGL.getfp("glMaterialxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glMaterialxv))
    OpenGL.glMaterialxv(face, pname, param)
}
fileprivate 
func _load_glMaterialxvOES(face:OpenGL.Enum, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMaterialxvOES = unsafeBitCast(OpenGL.getfp("glMaterialxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMaterialxvOES))
    OpenGL.glMaterialxvOES(face, pname, param)
}
fileprivate 
func _load_glMatrixFrustumEXT(mode:OpenGL.Enum, left:OpenGL.Double, right:OpenGL.Double, bottom:OpenGL.Double, top:OpenGL.Double, zNear:OpenGL.Double, zFar:OpenGL.Double)
{
    OpenGL.glMatrixFrustumEXT = unsafeBitCast(OpenGL.getfp("glMatrixFrustumEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixFrustumEXT))
    OpenGL.glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar)
}
fileprivate 
func _load_glMatrixIndexPointerARB(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glMatrixIndexPointerARB = unsafeBitCast(OpenGL.getfp("glMatrixIndexPointerARB", support: [OpenGL.ss66]), to: Swift.type(of: OpenGL.glMatrixIndexPointerARB))
    OpenGL.glMatrixIndexPointerARB(size, type, stride, pointer)
}
fileprivate 
func _load_glMatrixIndexPointerOES(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glMatrixIndexPointerOES = unsafeBitCast(OpenGL.getfp("glMatrixIndexPointerOES", support: [OpenGL.ss297]), to: Swift.type(of: OpenGL.glMatrixIndexPointerOES))
    OpenGL.glMatrixIndexPointerOES(size, type, stride, pointer)
}
fileprivate 
func _load_glMatrixIndexubvARB(size:OpenGL.Int, indices:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glMatrixIndexubvARB = unsafeBitCast(OpenGL.getfp("glMatrixIndexubvARB", support: [OpenGL.ss66]), to: Swift.type(of: OpenGL.glMatrixIndexubvARB))
    OpenGL.glMatrixIndexubvARB(size, indices)
}
fileprivate 
func _load_glMatrixIndexuivARB(size:OpenGL.Int, indices:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMatrixIndexuivARB = unsafeBitCast(OpenGL.getfp("glMatrixIndexuivARB", support: [OpenGL.ss66]), to: Swift.type(of: OpenGL.glMatrixIndexuivARB))
    OpenGL.glMatrixIndexuivARB(size, indices)
}
fileprivate 
func _load_glMatrixIndexusvARB(size:OpenGL.Int, indices:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glMatrixIndexusvARB = unsafeBitCast(OpenGL.getfp("glMatrixIndexusvARB", support: [OpenGL.ss66]), to: Swift.type(of: OpenGL.glMatrixIndexusvARB))
    OpenGL.glMatrixIndexusvARB(size, indices)
}
fileprivate 
func _load_glMatrixLoad3x2fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixLoad3x2fNV = unsafeBitCast(OpenGL.getfp("glMatrixLoad3x2fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixLoad3x2fNV))
    OpenGL.glMatrixLoad3x2fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixLoad3x3fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixLoad3x3fNV = unsafeBitCast(OpenGL.getfp("glMatrixLoad3x3fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixLoad3x3fNV))
    OpenGL.glMatrixLoad3x3fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixLoadIdentityEXT(mode:OpenGL.Enum)
{
    OpenGL.glMatrixLoadIdentityEXT = unsafeBitCast(OpenGL.getfp("glMatrixLoadIdentityEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixLoadIdentityEXT))
    OpenGL.glMatrixLoadIdentityEXT(mode)
}
fileprivate 
func _load_glMatrixLoadTranspose3x3fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixLoadTranspose3x3fNV = unsafeBitCast(OpenGL.getfp("glMatrixLoadTranspose3x3fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixLoadTranspose3x3fNV))
    OpenGL.glMatrixLoadTranspose3x3fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixLoadTransposedEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMatrixLoadTransposedEXT = unsafeBitCast(OpenGL.getfp("glMatrixLoadTransposedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixLoadTransposedEXT))
    OpenGL.glMatrixLoadTransposedEXT(mode, m)
}
fileprivate 
func _load_glMatrixLoadTransposefEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixLoadTransposefEXT = unsafeBitCast(OpenGL.getfp("glMatrixLoadTransposefEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixLoadTransposefEXT))
    OpenGL.glMatrixLoadTransposefEXT(mode, m)
}
fileprivate 
func _load_glMatrixLoaddEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMatrixLoaddEXT = unsafeBitCast(OpenGL.getfp("glMatrixLoaddEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixLoaddEXT))
    OpenGL.glMatrixLoaddEXT(mode, m)
}
fileprivate 
func _load_glMatrixLoadfEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixLoadfEXT = unsafeBitCast(OpenGL.getfp("glMatrixLoadfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixLoadfEXT))
    OpenGL.glMatrixLoadfEXT(mode, m)
}
fileprivate 
func _load_glMatrixMode(mode:OpenGL.Enum)
{
    OpenGL.glMatrixMode = unsafeBitCast(OpenGL.getfp("glMatrixMode", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glMatrixMode))
    OpenGL.glMatrixMode(mode)
}
fileprivate 
func _load_glMatrixMult3x2fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixMult3x2fNV = unsafeBitCast(OpenGL.getfp("glMatrixMult3x2fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixMult3x2fNV))
    OpenGL.glMatrixMult3x2fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixMult3x3fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixMult3x3fNV = unsafeBitCast(OpenGL.getfp("glMatrixMult3x3fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixMult3x3fNV))
    OpenGL.glMatrixMult3x3fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixMultTranspose3x3fNV(matrixMode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixMultTranspose3x3fNV = unsafeBitCast(OpenGL.getfp("glMatrixMultTranspose3x3fNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glMatrixMultTranspose3x3fNV))
    OpenGL.glMatrixMultTranspose3x3fNV(matrixMode, m)
}
fileprivate 
func _load_glMatrixMultTransposedEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMatrixMultTransposedEXT = unsafeBitCast(OpenGL.getfp("glMatrixMultTransposedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixMultTransposedEXT))
    OpenGL.glMatrixMultTransposedEXT(mode, m)
}
fileprivate 
func _load_glMatrixMultTransposefEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixMultTransposefEXT = unsafeBitCast(OpenGL.getfp("glMatrixMultTransposefEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixMultTransposefEXT))
    OpenGL.glMatrixMultTransposefEXT(mode, m)
}
fileprivate 
func _load_glMatrixMultdEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMatrixMultdEXT = unsafeBitCast(OpenGL.getfp("glMatrixMultdEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixMultdEXT))
    OpenGL.glMatrixMultdEXT(mode, m)
}
fileprivate 
func _load_glMatrixMultfEXT(mode:OpenGL.Enum, m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMatrixMultfEXT = unsafeBitCast(OpenGL.getfp("glMatrixMultfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixMultfEXT))
    OpenGL.glMatrixMultfEXT(mode, m)
}
fileprivate 
func _load_glMatrixOrthoEXT(mode:OpenGL.Enum, left:OpenGL.Double, right:OpenGL.Double, bottom:OpenGL.Double, top:OpenGL.Double, zNear:OpenGL.Double, zFar:OpenGL.Double)
{
    OpenGL.glMatrixOrthoEXT = unsafeBitCast(OpenGL.getfp("glMatrixOrthoEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixOrthoEXT))
    OpenGL.glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar)
}
fileprivate 
func _load_glMatrixPopEXT(mode:OpenGL.Enum)
{
    OpenGL.glMatrixPopEXT = unsafeBitCast(OpenGL.getfp("glMatrixPopEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixPopEXT))
    OpenGL.glMatrixPopEXT(mode)
}
fileprivate 
func _load_glMatrixPushEXT(mode:OpenGL.Enum)
{
    OpenGL.glMatrixPushEXT = unsafeBitCast(OpenGL.getfp("glMatrixPushEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixPushEXT))
    OpenGL.glMatrixPushEXT(mode)
}
fileprivate 
func _load_glMatrixRotatedEXT(mode:OpenGL.Enum, angle:OpenGL.Double, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glMatrixRotatedEXT = unsafeBitCast(OpenGL.getfp("glMatrixRotatedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixRotatedEXT))
    OpenGL.glMatrixRotatedEXT(mode, angle, x, y, z)
}
fileprivate 
func _load_glMatrixRotatefEXT(mode:OpenGL.Enum, angle:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glMatrixRotatefEXT = unsafeBitCast(OpenGL.getfp("glMatrixRotatefEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixRotatefEXT))
    OpenGL.glMatrixRotatefEXT(mode, angle, x, y, z)
}
fileprivate 
func _load_glMatrixScaledEXT(mode:OpenGL.Enum, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glMatrixScaledEXT = unsafeBitCast(OpenGL.getfp("glMatrixScaledEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixScaledEXT))
    OpenGL.glMatrixScaledEXT(mode, x, y, z)
}
fileprivate 
func _load_glMatrixScalefEXT(mode:OpenGL.Enum, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glMatrixScalefEXT = unsafeBitCast(OpenGL.getfp("glMatrixScalefEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixScalefEXT))
    OpenGL.glMatrixScalefEXT(mode, x, y, z)
}
fileprivate 
func _load_glMatrixTranslatedEXT(mode:OpenGL.Enum, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glMatrixTranslatedEXT = unsafeBitCast(OpenGL.getfp("glMatrixTranslatedEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixTranslatedEXT))
    OpenGL.glMatrixTranslatedEXT(mode, x, y, z)
}
fileprivate 
func _load_glMatrixTranslatefEXT(mode:OpenGL.Enum, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glMatrixTranslatefEXT = unsafeBitCast(OpenGL.getfp("glMatrixTranslatefEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMatrixTranslatefEXT))
    OpenGL.glMatrixTranslatefEXT(mode, x, y, z)
}
fileprivate 
func _load_glMaxShaderCompilerThreadsARB(count:OpenGL.UInt)
{
    OpenGL.glMaxShaderCompilerThreadsARB = unsafeBitCast(OpenGL.getfp("glMaxShaderCompilerThreadsARB", support: [OpenGL.ss72]), to: Swift.type(of: OpenGL.glMaxShaderCompilerThreadsARB))
    OpenGL.glMaxShaderCompilerThreadsARB(count)
}
fileprivate 
func _load_glMemoryBarrier(barriers:OpenGL.Bitfield)
{
    OpenGL.glMemoryBarrier = unsafeBitCast(OpenGL.getfp("glMemoryBarrier", support: [OpenGL.ss360, OpenGL.ss367, OpenGL.ss82]), to: Swift.type(of: OpenGL.glMemoryBarrier))
    OpenGL.glMemoryBarrier(barriers)
}
fileprivate 
func _load_glMemoryBarrierByRegion(barriers:OpenGL.Bitfield)
{
    OpenGL.glMemoryBarrierByRegion = unsafeBitCast(OpenGL.getfp("glMemoryBarrierByRegion", support: [OpenGL.ss363, OpenGL.ss367, OpenGL.ss29]), to: Swift.type(of: OpenGL.glMemoryBarrierByRegion))
    OpenGL.glMemoryBarrierByRegion(barriers)
}
fileprivate 
func _load_glMemoryBarrierEXT(barriers:OpenGL.Bitfield)
{
    OpenGL.glMemoryBarrierEXT = unsafeBitCast(OpenGL.getfp("glMemoryBarrierEXT", support: [OpenGL.ss183]), to: Swift.type(of: OpenGL.glMemoryBarrierEXT))
    OpenGL.glMemoryBarrierEXT(barriers)
}
fileprivate 
func _load_glMinSampleShading(value:OpenGL.Float)
{
    OpenGL.glMinSampleShading = unsafeBitCast(OpenGL.getfp("glMinSampleShading", support: [OpenGL.ss358, OpenGL.ss368]), to: Swift.type(of: OpenGL.glMinSampleShading))
    OpenGL.glMinSampleShading(value)
}
fileprivate 
func _load_glMinSampleShadingARB(value:OpenGL.Float)
{
    OpenGL.glMinSampleShadingARB = unsafeBitCast(OpenGL.getfp("glMinSampleShadingARB", support: [OpenGL.ss78]), to: Swift.type(of: OpenGL.glMinSampleShadingARB))
    OpenGL.glMinSampleShadingARB(value)
}
fileprivate 
func _load_glMinSampleShadingOES(value:OpenGL.Float)
{
    OpenGL.glMinSampleShadingOES = unsafeBitCast(OpenGL.getfp("glMinSampleShadingOES", support: [OpenGL.ss301]), to: Swift.type(of: OpenGL.glMinSampleShadingOES))
    OpenGL.glMinSampleShadingOES(value)
}
fileprivate 
func _load_glMinmax(target:OpenGL.Enum, internalformat:OpenGL.Enum, sink:OpenGL.Bool)
{
    OpenGL.glMinmax = unsafeBitCast(OpenGL.getfp("glMinmax", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glMinmax))
    OpenGL.glMinmax(target, internalformat, sink)
}
fileprivate 
func _load_glMinmaxEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, sink:OpenGL.Bool)
{
    OpenGL.glMinmaxEXT = unsafeBitCast(OpenGL.getfp("glMinmaxEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glMinmaxEXT))
    OpenGL.glMinmaxEXT(target, internalformat, sink)
}
fileprivate 
func _load_glMultMatrixd(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultMatrixd = unsafeBitCast(OpenGL.getfp("glMultMatrixd", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultMatrixd))
    OpenGL.glMultMatrixd(m)
}
fileprivate 
func _load_glMultMatrixf(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultMatrixf = unsafeBitCast(OpenGL.getfp("glMultMatrixf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glMultMatrixf))
    OpenGL.glMultMatrixf(m)
}
fileprivate 
func _load_glMultMatrixx(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultMatrixx = unsafeBitCast(OpenGL.getfp("glMultMatrixx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glMultMatrixx))
    OpenGL.glMultMatrixx(m)
}
fileprivate 
func _load_glMultMatrixxOES(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultMatrixxOES = unsafeBitCast(OpenGL.getfp("glMultMatrixxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultMatrixxOES))
    OpenGL.glMultMatrixxOES(m)
}
fileprivate 
func _load_glMultTransposeMatrixd(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultTransposeMatrixd = unsafeBitCast(OpenGL.getfp("glMultTransposeMatrixd", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultTransposeMatrixd))
    OpenGL.glMultTransposeMatrixd(m)
}
fileprivate 
func _load_glMultTransposeMatrixdARB(m:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultTransposeMatrixdARB = unsafeBitCast(OpenGL.getfp("glMultTransposeMatrixdARB", support: [OpenGL.ss103]), to: Swift.type(of: OpenGL.glMultTransposeMatrixdARB))
    OpenGL.glMultTransposeMatrixdARB(m)
}
fileprivate 
func _load_glMultTransposeMatrixf(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultTransposeMatrixf = unsafeBitCast(OpenGL.getfp("glMultTransposeMatrixf", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultTransposeMatrixf))
    OpenGL.glMultTransposeMatrixf(m)
}
fileprivate 
func _load_glMultTransposeMatrixfARB(m:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultTransposeMatrixfARB = unsafeBitCast(OpenGL.getfp("glMultTransposeMatrixfARB", support: [OpenGL.ss103]), to: Swift.type(of: OpenGL.glMultTransposeMatrixfARB))
    OpenGL.glMultTransposeMatrixfARB(m)
}
fileprivate 
func _load_glMultTransposeMatrixxOES(m:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultTransposeMatrixxOES = unsafeBitCast(OpenGL.getfp("glMultTransposeMatrixxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultTransposeMatrixxOES))
    OpenGL.glMultTransposeMatrixxOES(m)
}
fileprivate 
func _load_glMultiDrawArrays(mode:OpenGL.Enum, first:UnsafePointer<OpenGL.Int>?, count:UnsafePointer<OpenGL.Size>?, drawcount:OpenGL.Size)
{
    OpenGL.glMultiDrawArrays = unsafeBitCast(OpenGL.getfp("glMultiDrawArrays", support: [OpenGL.ss350]), to: Swift.type(of: OpenGL.glMultiDrawArrays))
    OpenGL.glMultiDrawArrays(mode, first, count, drawcount)
}
fileprivate 
func _load_glMultiDrawArraysEXT(mode:OpenGL.Enum, first:UnsafePointer<OpenGL.Int>?, count:UnsafePointer<OpenGL.Size>?, primcount:OpenGL.Size)
{
    OpenGL.glMultiDrawArraysEXT = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysEXT", support: [OpenGL.ss166]), to: Swift.type(of: OpenGL.glMultiDrawArraysEXT))
    OpenGL.glMultiDrawArraysEXT(mode, first, count, primcount)
}
fileprivate 
func _load_glMultiDrawArraysIndirect(mode:OpenGL.Enum, indirect:UnsafeRawPointer?, drawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawArraysIndirect = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirect", support: [OpenGL.ss361, OpenGL.ss68]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirect))
    OpenGL.glMultiDrawArraysIndirect(mode, indirect, drawcount, stride)
}
fileprivate 
func _load_glMultiDrawArraysIndirectAMD(mode:OpenGL.Enum, indirect:UnsafeRawPointer?, primcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawArraysIndirectAMD = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirectAMD", support: [OpenGL.ss5]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirectAMD))
    OpenGL.glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride)
}
fileprivate 
func _load_glMultiDrawArraysIndirectBindlessCountNV(mode:OpenGL.Enum, indirect:UnsafeRawPointer?, drawCount:OpenGL.Size, maxDrawCount:OpenGL.Size, stride:OpenGL.Size, vertexBufferCount:OpenGL.Int)
{
    OpenGL.glMultiDrawArraysIndirectBindlessCountNV = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirectBindlessCountNV", support: [OpenGL.ss227]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirectBindlessCountNV))
    OpenGL.glMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
fileprivate 
func _load_glMultiDrawArraysIndirectBindlessNV(mode:OpenGL.Enum, indirect:UnsafeRawPointer?, drawCount:OpenGL.Size, stride:OpenGL.Size, vertexBufferCount:OpenGL.Int)
{
    OpenGL.glMultiDrawArraysIndirectBindlessNV = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirectBindlessNV", support: [OpenGL.ss226]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirectBindlessNV))
    OpenGL.glMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount)
}
fileprivate 
func _load_glMultiDrawArraysIndirectCountARB(mode:OpenGL.Enum, indirect:OpenGL.IntPointer, drawcount:OpenGL.IntPointer, maxdrawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawArraysIndirectCountARB = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirectCountARB", support: [OpenGL.ss60]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirectCountARB))
    OpenGL.glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride)
}
fileprivate 
func _load_glMultiDrawArraysIndirectEXT(mode:OpenGL.Enum, indirect:UnsafeRawPointer?, drawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawArraysIndirectEXT = unsafeBitCast(OpenGL.getfp("glMultiDrawArraysIndirectEXT", support: [OpenGL.ss167]), to: Swift.type(of: OpenGL.glMultiDrawArraysIndirectEXT))
    OpenGL.glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride)
}
fileprivate 
func _load_glMultiDrawElementArrayAPPLE(mode:OpenGL.Enum, first:UnsafePointer<OpenGL.Int>?, count:UnsafePointer<OpenGL.Size>?, primcount:OpenGL.Size)
{
    OpenGL.glMultiDrawElementArrayAPPLE = unsafeBitCast(OpenGL.getfp("glMultiDrawElementArrayAPPLE", support: [OpenGL.ss18]), to: Swift.type(of: OpenGL.glMultiDrawElementArrayAPPLE))
    OpenGL.glMultiDrawElementArrayAPPLE(mode, first, count, primcount)
}
fileprivate 
func _load_glMultiDrawElements(mode:OpenGL.Enum, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:OpenGL.Size)
{
    OpenGL.glMultiDrawElements = unsafeBitCast(OpenGL.getfp("glMultiDrawElements", support: [OpenGL.ss350]), to: Swift.type(of: OpenGL.glMultiDrawElements))
    OpenGL.glMultiDrawElements(mode, count, type, indices, drawcount)
}
fileprivate 
func _load_glMultiDrawElementsBaseVertex(mode:OpenGL.Enum, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:OpenGL.Size, basevertex:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiDrawElementsBaseVertex = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsBaseVertex", support: [OpenGL.ss356, OpenGL.ss48]), to: Swift.type(of: OpenGL.glMultiDrawElementsBaseVertex))
    OpenGL.glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex)
}
fileprivate 
func _load_glMultiDrawElementsBaseVertexEXT(mode:OpenGL.Enum, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:OpenGL.Size, basevertex:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiDrawElementsBaseVertexEXT = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsBaseVertexEXT", support: [OpenGL.ss149]), to: Swift.type(of: OpenGL.glMultiDrawElementsBaseVertexEXT))
    OpenGL.glMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex)
}
fileprivate 
func _load_glMultiDrawElementsBaseVertexOES(mode:OpenGL.Enum, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:OpenGL.Size, basevertex:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiDrawElementsBaseVertexOES = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsBaseVertexOES", support: [OpenGL.ss290]), to: Swift.type(of: OpenGL.glMultiDrawElementsBaseVertexOES))
    OpenGL.glMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex)
}
fileprivate 
func _load_glMultiDrawElementsEXT(mode:OpenGL.Enum, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:OpenGL.Size)
{
    OpenGL.glMultiDrawElementsEXT = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsEXT", support: [OpenGL.ss166]), to: Swift.type(of: OpenGL.glMultiDrawElementsEXT))
    OpenGL.glMultiDrawElementsEXT(mode, count, type, indices, primcount)
}
fileprivate 
func _load_glMultiDrawElementsIndirect(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?, drawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawElementsIndirect = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirect", support: [OpenGL.ss361, OpenGL.ss68]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirect))
    OpenGL.glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride)
}
fileprivate 
func _load_glMultiDrawElementsIndirectAMD(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?, primcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawElementsIndirectAMD = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirectAMD", support: [OpenGL.ss5]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirectAMD))
    OpenGL.glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride)
}
fileprivate 
func _load_glMultiDrawElementsIndirectBindlessCountNV(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?, drawCount:OpenGL.Size, maxDrawCount:OpenGL.Size, stride:OpenGL.Size, vertexBufferCount:OpenGL.Int)
{
    OpenGL.glMultiDrawElementsIndirectBindlessCountNV = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirectBindlessCountNV", support: [OpenGL.ss227]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirectBindlessCountNV))
    OpenGL.glMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
fileprivate 
func _load_glMultiDrawElementsIndirectBindlessNV(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?, drawCount:OpenGL.Size, stride:OpenGL.Size, vertexBufferCount:OpenGL.Int)
{
    OpenGL.glMultiDrawElementsIndirectBindlessNV = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirectBindlessNV", support: [OpenGL.ss226]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirectBindlessNV))
    OpenGL.glMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount)
}
fileprivate 
func _load_glMultiDrawElementsIndirectCountARB(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:OpenGL.IntPointer, drawcount:OpenGL.IntPointer, maxdrawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawElementsIndirectCountARB = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirectCountARB", support: [OpenGL.ss60]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirectCountARB))
    OpenGL.glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride)
}
fileprivate 
func _load_glMultiDrawElementsIndirectEXT(mode:OpenGL.Enum, type:OpenGL.Enum, indirect:UnsafeRawPointer?, drawcount:OpenGL.Size, stride:OpenGL.Size)
{
    OpenGL.glMultiDrawElementsIndirectEXT = unsafeBitCast(OpenGL.getfp("glMultiDrawElementsIndirectEXT", support: [OpenGL.ss167]), to: Swift.type(of: OpenGL.glMultiDrawElementsIndirectEXT))
    OpenGL.glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride)
}
fileprivate 
func _load_glMultiDrawRangeElementArrayAPPLE(mode:OpenGL.Enum, start:OpenGL.UInt, end:OpenGL.UInt, first:UnsafePointer<OpenGL.Int>?, count:UnsafePointer<OpenGL.Size>?, primcount:OpenGL.Size)
{
    OpenGL.glMultiDrawRangeElementArrayAPPLE = unsafeBitCast(OpenGL.getfp("glMultiDrawRangeElementArrayAPPLE", support: [OpenGL.ss18]), to: Swift.type(of: OpenGL.glMultiDrawRangeElementArrayAPPLE))
    OpenGL.glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)
}
fileprivate 
func _load_glMultiModeDrawArraysIBM(mode:UnsafePointer<OpenGL.Enum>?, first:UnsafePointer<OpenGL.Int>?, count:UnsafePointer<OpenGL.Size>?, primcount:OpenGL.Size, modestride:OpenGL.Int)
{
    OpenGL.glMultiModeDrawArraysIBM = unsafeBitCast(OpenGL.getfp("glMultiModeDrawArraysIBM", support: [OpenGL.ss210]), to: Swift.type(of: OpenGL.glMultiModeDrawArraysIBM))
    OpenGL.glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride)
}
fileprivate 
func _load_glMultiModeDrawElementsIBM(mode:UnsafePointer<OpenGL.Enum>?, count:UnsafePointer<OpenGL.Size>?, type:OpenGL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:OpenGL.Size, modestride:OpenGL.Int)
{
    OpenGL.glMultiModeDrawElementsIBM = unsafeBitCast(OpenGL.getfp("glMultiModeDrawElementsIBM", support: [OpenGL.ss210]), to: Swift.type(of: OpenGL.glMultiModeDrawElementsIBM))
    OpenGL.glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride)
}
fileprivate 
func _load_glMultiTexBufferEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glMultiTexBufferEXT = unsafeBitCast(OpenGL.getfp("glMultiTexBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexBufferEXT))
    OpenGL.glMultiTexBufferEXT(texunit, target, internalformat, buffer)
}
fileprivate 
func _load_glMultiTexCoord1bOES(texture:OpenGL.Enum, s:OpenGL.Byte)
{
    OpenGL.glMultiTexCoord1bOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord1bOES))
    OpenGL.glMultiTexCoord1bOES(texture, s)
}
fileprivate 
func _load_glMultiTexCoord1bvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glMultiTexCoord1bvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord1bvOES))
    OpenGL.glMultiTexCoord1bvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord1d(target:OpenGL.Enum, s:OpenGL.Double)
{
    OpenGL.glMultiTexCoord1d = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1d", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1d))
    OpenGL.glMultiTexCoord1d(target, s)
}
fileprivate 
func _load_glMultiTexCoord1dARB(target:OpenGL.Enum, s:OpenGL.Double)
{
    OpenGL.glMultiTexCoord1dARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1dARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1dARB))
    OpenGL.glMultiTexCoord1dARB(target, s)
}
fileprivate 
func _load_glMultiTexCoord1dv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord1dv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1dv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1dv))
    OpenGL.glMultiTexCoord1dv(target, v)
}
fileprivate 
func _load_glMultiTexCoord1dvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord1dvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1dvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1dvARB))
    OpenGL.glMultiTexCoord1dvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord1f(target:OpenGL.Enum, s:OpenGL.Float)
{
    OpenGL.glMultiTexCoord1f = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1f", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1f))
    OpenGL.glMultiTexCoord1f(target, s)
}
fileprivate 
func _load_glMultiTexCoord1fARB(target:OpenGL.Enum, s:OpenGL.Float)
{
    OpenGL.glMultiTexCoord1fARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1fARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1fARB))
    OpenGL.glMultiTexCoord1fARB(target, s)
}
fileprivate 
func _load_glMultiTexCoord1fv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord1fv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1fv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1fv))
    OpenGL.glMultiTexCoord1fv(target, v)
}
fileprivate 
func _load_glMultiTexCoord1fvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord1fvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1fvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1fvARB))
    OpenGL.glMultiTexCoord1fvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord1hNV(target:OpenGL.Enum, s:OpenGL.HalfNV)
{
    OpenGL.glMultiTexCoord1hNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord1hNV))
    OpenGL.glMultiTexCoord1hNV(target, s)
}
fileprivate 
func _load_glMultiTexCoord1hvNV(target:OpenGL.Enum, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glMultiTexCoord1hvNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord1hvNV))
    OpenGL.glMultiTexCoord1hvNV(target, v)
}
fileprivate 
func _load_glMultiTexCoord1i(target:OpenGL.Enum, s:OpenGL.Int)
{
    OpenGL.glMultiTexCoord1i = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1i", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1i))
    OpenGL.glMultiTexCoord1i(target, s)
}
fileprivate 
func _load_glMultiTexCoord1iARB(target:OpenGL.Enum, s:OpenGL.Int)
{
    OpenGL.glMultiTexCoord1iARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1iARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1iARB))
    OpenGL.glMultiTexCoord1iARB(target, s)
}
fileprivate 
func _load_glMultiTexCoord1iv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord1iv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1iv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1iv))
    OpenGL.glMultiTexCoord1iv(target, v)
}
fileprivate 
func _load_glMultiTexCoord1ivARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord1ivARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1ivARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1ivARB))
    OpenGL.glMultiTexCoord1ivARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord1s(target:OpenGL.Enum, s:OpenGL.Short)
{
    OpenGL.glMultiTexCoord1s = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1s", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1s))
    OpenGL.glMultiTexCoord1s(target, s)
}
fileprivate 
func _load_glMultiTexCoord1sARB(target:OpenGL.Enum, s:OpenGL.Short)
{
    OpenGL.glMultiTexCoord1sARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1sARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1sARB))
    OpenGL.glMultiTexCoord1sARB(target, s)
}
fileprivate 
func _load_glMultiTexCoord1sv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord1sv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1sv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord1sv))
    OpenGL.glMultiTexCoord1sv(target, v)
}
fileprivate 
func _load_glMultiTexCoord1svARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord1svARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1svARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord1svARB))
    OpenGL.glMultiTexCoord1svARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord1xOES(texture:OpenGL.Enum, s:OpenGL.Fixed)
{
    OpenGL.glMultiTexCoord1xOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord1xOES))
    OpenGL.glMultiTexCoord1xOES(texture, s)
}
fileprivate 
func _load_glMultiTexCoord1xvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultiTexCoord1xvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord1xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord1xvOES))
    OpenGL.glMultiTexCoord1xvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord2bOES(texture:OpenGL.Enum, s:OpenGL.Byte, t:OpenGL.Byte)
{
    OpenGL.glMultiTexCoord2bOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord2bOES))
    OpenGL.glMultiTexCoord2bOES(texture, s, t)
}
fileprivate 
func _load_glMultiTexCoord2bvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glMultiTexCoord2bvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord2bvOES))
    OpenGL.glMultiTexCoord2bvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord2d(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double)
{
    OpenGL.glMultiTexCoord2d = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2d", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2d))
    OpenGL.glMultiTexCoord2d(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2dARB(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double)
{
    OpenGL.glMultiTexCoord2dARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2dARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2dARB))
    OpenGL.glMultiTexCoord2dARB(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2dv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord2dv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2dv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2dv))
    OpenGL.glMultiTexCoord2dv(target, v)
}
fileprivate 
func _load_glMultiTexCoord2dvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord2dvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2dvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2dvARB))
    OpenGL.glMultiTexCoord2dvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord2f(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float)
{
    OpenGL.glMultiTexCoord2f = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2f", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2f))
    OpenGL.glMultiTexCoord2f(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2fARB(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float)
{
    OpenGL.glMultiTexCoord2fARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2fARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2fARB))
    OpenGL.glMultiTexCoord2fARB(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2fv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord2fv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2fv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2fv))
    OpenGL.glMultiTexCoord2fv(target, v)
}
fileprivate 
func _load_glMultiTexCoord2fvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord2fvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2fvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2fvARB))
    OpenGL.glMultiTexCoord2fvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord2hNV(target:OpenGL.Enum, s:OpenGL.HalfNV, t:OpenGL.HalfNV)
{
    OpenGL.glMultiTexCoord2hNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord2hNV))
    OpenGL.glMultiTexCoord2hNV(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2hvNV(target:OpenGL.Enum, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glMultiTexCoord2hvNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord2hvNV))
    OpenGL.glMultiTexCoord2hvNV(target, v)
}
fileprivate 
func _load_glMultiTexCoord2i(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int)
{
    OpenGL.glMultiTexCoord2i = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2i", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2i))
    OpenGL.glMultiTexCoord2i(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2iARB(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int)
{
    OpenGL.glMultiTexCoord2iARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2iARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2iARB))
    OpenGL.glMultiTexCoord2iARB(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2iv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord2iv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2iv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2iv))
    OpenGL.glMultiTexCoord2iv(target, v)
}
fileprivate 
func _load_glMultiTexCoord2ivARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord2ivARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2ivARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2ivARB))
    OpenGL.glMultiTexCoord2ivARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord2s(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short)
{
    OpenGL.glMultiTexCoord2s = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2s", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2s))
    OpenGL.glMultiTexCoord2s(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2sARB(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short)
{
    OpenGL.glMultiTexCoord2sARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2sARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2sARB))
    OpenGL.glMultiTexCoord2sARB(target, s, t)
}
fileprivate 
func _load_glMultiTexCoord2sv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord2sv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2sv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord2sv))
    OpenGL.glMultiTexCoord2sv(target, v)
}
fileprivate 
func _load_glMultiTexCoord2svARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord2svARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2svARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord2svARB))
    OpenGL.glMultiTexCoord2svARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord2xOES(texture:OpenGL.Enum, s:OpenGL.Fixed, t:OpenGL.Fixed)
{
    OpenGL.glMultiTexCoord2xOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord2xOES))
    OpenGL.glMultiTexCoord2xOES(texture, s, t)
}
fileprivate 
func _load_glMultiTexCoord2xvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultiTexCoord2xvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord2xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord2xvOES))
    OpenGL.glMultiTexCoord2xvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord3bOES(texture:OpenGL.Enum, s:OpenGL.Byte, t:OpenGL.Byte, r:OpenGL.Byte)
{
    OpenGL.glMultiTexCoord3bOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord3bOES))
    OpenGL.glMultiTexCoord3bOES(texture, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3bvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glMultiTexCoord3bvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord3bvOES))
    OpenGL.glMultiTexCoord3bvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord3d(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double)
{
    OpenGL.glMultiTexCoord3d = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3d", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3d))
    OpenGL.glMultiTexCoord3d(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3dARB(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double)
{
    OpenGL.glMultiTexCoord3dARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3dARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3dARB))
    OpenGL.glMultiTexCoord3dARB(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3dv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord3dv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3dv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3dv))
    OpenGL.glMultiTexCoord3dv(target, v)
}
fileprivate 
func _load_glMultiTexCoord3dvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord3dvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3dvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3dvARB))
    OpenGL.glMultiTexCoord3dvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord3f(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float)
{
    OpenGL.glMultiTexCoord3f = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3f", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3f))
    OpenGL.glMultiTexCoord3f(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3fARB(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float)
{
    OpenGL.glMultiTexCoord3fARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3fARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3fARB))
    OpenGL.glMultiTexCoord3fARB(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3fv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord3fv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3fv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3fv))
    OpenGL.glMultiTexCoord3fv(target, v)
}
fileprivate 
func _load_glMultiTexCoord3fvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord3fvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3fvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3fvARB))
    OpenGL.glMultiTexCoord3fvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord3hNV(target:OpenGL.Enum, s:OpenGL.HalfNV, t:OpenGL.HalfNV, r:OpenGL.HalfNV)
{
    OpenGL.glMultiTexCoord3hNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord3hNV))
    OpenGL.glMultiTexCoord3hNV(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3hvNV(target:OpenGL.Enum, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glMultiTexCoord3hvNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord3hvNV))
    OpenGL.glMultiTexCoord3hvNV(target, v)
}
fileprivate 
func _load_glMultiTexCoord3i(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int)
{
    OpenGL.glMultiTexCoord3i = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3i", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3i))
    OpenGL.glMultiTexCoord3i(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3iARB(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int)
{
    OpenGL.glMultiTexCoord3iARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3iARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3iARB))
    OpenGL.glMultiTexCoord3iARB(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3iv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord3iv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3iv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3iv))
    OpenGL.glMultiTexCoord3iv(target, v)
}
fileprivate 
func _load_glMultiTexCoord3ivARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord3ivARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3ivARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3ivARB))
    OpenGL.glMultiTexCoord3ivARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord3s(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short)
{
    OpenGL.glMultiTexCoord3s = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3s", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3s))
    OpenGL.glMultiTexCoord3s(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3sARB(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short)
{
    OpenGL.glMultiTexCoord3sARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3sARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3sARB))
    OpenGL.glMultiTexCoord3sARB(target, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3sv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord3sv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3sv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord3sv))
    OpenGL.glMultiTexCoord3sv(target, v)
}
fileprivate 
func _load_glMultiTexCoord3svARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord3svARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3svARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord3svARB))
    OpenGL.glMultiTexCoord3svARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord3xOES(texture:OpenGL.Enum, s:OpenGL.Fixed, t:OpenGL.Fixed, r:OpenGL.Fixed)
{
    OpenGL.glMultiTexCoord3xOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord3xOES))
    OpenGL.glMultiTexCoord3xOES(texture, s, t, r)
}
fileprivate 
func _load_glMultiTexCoord3xvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultiTexCoord3xvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord3xvOES))
    OpenGL.glMultiTexCoord3xvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord4bOES(texture:OpenGL.Enum, s:OpenGL.Byte, t:OpenGL.Byte, r:OpenGL.Byte, q:OpenGL.Byte)
{
    OpenGL.glMultiTexCoord4bOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord4bOES))
    OpenGL.glMultiTexCoord4bOES(texture, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4bvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glMultiTexCoord4bvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glMultiTexCoord4bvOES))
    OpenGL.glMultiTexCoord4bvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoord4d(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double, q:OpenGL.Double)
{
    OpenGL.glMultiTexCoord4d = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4d", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4d))
    OpenGL.glMultiTexCoord4d(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4dARB(target:OpenGL.Enum, s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double, q:OpenGL.Double)
{
    OpenGL.glMultiTexCoord4dARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4dARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4dARB))
    OpenGL.glMultiTexCoord4dARB(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4dv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord4dv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4dv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4dv))
    OpenGL.glMultiTexCoord4dv(target, v)
}
fileprivate 
func _load_glMultiTexCoord4dvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexCoord4dvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4dvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4dvARB))
    OpenGL.glMultiTexCoord4dvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord4f(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, q:OpenGL.Float)
{
    OpenGL.glMultiTexCoord4f = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4f", support: [OpenGL.ss349, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glMultiTexCoord4f))
    OpenGL.glMultiTexCoord4f(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4fARB(target:OpenGL.Enum, s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, q:OpenGL.Float)
{
    OpenGL.glMultiTexCoord4fARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4fARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4fARB))
    OpenGL.glMultiTexCoord4fARB(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4fv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord4fv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4fv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4fv))
    OpenGL.glMultiTexCoord4fv(target, v)
}
fileprivate 
func _load_glMultiTexCoord4fvARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexCoord4fvARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4fvARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4fvARB))
    OpenGL.glMultiTexCoord4fvARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord4hNV(target:OpenGL.Enum, s:OpenGL.HalfNV, t:OpenGL.HalfNV, r:OpenGL.HalfNV, q:OpenGL.HalfNV)
{
    OpenGL.glMultiTexCoord4hNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord4hNV))
    OpenGL.glMultiTexCoord4hNV(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4hvNV(target:OpenGL.Enum, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glMultiTexCoord4hvNV = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glMultiTexCoord4hvNV))
    OpenGL.glMultiTexCoord4hvNV(target, v)
}
fileprivate 
func _load_glMultiTexCoord4i(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int, q:OpenGL.Int)
{
    OpenGL.glMultiTexCoord4i = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4i", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4i))
    OpenGL.glMultiTexCoord4i(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4iARB(target:OpenGL.Enum, s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int, q:OpenGL.Int)
{
    OpenGL.glMultiTexCoord4iARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4iARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4iARB))
    OpenGL.glMultiTexCoord4iARB(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4iv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord4iv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4iv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4iv))
    OpenGL.glMultiTexCoord4iv(target, v)
}
fileprivate 
func _load_glMultiTexCoord4ivARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexCoord4ivARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4ivARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4ivARB))
    OpenGL.glMultiTexCoord4ivARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord4s(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short, q:OpenGL.Short)
{
    OpenGL.glMultiTexCoord4s = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4s", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4s))
    OpenGL.glMultiTexCoord4s(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4sARB(target:OpenGL.Enum, s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short, q:OpenGL.Short)
{
    OpenGL.glMultiTexCoord4sARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4sARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4sARB))
    OpenGL.glMultiTexCoord4sARB(target, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4sv(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord4sv = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4sv", support: [OpenGL.ss349, OpenGL.ss369]), to: Swift.type(of: OpenGL.glMultiTexCoord4sv))
    OpenGL.glMultiTexCoord4sv(target, v)
}
fileprivate 
func _load_glMultiTexCoord4svARB(target:OpenGL.Enum, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glMultiTexCoord4svARB = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4svARB", support: [OpenGL.ss70]), to: Swift.type(of: OpenGL.glMultiTexCoord4svARB))
    OpenGL.glMultiTexCoord4svARB(target, v)
}
fileprivate 
func _load_glMultiTexCoord4x(texture:OpenGL.Enum, s:OpenGL.Fixed, t:OpenGL.Fixed, r:OpenGL.Fixed, q:OpenGL.Fixed)
{
    OpenGL.glMultiTexCoord4x = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4x", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glMultiTexCoord4x))
    OpenGL.glMultiTexCoord4x(texture, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4xOES(texture:OpenGL.Enum, s:OpenGL.Fixed, t:OpenGL.Fixed, r:OpenGL.Fixed, q:OpenGL.Fixed)
{
    OpenGL.glMultiTexCoord4xOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord4xOES))
    OpenGL.glMultiTexCoord4xOES(texture, s, t, r, q)
}
fileprivate 
func _load_glMultiTexCoord4xvOES(texture:OpenGL.Enum, coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glMultiTexCoord4xvOES = unsafeBitCast(OpenGL.getfp("glMultiTexCoord4xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glMultiTexCoord4xvOES))
    OpenGL.glMultiTexCoord4xvOES(texture, coords)
}
fileprivate 
func _load_glMultiTexCoordP1ui(texture:OpenGL.Enum, type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glMultiTexCoordP1ui = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP1ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP1ui))
    OpenGL.glMultiTexCoordP1ui(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP1uiv(texture:OpenGL.Enum, type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMultiTexCoordP1uiv = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP1uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP1uiv))
    OpenGL.glMultiTexCoordP1uiv(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP2ui(texture:OpenGL.Enum, type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glMultiTexCoordP2ui = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP2ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP2ui))
    OpenGL.glMultiTexCoordP2ui(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP2uiv(texture:OpenGL.Enum, type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMultiTexCoordP2uiv = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP2uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP2uiv))
    OpenGL.glMultiTexCoordP2uiv(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP3ui(texture:OpenGL.Enum, type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glMultiTexCoordP3ui = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP3ui))
    OpenGL.glMultiTexCoordP3ui(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP3uiv(texture:OpenGL.Enum, type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMultiTexCoordP3uiv = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP3uiv))
    OpenGL.glMultiTexCoordP3uiv(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP4ui(texture:OpenGL.Enum, type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glMultiTexCoordP4ui = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP4ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP4ui))
    OpenGL.glMultiTexCoordP4ui(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordP4uiv(texture:OpenGL.Enum, type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMultiTexCoordP4uiv = unsafeBitCast(OpenGL.getfp("glMultiTexCoordP4uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glMultiTexCoordP4uiv))
    OpenGL.glMultiTexCoordP4uiv(texture, type, coords)
}
fileprivate 
func _load_glMultiTexCoordPointerEXT(texunit:OpenGL.Enum, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glMultiTexCoordPointerEXT = unsafeBitCast(OpenGL.getfp("glMultiTexCoordPointerEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexCoordPointerEXT))
    OpenGL.glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer)
}
fileprivate 
func _load_glMultiTexEnvfEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glMultiTexEnvfEXT = unsafeBitCast(OpenGL.getfp("glMultiTexEnvfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexEnvfEXT))
    OpenGL.glMultiTexEnvfEXT(texunit, target, pname, param)
}
fileprivate 
func _load_glMultiTexEnvfvEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexEnvfvEXT = unsafeBitCast(OpenGL.getfp("glMultiTexEnvfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexEnvfvEXT))
    OpenGL.glMultiTexEnvfvEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexEnviEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glMultiTexEnviEXT = unsafeBitCast(OpenGL.getfp("glMultiTexEnviEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexEnviEXT))
    OpenGL.glMultiTexEnviEXT(texunit, target, pname, param)
}
fileprivate 
func _load_glMultiTexEnvivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexEnvivEXT = unsafeBitCast(OpenGL.getfp("glMultiTexEnvivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexEnvivEXT))
    OpenGL.glMultiTexEnvivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexGendEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Double)
{
    OpenGL.glMultiTexGendEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGendEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGendEXT))
    OpenGL.glMultiTexGendEXT(texunit, coord, pname, param)
}
fileprivate 
func _load_glMultiTexGendvEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glMultiTexGendvEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGendvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGendvEXT))
    OpenGL.glMultiTexGendvEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glMultiTexGenfEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glMultiTexGenfEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGenfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGenfEXT))
    OpenGL.glMultiTexGenfEXT(texunit, coord, pname, param)
}
fileprivate 
func _load_glMultiTexGenfvEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexGenfvEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGenfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGenfvEXT))
    OpenGL.glMultiTexGenfvEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glMultiTexGeniEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glMultiTexGeniEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGeniEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGeniEXT))
    OpenGL.glMultiTexGeniEXT(texunit, coord, pname, param)
}
fileprivate 
func _load_glMultiTexGenivEXT(texunit:OpenGL.Enum, coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexGenivEXT = unsafeBitCast(OpenGL.getfp("glMultiTexGenivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexGenivEXT))
    OpenGL.glMultiTexGenivEXT(texunit, coord, pname, params)
}
fileprivate 
func _load_glMultiTexImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexImage1DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexImage1DEXT))
    OpenGL.glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels)
}
fileprivate 
func _load_glMultiTexImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexImage2DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexImage2DEXT))
    OpenGL.glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels)
}
fileprivate 
func _load_glMultiTexImage3DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexImage3DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexImage3DEXT))
    OpenGL.glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
fileprivate 
func _load_glMultiTexParameterIivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexParameterIivEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameterIivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameterIivEXT))
    OpenGL.glMultiTexParameterIivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexParameterIuivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glMultiTexParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameterIuivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameterIuivEXT))
    OpenGL.glMultiTexParameterIuivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexParameterfEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glMultiTexParameterfEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameterfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameterfEXT))
    OpenGL.glMultiTexParameterfEXT(texunit, target, pname, param)
}
fileprivate 
func _load_glMultiTexParameterfvEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glMultiTexParameterfvEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameterfvEXT))
    OpenGL.glMultiTexParameterfvEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexParameteriEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glMultiTexParameteriEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameteriEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameteriEXT))
    OpenGL.glMultiTexParameteriEXT(texunit, target, pname, param)
}
fileprivate 
func _load_glMultiTexParameterivEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glMultiTexParameterivEXT = unsafeBitCast(OpenGL.getfp("glMultiTexParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexParameterivEXT))
    OpenGL.glMultiTexParameterivEXT(texunit, target, pname, params)
}
fileprivate 
func _load_glMultiTexRenderbufferEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glMultiTexRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glMultiTexRenderbufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexRenderbufferEXT))
    OpenGL.glMultiTexRenderbufferEXT(texunit, target, renderbuffer)
}
fileprivate 
func _load_glMultiTexSubImage1DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexSubImage1DEXT))
    OpenGL.glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels)
}
fileprivate 
func _load_glMultiTexSubImage2DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexSubImage2DEXT))
    OpenGL.glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
fileprivate 
func _load_glMultiTexSubImage3DEXT(texunit:OpenGL.Enum, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glMultiTexSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glMultiTexSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glMultiTexSubImage3DEXT))
    OpenGL.glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glNamedBufferData(buffer:OpenGL.UInt, size:OpenGL.SizePointer, data:UnsafeRawPointer?, usage:OpenGL.Enum)
{
    OpenGL.glNamedBufferData = unsafeBitCast(OpenGL.getfp("glNamedBufferData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedBufferData))
    OpenGL.glNamedBufferData(buffer, size, data, usage)
}
fileprivate 
func _load_glNamedBufferDataEXT(buffer:OpenGL.UInt, size:OpenGL.SizePointer, data:UnsafeRawPointer?, usage:OpenGL.Enum)
{
    OpenGL.glNamedBufferDataEXT = unsafeBitCast(OpenGL.getfp("glNamedBufferDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedBufferDataEXT))
    OpenGL.glNamedBufferDataEXT(buffer, size, data, usage)
}
fileprivate 
func _load_glNamedBufferPageCommitmentARB(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, commit:OpenGL.Bool)
{
    OpenGL.glNamedBufferPageCommitmentARB = unsafeBitCast(OpenGL.getfp("glNamedBufferPageCommitmentARB", support: [OpenGL.ss87]), to: Swift.type(of: OpenGL.glNamedBufferPageCommitmentARB))
    OpenGL.glNamedBufferPageCommitmentARB(buffer, offset, size, commit)
}
fileprivate 
func _load_glNamedBufferPageCommitmentEXT(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, commit:OpenGL.Bool)
{
    OpenGL.glNamedBufferPageCommitmentEXT = unsafeBitCast(OpenGL.getfp("glNamedBufferPageCommitmentEXT", support: [OpenGL.ss87]), to: Swift.type(of: OpenGL.glNamedBufferPageCommitmentEXT))
    OpenGL.glNamedBufferPageCommitmentEXT(buffer, offset, size, commit)
}
fileprivate 
func _load_glNamedBufferStorage(buffer:OpenGL.UInt, size:OpenGL.SizePointer, data:UnsafeRawPointer?, flags:OpenGL.Bitfield)
{
    OpenGL.glNamedBufferStorage = unsafeBitCast(OpenGL.getfp("glNamedBufferStorage", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedBufferStorage))
    OpenGL.glNamedBufferStorage(buffer, size, data, flags)
}
fileprivate 
func _load_glNamedBufferStorageEXT(buffer:OpenGL.UInt, size:OpenGL.SizePointer, data:UnsafeRawPointer?, flags:OpenGL.Bitfield)
{
    OpenGL.glNamedBufferStorageEXT = unsafeBitCast(OpenGL.getfp("glNamedBufferStorageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedBufferStorageEXT))
    OpenGL.glNamedBufferStorageEXT(buffer, size, data, flags)
}
fileprivate 
func _load_glNamedBufferSubData(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeRawPointer?)
{
    OpenGL.glNamedBufferSubData = unsafeBitCast(OpenGL.getfp("glNamedBufferSubData", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedBufferSubData))
    OpenGL.glNamedBufferSubData(buffer, offset, size, data)
}
fileprivate 
func _load_glNamedBufferSubDataEXT(buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer, data:UnsafeRawPointer?)
{
    OpenGL.glNamedBufferSubDataEXT = unsafeBitCast(OpenGL.getfp("glNamedBufferSubDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedBufferSubDataEXT))
    OpenGL.glNamedBufferSubDataEXT(buffer, offset, size, data)
}
fileprivate 
func _load_glNamedCopyBufferSubDataEXT(readBuffer:OpenGL.UInt, writeBuffer:OpenGL.UInt, readOffset:OpenGL.IntPointer, writeOffset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glNamedCopyBufferSubDataEXT = unsafeBitCast(OpenGL.getfp("glNamedCopyBufferSubDataEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedCopyBufferSubDataEXT))
    OpenGL.glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
fileprivate 
func _load_glNamedFramebufferDrawBuffer(framebuffer:OpenGL.UInt, buf:OpenGL.Enum)
{
    OpenGL.glNamedFramebufferDrawBuffer = unsafeBitCast(OpenGL.getfp("glNamedFramebufferDrawBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferDrawBuffer))
    OpenGL.glNamedFramebufferDrawBuffer(framebuffer, buf)
}
fileprivate 
func _load_glNamedFramebufferDrawBuffers(framebuffer:OpenGL.UInt, n:OpenGL.Size, bufs:UnsafePointer<OpenGL.Enum>?)
{
    OpenGL.glNamedFramebufferDrawBuffers = unsafeBitCast(OpenGL.getfp("glNamedFramebufferDrawBuffers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferDrawBuffers))
    OpenGL.glNamedFramebufferDrawBuffers(framebuffer, n, bufs)
}
fileprivate 
func _load_glNamedFramebufferParameteri(framebuffer:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glNamedFramebufferParameteri = unsafeBitCast(OpenGL.getfp("glNamedFramebufferParameteri", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferParameteri))
    OpenGL.glNamedFramebufferParameteri(framebuffer, pname, param)
}
fileprivate 
func _load_glNamedFramebufferParameteriEXT(framebuffer:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glNamedFramebufferParameteriEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferParameteriEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferParameteriEXT))
    OpenGL.glNamedFramebufferParameteriEXT(framebuffer, pname, param)
}
fileprivate 
func _load_glNamedFramebufferReadBuffer(framebuffer:OpenGL.UInt, src:OpenGL.Enum)
{
    OpenGL.glNamedFramebufferReadBuffer = unsafeBitCast(OpenGL.getfp("glNamedFramebufferReadBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferReadBuffer))
    OpenGL.glNamedFramebufferReadBuffer(framebuffer, src)
}
fileprivate 
func _load_glNamedFramebufferRenderbuffer(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, renderbuffertarget:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glNamedFramebufferRenderbuffer = unsafeBitCast(OpenGL.getfp("glNamedFramebufferRenderbuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferRenderbuffer))
    OpenGL.glNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
fileprivate 
func _load_glNamedFramebufferRenderbufferEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, renderbuffertarget:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glNamedFramebufferRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferRenderbufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferRenderbufferEXT))
    OpenGL.glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
fileprivate 
func _load_glNamedFramebufferSampleLocationsfvARB(framebuffer:OpenGL.UInt, start:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNamedFramebufferSampleLocationsfvARB = unsafeBitCast(OpenGL.getfp("glNamedFramebufferSampleLocationsfvARB", support: [OpenGL.ss77]), to: Swift.type(of: OpenGL.glNamedFramebufferSampleLocationsfvARB))
    OpenGL.glNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v)
}
fileprivate 
func _load_glNamedFramebufferSampleLocationsfvNV(framebuffer:OpenGL.UInt, start:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNamedFramebufferSampleLocationsfvNV = unsafeBitCast(OpenGL.getfp("glNamedFramebufferSampleLocationsfvNV", support: [OpenGL.ss269]), to: Swift.type(of: OpenGL.glNamedFramebufferSampleLocationsfvNV))
    OpenGL.glNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v)
}
fileprivate 
func _load_glNamedFramebufferTexture(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTexture = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTexture", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferTexture))
    OpenGL.glNamedFramebufferTexture(framebuffer, attachment, texture, level)
}
fileprivate 
func _load_glNamedFramebufferTexture1DEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTexture1DEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTexture1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTexture1DEXT))
    OpenGL.glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level)
}
fileprivate 
func _load_glNamedFramebufferTexture2DEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTexture2DEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTexture2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTexture2DEXT))
    OpenGL.glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level)
}
fileprivate 
func _load_glNamedFramebufferTexture3DEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, textarget:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, zoffset:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTexture3DEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTexture3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTexture3DEXT))
    OpenGL.glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset)
}
fileprivate 
func _load_glNamedFramebufferTextureEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTextureEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTextureEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTextureEXT))
    OpenGL.glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level)
}
fileprivate 
func _load_glNamedFramebufferTextureFaceEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, face:OpenGL.Enum)
{
    OpenGL.glNamedFramebufferTextureFaceEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTextureFaceEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTextureFaceEXT))
    OpenGL.glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face)
}
fileprivate 
func _load_glNamedFramebufferTextureLayer(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, layer:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTextureLayer = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTextureLayer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedFramebufferTextureLayer))
    OpenGL.glNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer)
}
fileprivate 
func _load_glNamedFramebufferTextureLayerEXT(framebuffer:OpenGL.UInt, attachment:OpenGL.Enum, texture:OpenGL.UInt, level:OpenGL.Int, layer:OpenGL.Int)
{
    OpenGL.glNamedFramebufferTextureLayerEXT = unsafeBitCast(OpenGL.getfp("glNamedFramebufferTextureLayerEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedFramebufferTextureLayerEXT))
    OpenGL.glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer)
}
fileprivate 
func _load_glNamedProgramLocalParameter4dEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glNamedProgramLocalParameter4dEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameter4dEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameter4dEXT))
    OpenGL.glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w)
}
fileprivate 
func _load_glNamedProgramLocalParameter4dvEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glNamedProgramLocalParameter4dvEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameter4dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameter4dvEXT))
    OpenGL.glNamedProgramLocalParameter4dvEXT(program, target, index, params)
}
fileprivate 
func _load_glNamedProgramLocalParameter4fEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glNamedProgramLocalParameter4fEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameter4fEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameter4fEXT))
    OpenGL.glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w)
}
fileprivate 
func _load_glNamedProgramLocalParameter4fvEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNamedProgramLocalParameter4fvEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameter4fvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameter4fvEXT))
    OpenGL.glNamedProgramLocalParameter4fvEXT(program, target, index, params)
}
fileprivate 
func _load_glNamedProgramLocalParameterI4iEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glNamedProgramLocalParameterI4iEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameterI4iEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameterI4iEXT))
    OpenGL.glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w)
}
fileprivate 
func _load_glNamedProgramLocalParameterI4ivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glNamedProgramLocalParameterI4ivEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameterI4ivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameterI4ivEXT))
    OpenGL.glNamedProgramLocalParameterI4ivEXT(program, target, index, params)
}
fileprivate 
func _load_glNamedProgramLocalParameterI4uiEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt, w:OpenGL.UInt)
{
    OpenGL.glNamedProgramLocalParameterI4uiEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameterI4uiEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameterI4uiEXT))
    OpenGL.glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w)
}
fileprivate 
func _load_glNamedProgramLocalParameterI4uivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glNamedProgramLocalParameterI4uivEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameterI4uivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameterI4uivEXT))
    OpenGL.glNamedProgramLocalParameterI4uivEXT(program, target, index, params)
}
fileprivate 
func _load_glNamedProgramLocalParameters4fvEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNamedProgramLocalParameters4fvEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParameters4fvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParameters4fvEXT))
    OpenGL.glNamedProgramLocalParameters4fvEXT(program, target, index, count, params)
}
fileprivate 
func _load_glNamedProgramLocalParametersI4ivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glNamedProgramLocalParametersI4ivEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParametersI4ivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParametersI4ivEXT))
    OpenGL.glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params)
}
fileprivate 
func _load_glNamedProgramLocalParametersI4uivEXT(program:OpenGL.UInt, target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glNamedProgramLocalParametersI4uivEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramLocalParametersI4uivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramLocalParametersI4uivEXT))
    OpenGL.glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params)
}
fileprivate 
func _load_glNamedProgramStringEXT(program:OpenGL.UInt, target:OpenGL.Enum, format:OpenGL.Enum, len:OpenGL.Size, string:UnsafeRawPointer?)
{
    OpenGL.glNamedProgramStringEXT = unsafeBitCast(OpenGL.getfp("glNamedProgramStringEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedProgramStringEXT))
    OpenGL.glNamedProgramStringEXT(program, target, format, len, string)
}
fileprivate 
func _load_glNamedRenderbufferStorage(renderbuffer:OpenGL.UInt, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glNamedRenderbufferStorage = unsafeBitCast(OpenGL.getfp("glNamedRenderbufferStorage", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedRenderbufferStorage))
    OpenGL.glNamedRenderbufferStorage(renderbuffer, internalformat, width, height)
}
fileprivate 
func _load_glNamedRenderbufferStorageEXT(renderbuffer:OpenGL.UInt, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glNamedRenderbufferStorageEXT = unsafeBitCast(OpenGL.getfp("glNamedRenderbufferStorageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedRenderbufferStorageEXT))
    OpenGL.glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height)
}
fileprivate 
func _load_glNamedRenderbufferStorageMultisample(renderbuffer:OpenGL.UInt, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glNamedRenderbufferStorageMultisample = unsafeBitCast(OpenGL.getfp("glNamedRenderbufferStorageMultisample", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glNamedRenderbufferStorageMultisample))
    OpenGL.glNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height)
}
fileprivate 
func _load_glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer:OpenGL.UInt, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glNamedRenderbufferStorageMultisampleCoverageEXT = unsafeBitCast(OpenGL.getfp("glNamedRenderbufferStorageMultisampleCoverageEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedRenderbufferStorageMultisampleCoverageEXT))
    OpenGL.glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
}
fileprivate 
func _load_glNamedRenderbufferStorageMultisampleEXT(renderbuffer:OpenGL.UInt, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glNamedRenderbufferStorageMultisampleEXT = unsafeBitCast(OpenGL.getfp("glNamedRenderbufferStorageMultisampleEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glNamedRenderbufferStorageMultisampleEXT))
    OpenGL.glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height)
}
fileprivate 
func _load_glNamedStringARB(type:OpenGL.Enum, namelen:OpenGL.Int, name:UnsafePointer<OpenGL.Char>?, stringlen:OpenGL.Int, string:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glNamedStringARB = unsafeBitCast(OpenGL.getfp("glNamedStringARB", support: [OpenGL.ss86]), to: Swift.type(of: OpenGL.glNamedStringARB))
    OpenGL.glNamedStringARB(type, namelen, name, stringlen, string)
}
fileprivate 
func _load_glNewList(list:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glNewList = unsafeBitCast(OpenGL.getfp("glNewList", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNewList))
    OpenGL.glNewList(list, mode)
}
fileprivate 
func _load_glNewObjectBufferATI(size:OpenGL.Size, pointer:UnsafeRawPointer?, usage:OpenGL.Enum) -> OpenGL.UInt
{
    OpenGL.glNewObjectBufferATI = unsafeBitCast(OpenGL.getfp("glNewObjectBufferATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glNewObjectBufferATI))
    return OpenGL.glNewObjectBufferATI(size, pointer, usage)
}
fileprivate 
func _load_glNormal3b(nx:OpenGL.Byte, ny:OpenGL.Byte, nz:OpenGL.Byte)
{
    OpenGL.glNormal3b = unsafeBitCast(OpenGL.getfp("glNormal3b", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3b))
    OpenGL.glNormal3b(nx, ny, nz)
}
fileprivate 
func _load_glNormal3bv(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glNormal3bv = unsafeBitCast(OpenGL.getfp("glNormal3bv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3bv))
    OpenGL.glNormal3bv(v)
}
fileprivate 
func _load_glNormal3d(nx:OpenGL.Double, ny:OpenGL.Double, nz:OpenGL.Double)
{
    OpenGL.glNormal3d = unsafeBitCast(OpenGL.getfp("glNormal3d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3d))
    OpenGL.glNormal3d(nx, ny, nz)
}
fileprivate 
func _load_glNormal3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glNormal3dv = unsafeBitCast(OpenGL.getfp("glNormal3dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3dv))
    OpenGL.glNormal3dv(v)
}
fileprivate 
func _load_glNormal3f(nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float)
{
    OpenGL.glNormal3f = unsafeBitCast(OpenGL.getfp("glNormal3f", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glNormal3f))
    OpenGL.glNormal3f(nx, ny, nz)
}
fileprivate 
func _load_glNormal3fVertex3fSUN(nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glNormal3fVertex3fSUN))
    OpenGL.glNormal3fVertex3fSUN(nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glNormal3fVertex3fvSUN(n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glNormal3fVertex3fvSUN))
    OpenGL.glNormal3fVertex3fvSUN(n, v)
}
fileprivate 
func _load_glNormal3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNormal3fv = unsafeBitCast(OpenGL.getfp("glNormal3fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3fv))
    OpenGL.glNormal3fv(v)
}
fileprivate 
func _load_glNormal3hNV(nx:OpenGL.HalfNV, ny:OpenGL.HalfNV, nz:OpenGL.HalfNV)
{
    OpenGL.glNormal3hNV = unsafeBitCast(OpenGL.getfp("glNormal3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glNormal3hNV))
    OpenGL.glNormal3hNV(nx, ny, nz)
}
fileprivate 
func _load_glNormal3hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glNormal3hvNV = unsafeBitCast(OpenGL.getfp("glNormal3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glNormal3hvNV))
    OpenGL.glNormal3hvNV(v)
}
fileprivate 
func _load_glNormal3i(nx:OpenGL.Int, ny:OpenGL.Int, nz:OpenGL.Int)
{
    OpenGL.glNormal3i = unsafeBitCast(OpenGL.getfp("glNormal3i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3i))
    OpenGL.glNormal3i(nx, ny, nz)
}
fileprivate 
func _load_glNormal3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glNormal3iv = unsafeBitCast(OpenGL.getfp("glNormal3iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3iv))
    OpenGL.glNormal3iv(v)
}
fileprivate 
func _load_glNormal3s(nx:OpenGL.Short, ny:OpenGL.Short, nz:OpenGL.Short)
{
    OpenGL.glNormal3s = unsafeBitCast(OpenGL.getfp("glNormal3s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3s))
    OpenGL.glNormal3s(nx, ny, nz)
}
fileprivate 
func _load_glNormal3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glNormal3sv = unsafeBitCast(OpenGL.getfp("glNormal3sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glNormal3sv))
    OpenGL.glNormal3sv(v)
}
fileprivate 
func _load_glNormal3x(nx:OpenGL.Fixed, ny:OpenGL.Fixed, nz:OpenGL.Fixed)
{
    OpenGL.glNormal3x = unsafeBitCast(OpenGL.getfp("glNormal3x", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glNormal3x))
    OpenGL.glNormal3x(nx, ny, nz)
}
fileprivate 
func _load_glNormal3xOES(nx:OpenGL.Fixed, ny:OpenGL.Fixed, nz:OpenGL.Fixed)
{
    OpenGL.glNormal3xOES = unsafeBitCast(OpenGL.getfp("glNormal3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glNormal3xOES))
    OpenGL.glNormal3xOES(nx, ny, nz)
}
fileprivate 
func _load_glNormal3xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glNormal3xvOES = unsafeBitCast(OpenGL.getfp("glNormal3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glNormal3xvOES))
    OpenGL.glNormal3xvOES(coords)
}
fileprivate 
func _load_glNormalFormatNV(type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glNormalFormatNV = unsafeBitCast(OpenGL.getfp("glNormalFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glNormalFormatNV))
    OpenGL.glNormalFormatNV(type, stride)
}
fileprivate 
func _load_glNormalP3ui(type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glNormalP3ui = unsafeBitCast(OpenGL.getfp("glNormalP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glNormalP3ui))
    OpenGL.glNormalP3ui(type, coords)
}
fileprivate 
func _load_glNormalP3uiv(type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glNormalP3uiv = unsafeBitCast(OpenGL.getfp("glNormalP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glNormalP3uiv))
    OpenGL.glNormalP3uiv(type, coords)
}
fileprivate 
func _load_glNormalPointer(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glNormalPointer = unsafeBitCast(OpenGL.getfp("glNormalPointer", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glNormalPointer))
    OpenGL.glNormalPointer(type, stride, pointer)
}
fileprivate 
func _load_glNormalPointerEXT(type:OpenGL.Enum, stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glNormalPointerEXT = unsafeBitCast(OpenGL.getfp("glNormalPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glNormalPointerEXT))
    OpenGL.glNormalPointerEXT(type, stride, count, pointer)
}
fileprivate 
func _load_glNormalPointerListIBM(type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glNormalPointerListIBM = unsafeBitCast(OpenGL.getfp("glNormalPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glNormalPointerListIBM))
    OpenGL.glNormalPointerListIBM(type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glNormalPointervINTEL(type:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    OpenGL.glNormalPointervINTEL = unsafeBitCast(OpenGL.getfp("glNormalPointervINTEL", support: [OpenGL.ss218]), to: Swift.type(of: OpenGL.glNormalPointervINTEL))
    OpenGL.glNormalPointervINTEL(type, pointer)
}
fileprivate 
func _load_glNormalStream3bATI(stream:OpenGL.Enum, nx:OpenGL.Byte, ny:OpenGL.Byte, nz:OpenGL.Byte)
{
    OpenGL.glNormalStream3bATI = unsafeBitCast(OpenGL.getfp("glNormalStream3bATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3bATI))
    OpenGL.glNormalStream3bATI(stream, nx, ny, nz)
}
fileprivate 
func _load_glNormalStream3bvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glNormalStream3bvATI = unsafeBitCast(OpenGL.getfp("glNormalStream3bvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3bvATI))
    OpenGL.glNormalStream3bvATI(stream, coords)
}
fileprivate 
func _load_glNormalStream3dATI(stream:OpenGL.Enum, nx:OpenGL.Double, ny:OpenGL.Double, nz:OpenGL.Double)
{
    OpenGL.glNormalStream3dATI = unsafeBitCast(OpenGL.getfp("glNormalStream3dATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3dATI))
    OpenGL.glNormalStream3dATI(stream, nx, ny, nz)
}
fileprivate 
func _load_glNormalStream3dvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glNormalStream3dvATI = unsafeBitCast(OpenGL.getfp("glNormalStream3dvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3dvATI))
    OpenGL.glNormalStream3dvATI(stream, coords)
}
fileprivate 
func _load_glNormalStream3fATI(stream:OpenGL.Enum, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float)
{
    OpenGL.glNormalStream3fATI = unsafeBitCast(OpenGL.getfp("glNormalStream3fATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3fATI))
    OpenGL.glNormalStream3fATI(stream, nx, ny, nz)
}
fileprivate 
func _load_glNormalStream3fvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glNormalStream3fvATI = unsafeBitCast(OpenGL.getfp("glNormalStream3fvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3fvATI))
    OpenGL.glNormalStream3fvATI(stream, coords)
}
fileprivate 
func _load_glNormalStream3iATI(stream:OpenGL.Enum, nx:OpenGL.Int, ny:OpenGL.Int, nz:OpenGL.Int)
{
    OpenGL.glNormalStream3iATI = unsafeBitCast(OpenGL.getfp("glNormalStream3iATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3iATI))
    OpenGL.glNormalStream3iATI(stream, nx, ny, nz)
}
fileprivate 
func _load_glNormalStream3ivATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glNormalStream3ivATI = unsafeBitCast(OpenGL.getfp("glNormalStream3ivATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3ivATI))
    OpenGL.glNormalStream3ivATI(stream, coords)
}
fileprivate 
func _load_glNormalStream3sATI(stream:OpenGL.Enum, nx:OpenGL.Short, ny:OpenGL.Short, nz:OpenGL.Short)
{
    OpenGL.glNormalStream3sATI = unsafeBitCast(OpenGL.getfp("glNormalStream3sATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3sATI))
    OpenGL.glNormalStream3sATI(stream, nx, ny, nz)
}
fileprivate 
func _load_glNormalStream3svATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glNormalStream3svATI = unsafeBitCast(OpenGL.getfp("glNormalStream3svATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glNormalStream3svATI))
    OpenGL.glNormalStream3svATI(stream, coords)
}
fileprivate 
func _load_glObjectLabel(identifier:OpenGL.Enum, name:OpenGL.UInt, length:OpenGL.Size, label:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glObjectLabel = unsafeBitCast(OpenGL.getfp("glObjectLabel", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glObjectLabel))
    OpenGL.glObjectLabel(identifier, name, length, label)
}
fileprivate 
func _load_glObjectLabelKHR(identifier:OpenGL.Enum, name:OpenGL.UInt, length:OpenGL.Size, label:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glObjectLabelKHR = unsafeBitCast(OpenGL.getfp("glObjectLabelKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glObjectLabelKHR))
    OpenGL.glObjectLabelKHR(identifier, name, length, label)
}
fileprivate 
func _load_glObjectPtrLabel(ptr:UnsafeRawPointer?, length:OpenGL.Size, label:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glObjectPtrLabel = unsafeBitCast(OpenGL.getfp("glObjectPtrLabel", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glObjectPtrLabel))
    OpenGL.glObjectPtrLabel(ptr, length, label)
}
fileprivate 
func _load_glObjectPtrLabelKHR(ptr:UnsafeRawPointer?, length:OpenGL.Size, label:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glObjectPtrLabelKHR = unsafeBitCast(OpenGL.getfp("glObjectPtrLabelKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glObjectPtrLabelKHR))
    OpenGL.glObjectPtrLabelKHR(ptr, length, label)
}
fileprivate 
func _load_glObjectPurgeableAPPLE(objectType:OpenGL.Enum, name:OpenGL.UInt, option:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glObjectPurgeableAPPLE = unsafeBitCast(OpenGL.getfp("glObjectPurgeableAPPLE", support: [OpenGL.ss22]), to: Swift.type(of: OpenGL.glObjectPurgeableAPPLE))
    return OpenGL.glObjectPurgeableAPPLE(objectType, name, option)
}
fileprivate 
func _load_glObjectUnpurgeableAPPLE(objectType:OpenGL.Enum, name:OpenGL.UInt, option:OpenGL.Enum) -> OpenGL.Enum
{
    OpenGL.glObjectUnpurgeableAPPLE = unsafeBitCast(OpenGL.getfp("glObjectUnpurgeableAPPLE", support: [OpenGL.ss22]), to: Swift.type(of: OpenGL.glObjectUnpurgeableAPPLE))
    return OpenGL.glObjectUnpurgeableAPPLE(objectType, name, option)
}
fileprivate 
func _load_glOrtho(left:OpenGL.Double, right:OpenGL.Double, bottom:OpenGL.Double, top:OpenGL.Double, zNear:OpenGL.Double, zFar:OpenGL.Double)
{
    OpenGL.glOrtho = unsafeBitCast(OpenGL.getfp("glOrtho", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glOrtho))
    OpenGL.glOrtho(left, right, bottom, top, zNear, zFar)
}
fileprivate 
func _load_glOrthof(l:OpenGL.Float, r:OpenGL.Float, b:OpenGL.Float, t:OpenGL.Float, n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glOrthof = unsafeBitCast(OpenGL.getfp("glOrthof", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glOrthof))
    OpenGL.glOrthof(l, r, b, t, n, f)
}
fileprivate 
func _load_glOrthofOES(l:OpenGL.Float, r:OpenGL.Float, b:OpenGL.Float, t:OpenGL.Float, n:OpenGL.Float, f:OpenGL.Float)
{
    OpenGL.glOrthofOES = unsafeBitCast(OpenGL.getfp("glOrthofOES", support: [OpenGL.ss302]), to: Swift.type(of: OpenGL.glOrthofOES))
    OpenGL.glOrthofOES(l, r, b, t, n, f)
}
fileprivate 
func _load_glOrthox(l:OpenGL.Fixed, r:OpenGL.Fixed, b:OpenGL.Fixed, t:OpenGL.Fixed, n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glOrthox = unsafeBitCast(OpenGL.getfp("glOrthox", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glOrthox))
    OpenGL.glOrthox(l, r, b, t, n, f)
}
fileprivate 
func _load_glOrthoxOES(l:OpenGL.Fixed, r:OpenGL.Fixed, b:OpenGL.Fixed, t:OpenGL.Fixed, n:OpenGL.Fixed, f:OpenGL.Fixed)
{
    OpenGL.glOrthoxOES = unsafeBitCast(OpenGL.getfp("glOrthoxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glOrthoxOES))
    OpenGL.glOrthoxOES(l, r, b, t, n, f)
}
fileprivate 
func _load_glPNTrianglesfATI(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPNTrianglesfATI = unsafeBitCast(OpenGL.getfp("glPNTrianglesfATI", support: [OpenGL.ss120]), to: Swift.type(of: OpenGL.glPNTrianglesfATI))
    OpenGL.glPNTrianglesfATI(pname, param)
}
fileprivate 
func _load_glPNTrianglesiATI(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPNTrianglesiATI = unsafeBitCast(OpenGL.getfp("glPNTrianglesiATI", support: [OpenGL.ss120]), to: Swift.type(of: OpenGL.glPNTrianglesiATI))
    OpenGL.glPNTrianglesiATI(pname, param)
}
fileprivate 
func _load_glPassTexCoordATI(dst:OpenGL.UInt, coord:OpenGL.UInt, swizzle:OpenGL.Enum)
{
    OpenGL.glPassTexCoordATI = unsafeBitCast(OpenGL.getfp("glPassTexCoordATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glPassTexCoordATI))
    OpenGL.glPassTexCoordATI(dst, coord, swizzle)
}
fileprivate 
func _load_glPassThrough(token:OpenGL.Float)
{
    OpenGL.glPassThrough = unsafeBitCast(OpenGL.getfp("glPassThrough", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPassThrough))
    OpenGL.glPassThrough(token)
}
fileprivate 
func _load_glPassThroughxOES(token:OpenGL.Fixed)
{
    OpenGL.glPassThroughxOES = unsafeBitCast(OpenGL.getfp("glPassThroughxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPassThroughxOES))
    OpenGL.glPassThroughxOES(token)
}
fileprivate 
func _load_glPatchParameterfv(pname:OpenGL.Enum, values:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPatchParameterfv = unsafeBitCast(OpenGL.getfp("glPatchParameterfv", support: [OpenGL.ss358, OpenGL.ss90]), to: Swift.type(of: OpenGL.glPatchParameterfv))
    OpenGL.glPatchParameterfv(pname, values)
}
fileprivate 
func _load_glPatchParameteri(pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glPatchParameteri = unsafeBitCast(OpenGL.getfp("glPatchParameteri", support: [OpenGL.ss358, OpenGL.ss368, OpenGL.ss90]), to: Swift.type(of: OpenGL.glPatchParameteri))
    OpenGL.glPatchParameteri(pname, value)
}
fileprivate 
func _load_glPatchParameteriEXT(pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glPatchParameteriEXT = unsafeBitCast(OpenGL.getfp("glPatchParameteriEXT", support: [OpenGL.ss188]), to: Swift.type(of: OpenGL.glPatchParameteriEXT))
    OpenGL.glPatchParameteriEXT(pname, value)
}
fileprivate 
func _load_glPatchParameteriOES(pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glPatchParameteriOES = unsafeBitCast(OpenGL.getfp("glPatchParameteriOES", support: [OpenGL.ss303]), to: Swift.type(of: OpenGL.glPatchParameteriOES))
    OpenGL.glPatchParameteriOES(pname, value)
}
fileprivate 
func _load_glPathColorGenNV(color:OpenGL.Enum, genMode:OpenGL.Enum, colorFormat:OpenGL.Enum, coeffs:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPathColorGenNV = unsafeBitCast(OpenGL.getfp("glPathColorGenNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathColorGenNV))
    OpenGL.glPathColorGenNV(color, genMode, colorFormat, coeffs)
}
fileprivate 
func _load_glPathCommandsNV(path:OpenGL.UInt, numCommands:OpenGL.Size, commands:UnsafePointer<OpenGL.UByte>?, numCoords:OpenGL.Size, coordType:OpenGL.Enum, coords:UnsafeRawPointer?)
{
    OpenGL.glPathCommandsNV = unsafeBitCast(OpenGL.getfp("glPathCommandsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathCommandsNV))
    OpenGL.glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords)
}
fileprivate 
func _load_glPathCoordsNV(path:OpenGL.UInt, numCoords:OpenGL.Size, coordType:OpenGL.Enum, coords:UnsafeRawPointer?)
{
    OpenGL.glPathCoordsNV = unsafeBitCast(OpenGL.getfp("glPathCoordsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathCoordsNV))
    OpenGL.glPathCoordsNV(path, numCoords, coordType, coords)
}
fileprivate 
func _load_glPathCoverDepthFuncNV(f:OpenGL.Enum)
{
    OpenGL.glPathCoverDepthFuncNV = unsafeBitCast(OpenGL.getfp("glPathCoverDepthFuncNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathCoverDepthFuncNV))
    OpenGL.glPathCoverDepthFuncNV(f)
}
fileprivate 
func _load_glPathDashArrayNV(path:OpenGL.UInt, dashCount:OpenGL.Size, dashArray:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPathDashArrayNV = unsafeBitCast(OpenGL.getfp("glPathDashArrayNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathDashArrayNV))
    OpenGL.glPathDashArrayNV(path, dashCount, dashArray)
}
fileprivate 
func _load_glPathFogGenNV(genMode:OpenGL.Enum)
{
    OpenGL.glPathFogGenNV = unsafeBitCast(OpenGL.getfp("glPathFogGenNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathFogGenNV))
    OpenGL.glPathFogGenNV(genMode)
}
fileprivate 
func _load_glPathGlyphIndexArrayNV(firstPathName:OpenGL.UInt, fontTarget:OpenGL.Enum, fontName:UnsafeRawPointer?, fontStyle:OpenGL.Bitfield, firstGlyphIndex:OpenGL.UInt, numGlyphs:OpenGL.Size, pathParameterTemplate:OpenGL.UInt, emScale:OpenGL.Float) -> OpenGL.Enum
{
    OpenGL.glPathGlyphIndexArrayNV = unsafeBitCast(OpenGL.getfp("glPathGlyphIndexArrayNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathGlyphIndexArrayNV))
    return OpenGL.glPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
fileprivate 
func _load_glPathGlyphIndexRangeNV(fontTarget:OpenGL.Enum, fontName:UnsafeRawPointer?, fontStyle:OpenGL.Bitfield, pathParameterTemplate:OpenGL.UInt, emScale:OpenGL.Float, baseAndCount:UnsafePointer<OpenGL.UInt>?) -> OpenGL.Enum
{
    OpenGL.glPathGlyphIndexRangeNV = unsafeBitCast(OpenGL.getfp("glPathGlyphIndexRangeNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathGlyphIndexRangeNV))
    return OpenGL.glPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)
}
fileprivate 
func _load_glPathGlyphRangeNV(firstPathName:OpenGL.UInt, fontTarget:OpenGL.Enum, fontName:UnsafeRawPointer?, fontStyle:OpenGL.Bitfield, firstGlyph:OpenGL.UInt, numGlyphs:OpenGL.Size, handleMissingGlyphs:OpenGL.Enum, pathParameterTemplate:OpenGL.UInt, emScale:OpenGL.Float)
{
    OpenGL.glPathGlyphRangeNV = unsafeBitCast(OpenGL.getfp("glPathGlyphRangeNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathGlyphRangeNV))
    OpenGL.glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
}
fileprivate 
func _load_glPathGlyphsNV(firstPathName:OpenGL.UInt, fontTarget:OpenGL.Enum, fontName:UnsafeRawPointer?, fontStyle:OpenGL.Bitfield, numGlyphs:OpenGL.Size, type:OpenGL.Enum, charcodes:UnsafeRawPointer?, handleMissingGlyphs:OpenGL.Enum, pathParameterTemplate:OpenGL.UInt, emScale:OpenGL.Float)
{
    OpenGL.glPathGlyphsNV = unsafeBitCast(OpenGL.getfp("glPathGlyphsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathGlyphsNV))
    OpenGL.glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
}
fileprivate 
func _load_glPathMemoryGlyphIndexArrayNV(firstPathName:OpenGL.UInt, fontTarget:OpenGL.Enum, fontSize:OpenGL.SizePointer, fontData:UnsafeRawPointer?, faceIndex:OpenGL.Size, firstGlyphIndex:OpenGL.UInt, numGlyphs:OpenGL.Size, pathParameterTemplate:OpenGL.UInt, emScale:OpenGL.Float) -> OpenGL.Enum
{
    OpenGL.glPathMemoryGlyphIndexArrayNV = unsafeBitCast(OpenGL.getfp("glPathMemoryGlyphIndexArrayNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathMemoryGlyphIndexArrayNV))
    return OpenGL.glPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
fileprivate 
func _load_glPathParameterfNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:OpenGL.Float)
{
    OpenGL.glPathParameterfNV = unsafeBitCast(OpenGL.getfp("glPathParameterfNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathParameterfNV))
    OpenGL.glPathParameterfNV(path, pname, value)
}
fileprivate 
func _load_glPathParameterfvNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPathParameterfvNV = unsafeBitCast(OpenGL.getfp("glPathParameterfvNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathParameterfvNV))
    OpenGL.glPathParameterfvNV(path, pname, value)
}
fileprivate 
func _load_glPathParameteriNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glPathParameteriNV = unsafeBitCast(OpenGL.getfp("glPathParameteriNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathParameteriNV))
    OpenGL.glPathParameteriNV(path, pname, value)
}
fileprivate 
func _load_glPathParameterivNV(path:OpenGL.UInt, pname:OpenGL.Enum, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glPathParameterivNV = unsafeBitCast(OpenGL.getfp("glPathParameterivNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathParameterivNV))
    OpenGL.glPathParameterivNV(path, pname, value)
}
fileprivate 
func _load_glPathStencilDepthOffsetNV(factor:OpenGL.Float, units:OpenGL.Float)
{
    OpenGL.glPathStencilDepthOffsetNV = unsafeBitCast(OpenGL.getfp("glPathStencilDepthOffsetNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathStencilDepthOffsetNV))
    OpenGL.glPathStencilDepthOffsetNV(factor, units)
}
fileprivate 
func _load_glPathStencilFuncNV(f:OpenGL.Enum, ref:OpenGL.Int, mask:OpenGL.UInt)
{
    OpenGL.glPathStencilFuncNV = unsafeBitCast(OpenGL.getfp("glPathStencilFuncNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathStencilFuncNV))
    OpenGL.glPathStencilFuncNV(f, ref, mask)
}
fileprivate 
func _load_glPathStringNV(path:OpenGL.UInt, format:OpenGL.Enum, length:OpenGL.Size, pathString:UnsafeRawPointer?)
{
    OpenGL.glPathStringNV = unsafeBitCast(OpenGL.getfp("glPathStringNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathStringNV))
    OpenGL.glPathStringNV(path, format, length, pathString)
}
fileprivate 
func _load_glPathSubCommandsNV(path:OpenGL.UInt, commandStart:OpenGL.Size, commandsToDelete:OpenGL.Size, numCommands:OpenGL.Size, commands:UnsafePointer<OpenGL.UByte>?, numCoords:OpenGL.Size, coordType:OpenGL.Enum, coords:UnsafeRawPointer?)
{
    OpenGL.glPathSubCommandsNV = unsafeBitCast(OpenGL.getfp("glPathSubCommandsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathSubCommandsNV))
    OpenGL.glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
}
fileprivate 
func _load_glPathSubCoordsNV(path:OpenGL.UInt, coordStart:OpenGL.Size, numCoords:OpenGL.Size, coordType:OpenGL.Enum, coords:UnsafeRawPointer?)
{
    OpenGL.glPathSubCoordsNV = unsafeBitCast(OpenGL.getfp("glPathSubCoordsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathSubCoordsNV))
    OpenGL.glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords)
}
fileprivate 
func _load_glPathTexGenNV(texCoordSet:OpenGL.Enum, genMode:OpenGL.Enum, components:OpenGL.Int, coeffs:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPathTexGenNV = unsafeBitCast(OpenGL.getfp("glPathTexGenNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPathTexGenNV))
    OpenGL.glPathTexGenNV(texCoordSet, genMode, components, coeffs)
}
fileprivate 
func _load_glPauseTransformFeedback()
{
    OpenGL.glPauseTransformFeedback = unsafeBitCast(OpenGL.getfp("glPauseTransformFeedback", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glPauseTransformFeedback))
    OpenGL.glPauseTransformFeedback()
}
fileprivate 
func _load_glPauseTransformFeedbackNV()
{
    OpenGL.glPauseTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glPauseTransformFeedbackNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glPauseTransformFeedbackNV))
    OpenGL.glPauseTransformFeedbackNV()
}
fileprivate 
func _load_glPixelDataRangeNV(target:OpenGL.Enum, length:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glPixelDataRangeNV = unsafeBitCast(OpenGL.getfp("glPixelDataRangeNV", support: [OpenGL.ss261]), to: Swift.type(of: OpenGL.glPixelDataRangeNV))
    OpenGL.glPixelDataRangeNV(target, length, pointer)
}
fileprivate 
func _load_glPixelMapfv(map:OpenGL.Enum, mapsize:OpenGL.Size, values:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPixelMapfv = unsafeBitCast(OpenGL.getfp("glPixelMapfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelMapfv))
    OpenGL.glPixelMapfv(map, mapsize, values)
}
fileprivate 
func _load_glPixelMapuiv(map:OpenGL.Enum, mapsize:OpenGL.Size, values:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glPixelMapuiv = unsafeBitCast(OpenGL.getfp("glPixelMapuiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelMapuiv))
    OpenGL.glPixelMapuiv(map, mapsize, values)
}
fileprivate 
func _load_glPixelMapusv(map:OpenGL.Enum, mapsize:OpenGL.Size, values:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glPixelMapusv = unsafeBitCast(OpenGL.getfp("glPixelMapusv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelMapusv))
    OpenGL.glPixelMapusv(map, mapsize, values)
}
fileprivate 
func _load_glPixelMapx(map:OpenGL.Enum, size:OpenGL.Int, values:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glPixelMapx = unsafeBitCast(OpenGL.getfp("glPixelMapx", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPixelMapx))
    OpenGL.glPixelMapx(map, size, values)
}
fileprivate 
func _load_glPixelStoref(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPixelStoref = unsafeBitCast(OpenGL.getfp("glPixelStoref", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glPixelStoref))
    OpenGL.glPixelStoref(pname, param)
}
fileprivate 
func _load_glPixelStorei(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPixelStorei = unsafeBitCast(OpenGL.getfp("glPixelStorei", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glPixelStorei))
    OpenGL.glPixelStorei(pname, param)
}
fileprivate 
func _load_glPixelStorex(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glPixelStorex = unsafeBitCast(OpenGL.getfp("glPixelStorex", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPixelStorex))
    OpenGL.glPixelStorex(pname, param)
}
fileprivate 
func _load_glPixelTexGenParameterfSGIS(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPixelTexGenParameterfSGIS = unsafeBitCast(OpenGL.getfp("glPixelTexGenParameterfSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glPixelTexGenParameterfSGIS))
    OpenGL.glPixelTexGenParameterfSGIS(pname, param)
}
fileprivate 
func _load_glPixelTexGenParameterfvSGIS(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPixelTexGenParameterfvSGIS = unsafeBitCast(OpenGL.getfp("glPixelTexGenParameterfvSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glPixelTexGenParameterfvSGIS))
    OpenGL.glPixelTexGenParameterfvSGIS(pname, params)
}
fileprivate 
func _load_glPixelTexGenParameteriSGIS(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPixelTexGenParameteriSGIS = unsafeBitCast(OpenGL.getfp("glPixelTexGenParameteriSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glPixelTexGenParameteriSGIS))
    OpenGL.glPixelTexGenParameteriSGIS(pname, param)
}
fileprivate 
func _load_glPixelTexGenParameterivSGIS(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glPixelTexGenParameterivSGIS = unsafeBitCast(OpenGL.getfp("glPixelTexGenParameterivSGIS", support: [OpenGL.ss322]), to: Swift.type(of: OpenGL.glPixelTexGenParameterivSGIS))
    OpenGL.glPixelTexGenParameterivSGIS(pname, params)
}
fileprivate 
func _load_glPixelTexGenSGIX(mode:OpenGL.Enum)
{
    OpenGL.glPixelTexGenSGIX = unsafeBitCast(OpenGL.getfp("glPixelTexGenSGIX", support: [OpenGL.ss335]), to: Swift.type(of: OpenGL.glPixelTexGenSGIX))
    OpenGL.glPixelTexGenSGIX(mode)
}
fileprivate 
func _load_glPixelTransferf(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPixelTransferf = unsafeBitCast(OpenGL.getfp("glPixelTransferf", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelTransferf))
    OpenGL.glPixelTransferf(pname, param)
}
fileprivate 
func _load_glPixelTransferi(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPixelTransferi = unsafeBitCast(OpenGL.getfp("glPixelTransferi", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelTransferi))
    OpenGL.glPixelTransferi(pname, param)
}
fileprivate 
func _load_glPixelTransferxOES(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glPixelTransferxOES = unsafeBitCast(OpenGL.getfp("glPixelTransferxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPixelTransferxOES))
    OpenGL.glPixelTransferxOES(pname, param)
}
fileprivate 
func _load_glPixelTransformParameterfEXT(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPixelTransformParameterfEXT = unsafeBitCast(OpenGL.getfp("glPixelTransformParameterfEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glPixelTransformParameterfEXT))
    OpenGL.glPixelTransformParameterfEXT(target, pname, param)
}
fileprivate 
func _load_glPixelTransformParameterfvEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPixelTransformParameterfvEXT = unsafeBitCast(OpenGL.getfp("glPixelTransformParameterfvEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glPixelTransformParameterfvEXT))
    OpenGL.glPixelTransformParameterfvEXT(target, pname, params)
}
fileprivate 
func _load_glPixelTransformParameteriEXT(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPixelTransformParameteriEXT = unsafeBitCast(OpenGL.getfp("glPixelTransformParameteriEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glPixelTransformParameteriEXT))
    OpenGL.glPixelTransformParameteriEXT(target, pname, param)
}
fileprivate 
func _load_glPixelTransformParameterivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glPixelTransformParameterivEXT = unsafeBitCast(OpenGL.getfp("glPixelTransformParameterivEXT", support: [OpenGL.ss173]), to: Swift.type(of: OpenGL.glPixelTransformParameterivEXT))
    OpenGL.glPixelTransformParameterivEXT(target, pname, params)
}
fileprivate 
func _load_glPixelZoom(xfactor:OpenGL.Float, yfactor:OpenGL.Float)
{
    OpenGL.glPixelZoom = unsafeBitCast(OpenGL.getfp("glPixelZoom", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPixelZoom))
    OpenGL.glPixelZoom(xfactor, yfactor)
}
fileprivate 
func _load_glPixelZoomxOES(xfactor:OpenGL.Fixed, yfactor:OpenGL.Fixed)
{
    OpenGL.glPixelZoomxOES = unsafeBitCast(OpenGL.getfp("glPixelZoomxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPixelZoomxOES))
    OpenGL.glPixelZoomxOES(xfactor, yfactor)
}
fileprivate 
func _load_glPointAlongPathNV(path:OpenGL.UInt, startSegment:OpenGL.Size, numSegments:OpenGL.Size, distance:OpenGL.Float, x:UnsafeMutablePointer<OpenGL.Float>?, y:UnsafeMutablePointer<OpenGL.Float>?, tangentX:UnsafeMutablePointer<OpenGL.Float>?, tangentY:UnsafeMutablePointer<OpenGL.Float>?) -> OpenGL.Bool
{
    OpenGL.glPointAlongPathNV = unsafeBitCast(OpenGL.getfp("glPointAlongPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glPointAlongPathNV))
    return OpenGL.glPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)
}
fileprivate 
func _load_glPointParameterf(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPointParameterf = unsafeBitCast(OpenGL.getfp("glPointParameterf", support: [OpenGL.ss350, OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointParameterf))
    OpenGL.glPointParameterf(pname, param)
}
fileprivate 
func _load_glPointParameterfARB(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPointParameterfARB = unsafeBitCast(OpenGL.getfp("glPointParameterfARB", support: [OpenGL.ss73]), to: Swift.type(of: OpenGL.glPointParameterfARB))
    OpenGL.glPointParameterfARB(pname, param)
}
fileprivate 
func _load_glPointParameterfEXT(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPointParameterfEXT = unsafeBitCast(OpenGL.getfp("glPointParameterfEXT", support: [OpenGL.ss174]), to: Swift.type(of: OpenGL.glPointParameterfEXT))
    OpenGL.glPointParameterfEXT(pname, param)
}
fileprivate 
func _load_glPointParameterfSGIS(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glPointParameterfSGIS = unsafeBitCast(OpenGL.getfp("glPointParameterfSGIS", support: [OpenGL.ss323]), to: Swift.type(of: OpenGL.glPointParameterfSGIS))
    OpenGL.glPointParameterfSGIS(pname, param)
}
fileprivate 
func _load_glPointParameterfv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPointParameterfv = unsafeBitCast(OpenGL.getfp("glPointParameterfv", support: [OpenGL.ss350, OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointParameterfv))
    OpenGL.glPointParameterfv(pname, params)
}
fileprivate 
func _load_glPointParameterfvARB(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPointParameterfvARB = unsafeBitCast(OpenGL.getfp("glPointParameterfvARB", support: [OpenGL.ss73]), to: Swift.type(of: OpenGL.glPointParameterfvARB))
    OpenGL.glPointParameterfvARB(pname, params)
}
fileprivate 
func _load_glPointParameterfvEXT(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPointParameterfvEXT = unsafeBitCast(OpenGL.getfp("glPointParameterfvEXT", support: [OpenGL.ss174]), to: Swift.type(of: OpenGL.glPointParameterfvEXT))
    OpenGL.glPointParameterfvEXT(pname, params)
}
fileprivate 
func _load_glPointParameterfvSGIS(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPointParameterfvSGIS = unsafeBitCast(OpenGL.getfp("glPointParameterfvSGIS", support: [OpenGL.ss323]), to: Swift.type(of: OpenGL.glPointParameterfvSGIS))
    OpenGL.glPointParameterfvSGIS(pname, params)
}
fileprivate 
func _load_glPointParameteri(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPointParameteri = unsafeBitCast(OpenGL.getfp("glPointParameteri", support: [OpenGL.ss350]), to: Swift.type(of: OpenGL.glPointParameteri))
    OpenGL.glPointParameteri(pname, param)
}
fileprivate 
func _load_glPointParameteriNV(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glPointParameteriNV = unsafeBitCast(OpenGL.getfp("glPointParameteriNV", support: [OpenGL.ss262]), to: Swift.type(of: OpenGL.glPointParameteriNV))
    OpenGL.glPointParameteriNV(pname, param)
}
fileprivate 
func _load_glPointParameteriv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glPointParameteriv = unsafeBitCast(OpenGL.getfp("glPointParameteriv", support: [OpenGL.ss350]), to: Swift.type(of: OpenGL.glPointParameteriv))
    OpenGL.glPointParameteriv(pname, params)
}
fileprivate 
func _load_glPointParameterivNV(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glPointParameterivNV = unsafeBitCast(OpenGL.getfp("glPointParameterivNV", support: [OpenGL.ss262]), to: Swift.type(of: OpenGL.glPointParameterivNV))
    OpenGL.glPointParameterivNV(pname, params)
}
fileprivate 
func _load_glPointParameterx(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glPointParameterx = unsafeBitCast(OpenGL.getfp("glPointParameterx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointParameterx))
    OpenGL.glPointParameterx(pname, param)
}
fileprivate 
func _load_glPointParameterxOES(pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glPointParameterxOES = unsafeBitCast(OpenGL.getfp("glPointParameterxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPointParameterxOES))
    OpenGL.glPointParameterxOES(pname, param)
}
fileprivate 
func _load_glPointParameterxv(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glPointParameterxv = unsafeBitCast(OpenGL.getfp("glPointParameterxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointParameterxv))
    OpenGL.glPointParameterxv(pname, params)
}
fileprivate 
func _load_glPointParameterxvOES(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glPointParameterxvOES = unsafeBitCast(OpenGL.getfp("glPointParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPointParameterxvOES))
    OpenGL.glPointParameterxvOES(pname, params)
}
fileprivate 
func _load_glPointSize(size:OpenGL.Float)
{
    OpenGL.glPointSize = unsafeBitCast(OpenGL.getfp("glPointSize", support: [OpenGL.ss346, OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointSize))
    OpenGL.glPointSize(size)
}
fileprivate 
func _load_glPointSizePointerOES(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glPointSizePointerOES = unsafeBitCast(OpenGL.getfp("glPointSizePointerOES", support: [OpenGL.ss298]), to: Swift.type(of: OpenGL.glPointSizePointerOES))
    OpenGL.glPointSizePointerOES(type, stride, pointer)
}
fileprivate 
func _load_glPointSizex(size:OpenGL.Fixed)
{
    OpenGL.glPointSizex = unsafeBitCast(OpenGL.getfp("glPointSizex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glPointSizex))
    OpenGL.glPointSizex(size)
}
fileprivate 
func _load_glPointSizexOES(size:OpenGL.Fixed)
{
    OpenGL.glPointSizexOES = unsafeBitCast(OpenGL.getfp("glPointSizexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPointSizexOES))
    OpenGL.glPointSizexOES(size)
}
fileprivate 
func _load_glPollAsyncSGIX(markerp:UnsafeMutablePointer<OpenGL.UInt>?) -> OpenGL.Int
{
    OpenGL.glPollAsyncSGIX = unsafeBitCast(OpenGL.getfp("glPollAsyncSGIX", support: [OpenGL.ss328]), to: Swift.type(of: OpenGL.glPollAsyncSGIX))
    return OpenGL.glPollAsyncSGIX(markerp)
}
fileprivate 
func _load_glPollInstrumentsSGIX(marker_p:UnsafeMutablePointer<OpenGL.Int>?) -> OpenGL.Int
{
    OpenGL.glPollInstrumentsSGIX = unsafeBitCast(OpenGL.getfp("glPollInstrumentsSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glPollInstrumentsSGIX))
    return OpenGL.glPollInstrumentsSGIX(marker_p)
}
fileprivate 
func _load_glPolygonMode(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glPolygonMode = unsafeBitCast(OpenGL.getfp("glPolygonMode", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glPolygonMode))
    OpenGL.glPolygonMode(face, mode)
}
fileprivate 
func _load_glPolygonModeNV(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glPolygonModeNV = unsafeBitCast(OpenGL.getfp("glPolygonModeNV", support: [OpenGL.ss263]), to: Swift.type(of: OpenGL.glPolygonModeNV))
    OpenGL.glPolygonModeNV(face, mode)
}
fileprivate 
func _load_glPolygonOffset(factor:OpenGL.Float, units:OpenGL.Float)
{
    OpenGL.glPolygonOffset = unsafeBitCast(OpenGL.getfp("glPolygonOffset", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glPolygonOffset))
    OpenGL.glPolygonOffset(factor, units)
}
fileprivate 
func _load_glPolygonOffsetClampEXT(factor:OpenGL.Float, units:OpenGL.Float, clamp:OpenGL.Float)
{
    OpenGL.glPolygonOffsetClampEXT = unsafeBitCast(OpenGL.getfp("glPolygonOffsetClampEXT", support: [OpenGL.ss176]), to: Swift.type(of: OpenGL.glPolygonOffsetClampEXT))
    OpenGL.glPolygonOffsetClampEXT(factor, units, clamp)
}
fileprivate 
func _load_glPolygonOffsetEXT(factor:OpenGL.Float, bias:OpenGL.Float)
{
    OpenGL.glPolygonOffsetEXT = unsafeBitCast(OpenGL.getfp("glPolygonOffsetEXT", support: [OpenGL.ss175]), to: Swift.type(of: OpenGL.glPolygonOffsetEXT))
    OpenGL.glPolygonOffsetEXT(factor, bias)
}
fileprivate 
func _load_glPolygonOffsetx(factor:OpenGL.Fixed, units:OpenGL.Fixed)
{
    OpenGL.glPolygonOffsetx = unsafeBitCast(OpenGL.getfp("glPolygonOffsetx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glPolygonOffsetx))
    OpenGL.glPolygonOffsetx(factor, units)
}
fileprivate 
func _load_glPolygonOffsetxOES(factor:OpenGL.Fixed, units:OpenGL.Fixed)
{
    OpenGL.glPolygonOffsetxOES = unsafeBitCast(OpenGL.getfp("glPolygonOffsetxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPolygonOffsetxOES))
    OpenGL.glPolygonOffsetxOES(factor, units)
}
fileprivate 
func _load_glPolygonStipple(mask:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glPolygonStipple = unsafeBitCast(OpenGL.getfp("glPolygonStipple", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPolygonStipple))
    OpenGL.glPolygonStipple(mask)
}
fileprivate 
func _load_glPopAttrib()
{
    OpenGL.glPopAttrib = unsafeBitCast(OpenGL.getfp("glPopAttrib", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPopAttrib))
    OpenGL.glPopAttrib()
}
fileprivate 
func _load_glPopClientAttrib()
{
    OpenGL.glPopClientAttrib = unsafeBitCast(OpenGL.getfp("glPopClientAttrib", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPopClientAttrib))
    OpenGL.glPopClientAttrib()
}
fileprivate 
func _load_glPopDebugGroup()
{
    OpenGL.glPopDebugGroup = unsafeBitCast(OpenGL.getfp("glPopDebugGroup", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glPopDebugGroup))
    OpenGL.glPopDebugGroup()
}
fileprivate 
func _load_glPopDebugGroupKHR()
{
    OpenGL.glPopDebugGroupKHR = unsafeBitCast(OpenGL.getfp("glPopDebugGroupKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glPopDebugGroupKHR))
    OpenGL.glPopDebugGroupKHR()
}
fileprivate 
func _load_glPopGroupMarkerEXT()
{
    OpenGL.glPopGroupMarkerEXT = unsafeBitCast(OpenGL.getfp("glPopGroupMarkerEXT", support: [OpenGL.ss141]), to: Swift.type(of: OpenGL.glPopGroupMarkerEXT))
    OpenGL.glPopGroupMarkerEXT()
}
fileprivate 
func _load_glPopMatrix()
{
    OpenGL.glPopMatrix = unsafeBitCast(OpenGL.getfp("glPopMatrix", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glPopMatrix))
    OpenGL.glPopMatrix()
}
fileprivate 
func _load_glPopName()
{
    OpenGL.glPopName = unsafeBitCast(OpenGL.getfp("glPopName", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPopName))
    OpenGL.glPopName()
}
fileprivate 
func _load_glPresentFrameDualFillNV(video_slot:OpenGL.UInt, minPresentTime:OpenGL.UInt64EXT, beginPresentTimeId:OpenGL.UInt, presentDurationId:OpenGL.UInt, type:OpenGL.Enum, target0:OpenGL.Enum, fill0:OpenGL.UInt, target1:OpenGL.Enum, fill1:OpenGL.UInt, target2:OpenGL.Enum, fill2:OpenGL.UInt, target3:OpenGL.Enum, fill3:OpenGL.UInt)
{
    OpenGL.glPresentFrameDualFillNV = unsafeBitCast(OpenGL.getfp("glPresentFrameDualFillNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glPresentFrameDualFillNV))
    OpenGL.glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
}
fileprivate 
func _load_glPresentFrameKeyedNV(video_slot:OpenGL.UInt, minPresentTime:OpenGL.UInt64EXT, beginPresentTimeId:OpenGL.UInt, presentDurationId:OpenGL.UInt, type:OpenGL.Enum, target0:OpenGL.Enum, fill0:OpenGL.UInt, key0:OpenGL.UInt, target1:OpenGL.Enum, fill1:OpenGL.UInt, key1:OpenGL.UInt)
{
    OpenGL.glPresentFrameKeyedNV = unsafeBitCast(OpenGL.getfp("glPresentFrameKeyedNV", support: [OpenGL.ss264]), to: Swift.type(of: OpenGL.glPresentFrameKeyedNV))
    OpenGL.glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
}
fileprivate 
func _load_glPrimitiveBoundingBox(minX:OpenGL.Float, minY:OpenGL.Float, minZ:OpenGL.Float, minW:OpenGL.Float, maxX:OpenGL.Float, maxY:OpenGL.Float, maxZ:OpenGL.Float, maxW:OpenGL.Float)
{
    OpenGL.glPrimitiveBoundingBox = unsafeBitCast(OpenGL.getfp("glPrimitiveBoundingBox", support: [OpenGL.ss368]), to: Swift.type(of: OpenGL.glPrimitiveBoundingBox))
    OpenGL.glPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
fileprivate 
func _load_glPrimitiveBoundingBoxARB(minX:OpenGL.Float, minY:OpenGL.Float, minZ:OpenGL.Float, minW:OpenGL.Float, maxX:OpenGL.Float, maxY:OpenGL.Float, maxZ:OpenGL.Float, maxW:OpenGL.Float)
{
    OpenGL.glPrimitiveBoundingBoxARB = unsafeBitCast(OpenGL.getfp("glPrimitiveBoundingBoxARB", support: [OpenGL.ss30]), to: Swift.type(of: OpenGL.glPrimitiveBoundingBoxARB))
    OpenGL.glPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
fileprivate 
func _load_glPrimitiveBoundingBoxEXT(minX:OpenGL.Float, minY:OpenGL.Float, minZ:OpenGL.Float, minW:OpenGL.Float, maxX:OpenGL.Float, maxY:OpenGL.Float, maxZ:OpenGL.Float, maxW:OpenGL.Float)
{
    OpenGL.glPrimitiveBoundingBoxEXT = unsafeBitCast(OpenGL.getfp("glPrimitiveBoundingBoxEXT", support: [OpenGL.ss177]), to: Swift.type(of: OpenGL.glPrimitiveBoundingBoxEXT))
    OpenGL.glPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
fileprivate 
func _load_glPrimitiveBoundingBoxOES(minX:OpenGL.Float, minY:OpenGL.Float, minZ:OpenGL.Float, minW:OpenGL.Float, maxX:OpenGL.Float, maxY:OpenGL.Float, maxZ:OpenGL.Float, maxW:OpenGL.Float)
{
    OpenGL.glPrimitiveBoundingBoxOES = unsafeBitCast(OpenGL.getfp("glPrimitiveBoundingBoxOES", support: [OpenGL.ss299]), to: Swift.type(of: OpenGL.glPrimitiveBoundingBoxOES))
    OpenGL.glPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
fileprivate 
func _load_glPrimitiveRestartIndex(index:OpenGL.UInt)
{
    OpenGL.glPrimitiveRestartIndex = unsafeBitCast(OpenGL.getfp("glPrimitiveRestartIndex", support: [OpenGL.ss355]), to: Swift.type(of: OpenGL.glPrimitiveRestartIndex))
    OpenGL.glPrimitiveRestartIndex(index)
}
fileprivate 
func _load_glPrimitiveRestartIndexNV(index:OpenGL.UInt)
{
    OpenGL.glPrimitiveRestartIndexNV = unsafeBitCast(OpenGL.getfp("glPrimitiveRestartIndexNV", support: [OpenGL.ss265]), to: Swift.type(of: OpenGL.glPrimitiveRestartIndexNV))
    OpenGL.glPrimitiveRestartIndexNV(index)
}
fileprivate 
func _load_glPrimitiveRestartNV()
{
    OpenGL.glPrimitiveRestartNV = unsafeBitCast(OpenGL.getfp("glPrimitiveRestartNV", support: [OpenGL.ss265]), to: Swift.type(of: OpenGL.glPrimitiveRestartNV))
    OpenGL.glPrimitiveRestartNV()
}
fileprivate 
func _load_glPrioritizeTextures(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?, priorities:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glPrioritizeTextures = unsafeBitCast(OpenGL.getfp("glPrioritizeTextures", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPrioritizeTextures))
    OpenGL.glPrioritizeTextures(n, textures, priorities)
}
fileprivate 
func _load_glPrioritizeTexturesEXT(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?, priorities:UnsafePointer<OpenGL.ClampFloat>?)
{
    OpenGL.glPrioritizeTexturesEXT = unsafeBitCast(OpenGL.getfp("glPrioritizeTexturesEXT", support: [OpenGL.ss196]), to: Swift.type(of: OpenGL.glPrioritizeTexturesEXT))
    OpenGL.glPrioritizeTexturesEXT(n, textures, priorities)
}
fileprivate 
func _load_glPrioritizeTexturesxOES(n:OpenGL.Size, textures:UnsafePointer<OpenGL.UInt>?, priorities:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glPrioritizeTexturesxOES = unsafeBitCast(OpenGL.getfp("glPrioritizeTexturesxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glPrioritizeTexturesxOES))
    OpenGL.glPrioritizeTexturesxOES(n, textures, priorities)
}
fileprivate 
func _load_glProgramBinary(program:OpenGL.UInt, binaryFormat:OpenGL.Enum, binary:UnsafeRawPointer?, length:OpenGL.Size)
{
    OpenGL.glProgramBinary = unsafeBitCast(OpenGL.getfp("glProgramBinary", support: [OpenGL.ss359, OpenGL.ss366, OpenGL.ss55]), to: Swift.type(of: OpenGL.glProgramBinary))
    OpenGL.glProgramBinary(program, binaryFormat, binary, length)
}
fileprivate 
func _load_glProgramBinaryOES(program:OpenGL.UInt, binaryFormat:OpenGL.Enum, binary:UnsafeRawPointer?, length:OpenGL.Int)
{
    OpenGL.glProgramBinaryOES = unsafeBitCast(OpenGL.getfp("glProgramBinaryOES", support: [OpenGL.ss295]), to: Swift.type(of: OpenGL.glProgramBinaryOES))
    OpenGL.glProgramBinaryOES(program, binaryFormat, binary, length)
}
fileprivate 
func _load_glProgramBufferParametersIivNV(target:OpenGL.Enum, bindingIndex:OpenGL.UInt, wordIndex:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramBufferParametersIivNV = unsafeBitCast(OpenGL.getfp("glProgramBufferParametersIivNV", support: [OpenGL.ss259]), to: Swift.type(of: OpenGL.glProgramBufferParametersIivNV))
    OpenGL.glProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params)
}
fileprivate 
func _load_glProgramBufferParametersIuivNV(target:OpenGL.Enum, bindingIndex:OpenGL.UInt, wordIndex:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramBufferParametersIuivNV = unsafeBitCast(OpenGL.getfp("glProgramBufferParametersIuivNV", support: [OpenGL.ss259]), to: Swift.type(of: OpenGL.glProgramBufferParametersIuivNV))
    OpenGL.glProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params)
}
fileprivate 
func _load_glProgramBufferParametersfvNV(target:OpenGL.Enum, bindingIndex:OpenGL.UInt, wordIndex:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramBufferParametersfvNV = unsafeBitCast(OpenGL.getfp("glProgramBufferParametersfvNV", support: [OpenGL.ss259]), to: Swift.type(of: OpenGL.glProgramBufferParametersfvNV))
    OpenGL.glProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params)
}
fileprivate 
func _load_glProgramEnvParameter4dARB(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glProgramEnvParameter4dARB = unsafeBitCast(OpenGL.getfp("glProgramEnvParameter4dARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramEnvParameter4dARB))
    OpenGL.glProgramEnvParameter4dARB(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramEnvParameter4dvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramEnvParameter4dvARB = unsafeBitCast(OpenGL.getfp("glProgramEnvParameter4dvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramEnvParameter4dvARB))
    OpenGL.glProgramEnvParameter4dvARB(target, index, params)
}
fileprivate 
func _load_glProgramEnvParameter4fARB(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glProgramEnvParameter4fARB = unsafeBitCast(OpenGL.getfp("glProgramEnvParameter4fARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramEnvParameter4fARB))
    OpenGL.glProgramEnvParameter4fARB(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramEnvParameter4fvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramEnvParameter4fvARB = unsafeBitCast(OpenGL.getfp("glProgramEnvParameter4fvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramEnvParameter4fvARB))
    OpenGL.glProgramEnvParameter4fvARB(target, index, params)
}
fileprivate 
func _load_glProgramEnvParameterI4iNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glProgramEnvParameterI4iNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParameterI4iNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParameterI4iNV))
    OpenGL.glProgramEnvParameterI4iNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramEnvParameterI4ivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramEnvParameterI4ivNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParameterI4ivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParameterI4ivNV))
    OpenGL.glProgramEnvParameterI4ivNV(target, index, params)
}
fileprivate 
func _load_glProgramEnvParameterI4uiNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt, w:OpenGL.UInt)
{
    OpenGL.glProgramEnvParameterI4uiNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParameterI4uiNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParameterI4uiNV))
    OpenGL.glProgramEnvParameterI4uiNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramEnvParameterI4uivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramEnvParameterI4uivNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParameterI4uivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParameterI4uivNV))
    OpenGL.glProgramEnvParameterI4uivNV(target, index, params)
}
fileprivate 
func _load_glProgramEnvParameters4fvEXT(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramEnvParameters4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramEnvParameters4fvEXT", support: [OpenGL.ss158]), to: Swift.type(of: OpenGL.glProgramEnvParameters4fvEXT))
    OpenGL.glProgramEnvParameters4fvEXT(target, index, count, params)
}
fileprivate 
func _load_glProgramEnvParametersI4ivNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramEnvParametersI4ivNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParametersI4ivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParametersI4ivNV))
    OpenGL.glProgramEnvParametersI4ivNV(target, index, count, params)
}
fileprivate 
func _load_glProgramEnvParametersI4uivNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramEnvParametersI4uivNV = unsafeBitCast(OpenGL.getfp("glProgramEnvParametersI4uivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramEnvParametersI4uivNV))
    OpenGL.glProgramEnvParametersI4uivNV(target, index, count, params)
}
fileprivate 
func _load_glProgramLocalParameter4dARB(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glProgramLocalParameter4dARB = unsafeBitCast(OpenGL.getfp("glProgramLocalParameter4dARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramLocalParameter4dARB))
    OpenGL.glProgramLocalParameter4dARB(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramLocalParameter4dvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramLocalParameter4dvARB = unsafeBitCast(OpenGL.getfp("glProgramLocalParameter4dvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramLocalParameter4dvARB))
    OpenGL.glProgramLocalParameter4dvARB(target, index, params)
}
fileprivate 
func _load_glProgramLocalParameter4fARB(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glProgramLocalParameter4fARB = unsafeBitCast(OpenGL.getfp("glProgramLocalParameter4fARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramLocalParameter4fARB))
    OpenGL.glProgramLocalParameter4fARB(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramLocalParameter4fvARB(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramLocalParameter4fvARB = unsafeBitCast(OpenGL.getfp("glProgramLocalParameter4fvARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramLocalParameter4fvARB))
    OpenGL.glProgramLocalParameter4fvARB(target, index, params)
}
fileprivate 
func _load_glProgramLocalParameterI4iNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glProgramLocalParameterI4iNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParameterI4iNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParameterI4iNV))
    OpenGL.glProgramLocalParameterI4iNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramLocalParameterI4ivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramLocalParameterI4ivNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParameterI4ivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParameterI4ivNV))
    OpenGL.glProgramLocalParameterI4ivNV(target, index, params)
}
fileprivate 
func _load_glProgramLocalParameterI4uiNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt, w:OpenGL.UInt)
{
    OpenGL.glProgramLocalParameterI4uiNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParameterI4uiNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParameterI4uiNV))
    OpenGL.glProgramLocalParameterI4uiNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramLocalParameterI4uivNV(target:OpenGL.Enum, index:OpenGL.UInt, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramLocalParameterI4uivNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParameterI4uivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParameterI4uivNV))
    OpenGL.glProgramLocalParameterI4uivNV(target, index, params)
}
fileprivate 
func _load_glProgramLocalParameters4fvEXT(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramLocalParameters4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramLocalParameters4fvEXT", support: [OpenGL.ss158]), to: Swift.type(of: OpenGL.glProgramLocalParameters4fvEXT))
    OpenGL.glProgramLocalParameters4fvEXT(target, index, count, params)
}
fileprivate 
func _load_glProgramLocalParametersI4ivNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramLocalParametersI4ivNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParametersI4ivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParametersI4ivNV))
    OpenGL.glProgramLocalParametersI4ivNV(target, index, count, params)
}
fileprivate 
func _load_glProgramLocalParametersI4uivNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramLocalParametersI4uivNV = unsafeBitCast(OpenGL.getfp("glProgramLocalParametersI4uivNV", support: [OpenGL.ss251]), to: Swift.type(of: OpenGL.glProgramLocalParametersI4uivNV))
    OpenGL.glProgramLocalParametersI4uivNV(target, index, count, params)
}
fileprivate 
func _load_glProgramNamedParameter4dNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glProgramNamedParameter4dNV = unsafeBitCast(OpenGL.getfp("glProgramNamedParameter4dNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glProgramNamedParameter4dNV))
    OpenGL.glProgramNamedParameter4dNV(id, len, name, x, y, z, w)
}
fileprivate 
func _load_glProgramNamedParameter4dvNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramNamedParameter4dvNV = unsafeBitCast(OpenGL.getfp("glProgramNamedParameter4dvNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glProgramNamedParameter4dvNV))
    OpenGL.glProgramNamedParameter4dvNV(id, len, name, v)
}
fileprivate 
func _load_glProgramNamedParameter4fNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glProgramNamedParameter4fNV = unsafeBitCast(OpenGL.getfp("glProgramNamedParameter4fNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glProgramNamedParameter4fNV))
    OpenGL.glProgramNamedParameter4fNV(id, len, name, x, y, z, w)
}
fileprivate 
func _load_glProgramNamedParameter4fvNV(id:OpenGL.UInt, len:OpenGL.Size, name:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramNamedParameter4fvNV = unsafeBitCast(OpenGL.getfp("glProgramNamedParameter4fvNV", support: [OpenGL.ss245]), to: Swift.type(of: OpenGL.glProgramNamedParameter4fvNV))
    OpenGL.glProgramNamedParameter4fvNV(id, len, name, v)
}
fileprivate 
func _load_glProgramParameter4dNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glProgramParameter4dNV = unsafeBitCast(OpenGL.getfp("glProgramParameter4dNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameter4dNV))
    OpenGL.glProgramParameter4dNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramParameter4dvNV(target:OpenGL.Enum, index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramParameter4dvNV = unsafeBitCast(OpenGL.getfp("glProgramParameter4dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameter4dvNV))
    OpenGL.glProgramParameter4dvNV(target, index, v)
}
fileprivate 
func _load_glProgramParameter4fNV(target:OpenGL.Enum, index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glProgramParameter4fNV = unsafeBitCast(OpenGL.getfp("glProgramParameter4fNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameter4fNV))
    OpenGL.glProgramParameter4fNV(target, index, x, y, z, w)
}
fileprivate 
func _load_glProgramParameter4fvNV(target:OpenGL.Enum, index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramParameter4fvNV = unsafeBitCast(OpenGL.getfp("glProgramParameter4fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameter4fvNV))
    OpenGL.glProgramParameter4fvNV(target, index, v)
}
fileprivate 
func _load_glProgramParameteri(program:OpenGL.UInt, pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glProgramParameteri = unsafeBitCast(OpenGL.getfp("glProgramParameteri", support: [OpenGL.ss359, OpenGL.ss366, OpenGL.ss55]), to: Swift.type(of: OpenGL.glProgramParameteri))
    OpenGL.glProgramParameteri(program, pname, value)
}
fileprivate 
func _load_glProgramParameteriARB(program:OpenGL.UInt, pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glProgramParameteriARB = unsafeBitCast(OpenGL.getfp("glProgramParameteriARB", support: [OpenGL.ss54]), to: Swift.type(of: OpenGL.glProgramParameteriARB))
    OpenGL.glProgramParameteriARB(program, pname, value)
}
fileprivate 
func _load_glProgramParameteriEXT(program:OpenGL.UInt, pname:OpenGL.Enum, value:OpenGL.Int)
{
    OpenGL.glProgramParameteriEXT = unsafeBitCast(OpenGL.getfp("glProgramParameteriEXT", support: [OpenGL.ss157, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramParameteriEXT))
    OpenGL.glProgramParameteriEXT(program, pname, value)
}
fileprivate 
func _load_glProgramParameters4dvNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramParameters4dvNV = unsafeBitCast(OpenGL.getfp("glProgramParameters4dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameters4dvNV))
    OpenGL.glProgramParameters4dvNV(target, index, count, v)
}
fileprivate 
func _load_glProgramParameters4fvNV(target:OpenGL.Enum, index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramParameters4fvNV = unsafeBitCast(OpenGL.getfp("glProgramParameters4fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glProgramParameters4fvNV))
    OpenGL.glProgramParameters4fvNV(target, index, count, v)
}
fileprivate 
func _load_glProgramPathFragmentInputGenNV(program:OpenGL.UInt, location:OpenGL.Int, genMode:OpenGL.Enum, components:OpenGL.Int, coeffs:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramPathFragmentInputGenNV = unsafeBitCast(OpenGL.getfp("glProgramPathFragmentInputGenNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glProgramPathFragmentInputGenNV))
    OpenGL.glProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs)
}
fileprivate 
func _load_glProgramStringARB(target:OpenGL.Enum, format:OpenGL.Enum, len:OpenGL.Size, string:UnsafeRawPointer?)
{
    OpenGL.glProgramStringARB = unsafeBitCast(OpenGL.getfp("glProgramStringARB", support: [OpenGL.ss51, OpenGL.ss110]), to: Swift.type(of: OpenGL.glProgramStringARB))
    OpenGL.glProgramStringARB(target, format, len, string)
}
fileprivate 
func _load_glProgramSubroutineParametersuivNV(target:OpenGL.Enum, count:OpenGL.Size, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramSubroutineParametersuivNV = unsafeBitCast(OpenGL.getfp("glProgramSubroutineParametersuivNV", support: [OpenGL.ss252]), to: Swift.type(of: OpenGL.glProgramSubroutineParametersuivNV))
    OpenGL.glProgramSubroutineParametersuivNV(target, count, params)
}
fileprivate 
func _load_glProgramUniform1d(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Double)
{
    OpenGL.glProgramUniform1d = unsafeBitCast(OpenGL.getfp("glProgramUniform1d", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1d))
    OpenGL.glProgramUniform1d(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1dEXT(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Double)
{
    OpenGL.glProgramUniform1dEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1dEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform1dEXT))
    OpenGL.glProgramUniform1dEXT(program, location, x)
}
fileprivate 
func _load_glProgramUniform1dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform1dv = unsafeBitCast(OpenGL.getfp("glProgramUniform1dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1dv))
    OpenGL.glProgramUniform1dv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform1dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform1dvEXT))
    OpenGL.glProgramUniform1dvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1f(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float)
{
    OpenGL.glProgramUniform1f = unsafeBitCast(OpenGL.getfp("glProgramUniform1f", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1f))
    OpenGL.glProgramUniform1f(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1fEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float)
{
    OpenGL.glProgramUniform1fEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1fEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1fEXT))
    OpenGL.glProgramUniform1fEXT(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform1fv = unsafeBitCast(OpenGL.getfp("glProgramUniform1fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1fv))
    OpenGL.glProgramUniform1fv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform1fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1fvEXT))
    OpenGL.glProgramUniform1fvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1i(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int)
{
    OpenGL.glProgramUniform1i = unsafeBitCast(OpenGL.getfp("glProgramUniform1i", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1i))
    OpenGL.glProgramUniform1i(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1i64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64)
{
    OpenGL.glProgramUniform1i64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform1i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform1i64ARB))
    OpenGL.glProgramUniform1i64ARB(program, location, x)
}
fileprivate 
func _load_glProgramUniform1i64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64EXT)
{
    OpenGL.glProgramUniform1i64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform1i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform1i64NV))
    OpenGL.glProgramUniform1i64NV(program, location, x)
}
fileprivate 
func _load_glProgramUniform1i64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glProgramUniform1i64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform1i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform1i64vARB))
    OpenGL.glProgramUniform1i64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1i64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glProgramUniform1i64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform1i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform1i64vNV))
    OpenGL.glProgramUniform1i64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1iEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int)
{
    OpenGL.glProgramUniform1iEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1iEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1iEXT))
    OpenGL.glProgramUniform1iEXT(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1iv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform1iv = unsafeBitCast(OpenGL.getfp("glProgramUniform1iv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1iv))
    OpenGL.glProgramUniform1iv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1ivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform1ivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1ivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1ivEXT))
    OpenGL.glProgramUniform1ivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1ui(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt)
{
    OpenGL.glProgramUniform1ui = unsafeBitCast(OpenGL.getfp("glProgramUniform1ui", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1ui))
    OpenGL.glProgramUniform1ui(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1ui64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64)
{
    OpenGL.glProgramUniform1ui64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform1ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform1ui64ARB))
    OpenGL.glProgramUniform1ui64ARB(program, location, x)
}
fileprivate 
func _load_glProgramUniform1ui64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64EXT)
{
    OpenGL.glProgramUniform1ui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform1ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform1ui64NV))
    OpenGL.glProgramUniform1ui64NV(program, location, x)
}
fileprivate 
func _load_glProgramUniform1ui64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniform1ui64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform1ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform1ui64vARB))
    OpenGL.glProgramUniform1ui64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1ui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glProgramUniform1ui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform1ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform1ui64vNV))
    OpenGL.glProgramUniform1ui64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1uiEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt)
{
    OpenGL.glProgramUniform1uiEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1uiEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1uiEXT))
    OpenGL.glProgramUniform1uiEXT(program, location, v0)
}
fileprivate 
func _load_glProgramUniform1uiv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform1uiv = unsafeBitCast(OpenGL.getfp("glProgramUniform1uiv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform1uiv))
    OpenGL.glProgramUniform1uiv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform1uivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform1uivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform1uivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform1uivEXT))
    OpenGL.glProgramUniform1uivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2d(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Double, v1:OpenGL.Double)
{
    OpenGL.glProgramUniform2d = unsafeBitCast(OpenGL.getfp("glProgramUniform2d", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2d))
    OpenGL.glProgramUniform2d(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2dEXT(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glProgramUniform2dEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2dEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform2dEXT))
    OpenGL.glProgramUniform2dEXT(program, location, x, y)
}
fileprivate 
func _load_glProgramUniform2dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform2dv = unsafeBitCast(OpenGL.getfp("glProgramUniform2dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2dv))
    OpenGL.glProgramUniform2dv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform2dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform2dvEXT))
    OpenGL.glProgramUniform2dvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2f(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float)
{
    OpenGL.glProgramUniform2f = unsafeBitCast(OpenGL.getfp("glProgramUniform2f", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2f))
    OpenGL.glProgramUniform2f(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2fEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float)
{
    OpenGL.glProgramUniform2fEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2fEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2fEXT))
    OpenGL.glProgramUniform2fEXT(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform2fv = unsafeBitCast(OpenGL.getfp("glProgramUniform2fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2fv))
    OpenGL.glProgramUniform2fv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform2fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2fvEXT))
    OpenGL.glProgramUniform2fvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2i(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int)
{
    OpenGL.glProgramUniform2i = unsafeBitCast(OpenGL.getfp("glProgramUniform2i", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2i))
    OpenGL.glProgramUniform2i(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2i64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64)
{
    OpenGL.glProgramUniform2i64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform2i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform2i64ARB))
    OpenGL.glProgramUniform2i64ARB(program, location, x, y)
}
fileprivate 
func _load_glProgramUniform2i64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT)
{
    OpenGL.glProgramUniform2i64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform2i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform2i64NV))
    OpenGL.glProgramUniform2i64NV(program, location, x, y)
}
fileprivate 
func _load_glProgramUniform2i64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glProgramUniform2i64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform2i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform2i64vARB))
    OpenGL.glProgramUniform2i64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2i64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glProgramUniform2i64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform2i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform2i64vNV))
    OpenGL.glProgramUniform2i64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2iEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int)
{
    OpenGL.glProgramUniform2iEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2iEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2iEXT))
    OpenGL.glProgramUniform2iEXT(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2iv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform2iv = unsafeBitCast(OpenGL.getfp("glProgramUniform2iv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2iv))
    OpenGL.glProgramUniform2iv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2ivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform2ivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2ivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2ivEXT))
    OpenGL.glProgramUniform2ivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2ui(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt)
{
    OpenGL.glProgramUniform2ui = unsafeBitCast(OpenGL.getfp("glProgramUniform2ui", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2ui))
    OpenGL.glProgramUniform2ui(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2ui64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64)
{
    OpenGL.glProgramUniform2ui64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform2ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform2ui64ARB))
    OpenGL.glProgramUniform2ui64ARB(program, location, x, y)
}
fileprivate 
func _load_glProgramUniform2ui64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT)
{
    OpenGL.glProgramUniform2ui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform2ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform2ui64NV))
    OpenGL.glProgramUniform2ui64NV(program, location, x, y)
}
fileprivate 
func _load_glProgramUniform2ui64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniform2ui64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform2ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform2ui64vARB))
    OpenGL.glProgramUniform2ui64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2ui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glProgramUniform2ui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform2ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform2ui64vNV))
    OpenGL.glProgramUniform2ui64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2uiEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt)
{
    OpenGL.glProgramUniform2uiEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2uiEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2uiEXT))
    OpenGL.glProgramUniform2uiEXT(program, location, v0, v1)
}
fileprivate 
func _load_glProgramUniform2uiv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform2uiv = unsafeBitCast(OpenGL.getfp("glProgramUniform2uiv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform2uiv))
    OpenGL.glProgramUniform2uiv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform2uivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform2uivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform2uivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform2uivEXT))
    OpenGL.glProgramUniform2uivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3d(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Double, v1:OpenGL.Double, v2:OpenGL.Double)
{
    OpenGL.glProgramUniform3d = unsafeBitCast(OpenGL.getfp("glProgramUniform3d", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3d))
    OpenGL.glProgramUniform3d(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3dEXT(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glProgramUniform3dEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3dEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform3dEXT))
    OpenGL.glProgramUniform3dEXT(program, location, x, y, z)
}
fileprivate 
func _load_glProgramUniform3dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform3dv = unsafeBitCast(OpenGL.getfp("glProgramUniform3dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3dv))
    OpenGL.glProgramUniform3dv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform3dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform3dvEXT))
    OpenGL.glProgramUniform3dvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3f(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float)
{
    OpenGL.glProgramUniform3f = unsafeBitCast(OpenGL.getfp("glProgramUniform3f", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3f))
    OpenGL.glProgramUniform3f(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3fEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float)
{
    OpenGL.glProgramUniform3fEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3fEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3fEXT))
    OpenGL.glProgramUniform3fEXT(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform3fv = unsafeBitCast(OpenGL.getfp("glProgramUniform3fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3fv))
    OpenGL.glProgramUniform3fv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform3fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3fvEXT))
    OpenGL.glProgramUniform3fvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3i(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int)
{
    OpenGL.glProgramUniform3i = unsafeBitCast(OpenGL.getfp("glProgramUniform3i", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3i))
    OpenGL.glProgramUniform3i(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3i64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64, z:OpenGL.Int64)
{
    OpenGL.glProgramUniform3i64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform3i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform3i64ARB))
    OpenGL.glProgramUniform3i64ARB(program, location, x, y, z)
}
fileprivate 
func _load_glProgramUniform3i64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT)
{
    OpenGL.glProgramUniform3i64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform3i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform3i64NV))
    OpenGL.glProgramUniform3i64NV(program, location, x, y, z)
}
fileprivate 
func _load_glProgramUniform3i64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glProgramUniform3i64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform3i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform3i64vARB))
    OpenGL.glProgramUniform3i64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3i64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glProgramUniform3i64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform3i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform3i64vNV))
    OpenGL.glProgramUniform3i64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3iEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int)
{
    OpenGL.glProgramUniform3iEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3iEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3iEXT))
    OpenGL.glProgramUniform3iEXT(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3iv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform3iv = unsafeBitCast(OpenGL.getfp("glProgramUniform3iv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3iv))
    OpenGL.glProgramUniform3iv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3ivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform3ivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3ivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3ivEXT))
    OpenGL.glProgramUniform3ivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3ui(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt)
{
    OpenGL.glProgramUniform3ui = unsafeBitCast(OpenGL.getfp("glProgramUniform3ui", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3ui))
    OpenGL.glProgramUniform3ui(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3ui64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64, z:OpenGL.UInt64)
{
    OpenGL.glProgramUniform3ui64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform3ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform3ui64ARB))
    OpenGL.glProgramUniform3ui64ARB(program, location, x, y, z)
}
fileprivate 
func _load_glProgramUniform3ui64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT)
{
    OpenGL.glProgramUniform3ui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform3ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform3ui64NV))
    OpenGL.glProgramUniform3ui64NV(program, location, x, y, z)
}
fileprivate 
func _load_glProgramUniform3ui64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniform3ui64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform3ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform3ui64vARB))
    OpenGL.glProgramUniform3ui64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3ui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glProgramUniform3ui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform3ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform3ui64vNV))
    OpenGL.glProgramUniform3ui64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3uiEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt)
{
    OpenGL.glProgramUniform3uiEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3uiEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3uiEXT))
    OpenGL.glProgramUniform3uiEXT(program, location, v0, v1, v2)
}
fileprivate 
func _load_glProgramUniform3uiv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform3uiv = unsafeBitCast(OpenGL.getfp("glProgramUniform3uiv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform3uiv))
    OpenGL.glProgramUniform3uiv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform3uivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform3uivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform3uivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform3uivEXT))
    OpenGL.glProgramUniform3uivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4d(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Double, v1:OpenGL.Double, v2:OpenGL.Double, v3:OpenGL.Double)
{
    OpenGL.glProgramUniform4d = unsafeBitCast(OpenGL.getfp("glProgramUniform4d", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4d))
    OpenGL.glProgramUniform4d(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4dEXT(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glProgramUniform4dEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4dEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform4dEXT))
    OpenGL.glProgramUniform4dEXT(program, location, x, y, z, w)
}
fileprivate 
func _load_glProgramUniform4dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform4dv = unsafeBitCast(OpenGL.getfp("glProgramUniform4dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4dv))
    OpenGL.glProgramUniform4dv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniform4dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniform4dvEXT))
    OpenGL.glProgramUniform4dvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4f(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float, v3:OpenGL.Float)
{
    OpenGL.glProgramUniform4f = unsafeBitCast(OpenGL.getfp("glProgramUniform4f", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4f))
    OpenGL.glProgramUniform4f(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4fEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float, v3:OpenGL.Float)
{
    OpenGL.glProgramUniform4fEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4fEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4fEXT))
    OpenGL.glProgramUniform4fEXT(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform4fv = unsafeBitCast(OpenGL.getfp("glProgramUniform4fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4fv))
    OpenGL.glProgramUniform4fv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniform4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4fvEXT))
    OpenGL.glProgramUniform4fvEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4i(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int, v3:OpenGL.Int)
{
    OpenGL.glProgramUniform4i = unsafeBitCast(OpenGL.getfp("glProgramUniform4i", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4i))
    OpenGL.glProgramUniform4i(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4i64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64, z:OpenGL.Int64, w:OpenGL.Int64)
{
    OpenGL.glProgramUniform4i64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform4i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform4i64ARB))
    OpenGL.glProgramUniform4i64ARB(program, location, x, y, z, w)
}
fileprivate 
func _load_glProgramUniform4i64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT, w:OpenGL.Int64EXT)
{
    OpenGL.glProgramUniform4i64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform4i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform4i64NV))
    OpenGL.glProgramUniform4i64NV(program, location, x, y, z, w)
}
fileprivate 
func _load_glProgramUniform4i64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glProgramUniform4i64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform4i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform4i64vARB))
    OpenGL.glProgramUniform4i64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4i64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glProgramUniform4i64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform4i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform4i64vNV))
    OpenGL.glProgramUniform4i64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4iEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int, v3:OpenGL.Int)
{
    OpenGL.glProgramUniform4iEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4iEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4iEXT))
    OpenGL.glProgramUniform4iEXT(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4iv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform4iv = unsafeBitCast(OpenGL.getfp("glProgramUniform4iv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4iv))
    OpenGL.glProgramUniform4iv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4ivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glProgramUniform4ivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4ivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4ivEXT))
    OpenGL.glProgramUniform4ivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4ui(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt, v3:OpenGL.UInt)
{
    OpenGL.glProgramUniform4ui = unsafeBitCast(OpenGL.getfp("glProgramUniform4ui", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4ui))
    OpenGL.glProgramUniform4ui(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4ui64ARB(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64, z:OpenGL.UInt64, w:OpenGL.UInt64)
{
    OpenGL.glProgramUniform4ui64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniform4ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform4ui64ARB))
    OpenGL.glProgramUniform4ui64ARB(program, location, x, y, z, w)
}
fileprivate 
func _load_glProgramUniform4ui64NV(program:OpenGL.UInt, location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT, w:OpenGL.UInt64EXT)
{
    OpenGL.glProgramUniform4ui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniform4ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform4ui64NV))
    OpenGL.glProgramUniform4ui64NV(program, location, x, y, z, w)
}
fileprivate 
func _load_glProgramUniform4ui64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniform4ui64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniform4ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glProgramUniform4ui64vARB))
    OpenGL.glProgramUniform4ui64vARB(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4ui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glProgramUniform4ui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniform4ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glProgramUniform4ui64vNV))
    OpenGL.glProgramUniform4ui64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4uiEXT(program:OpenGL.UInt, location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt, v3:OpenGL.UInt)
{
    OpenGL.glProgramUniform4uiEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4uiEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4uiEXT))
    OpenGL.glProgramUniform4uiEXT(program, location, v0, v1, v2, v3)
}
fileprivate 
func _load_glProgramUniform4uiv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform4uiv = unsafeBitCast(OpenGL.getfp("glProgramUniform4uiv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniform4uiv))
    OpenGL.glProgramUniform4uiv(program, location, count, value)
}
fileprivate 
func _load_glProgramUniform4uivEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glProgramUniform4uivEXT = unsafeBitCast(OpenGL.getfp("glProgramUniform4uivEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniform4uivEXT))
    OpenGL.glProgramUniform4uivEXT(program, location, count, value)
}
fileprivate 
func _load_glProgramUniformHandleui64ARB(program:OpenGL.UInt, location:OpenGL.Int, value:OpenGL.UInt64)
{
    OpenGL.glProgramUniformHandleui64ARB = unsafeBitCast(OpenGL.getfp("glProgramUniformHandleui64ARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glProgramUniformHandleui64ARB))
    OpenGL.glProgramUniformHandleui64ARB(program, location, value)
}
fileprivate 
func _load_glProgramUniformHandleui64NV(program:OpenGL.UInt, location:OpenGL.Int, value:OpenGL.UInt64)
{
    OpenGL.glProgramUniformHandleui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniformHandleui64NV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glProgramUniformHandleui64NV))
    OpenGL.glProgramUniformHandleui64NV(program, location, value)
}
fileprivate 
func _load_glProgramUniformHandleui64vARB(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, values:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniformHandleui64vARB = unsafeBitCast(OpenGL.getfp("glProgramUniformHandleui64vARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glProgramUniformHandleui64vARB))
    OpenGL.glProgramUniformHandleui64vARB(program, location, count, values)
}
fileprivate 
func _load_glProgramUniformHandleui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, values:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glProgramUniformHandleui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniformHandleui64vNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glProgramUniformHandleui64vNV))
    OpenGL.glProgramUniformHandleui64vNV(program, location, count, values)
}
fileprivate 
func _load_glProgramUniformMatrix2dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2dv))
    OpenGL.glProgramUniformMatrix2dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2dvEXT))
    OpenGL.glProgramUniformMatrix2dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2fv))
    OpenGL.glProgramUniformMatrix2fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2fvEXT))
    OpenGL.glProgramUniformMatrix2fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x3dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2x3dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x3dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x3dv))
    OpenGL.glProgramUniformMatrix2x3dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x3dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2x3dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x3dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x3dvEXT))
    OpenGL.glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x3fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2x3fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x3fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x3fv))
    OpenGL.glProgramUniformMatrix2x3fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x3fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2x3fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x3fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x3fvEXT))
    OpenGL.glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x4dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2x4dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x4dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x4dv))
    OpenGL.glProgramUniformMatrix2x4dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x4dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix2x4dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x4dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x4dvEXT))
    OpenGL.glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x4fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2x4fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x4fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x4fv))
    OpenGL.glProgramUniformMatrix2x4fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix2x4fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix2x4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix2x4fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix2x4fvEXT))
    OpenGL.glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3dv))
    OpenGL.glProgramUniformMatrix3dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3dvEXT))
    OpenGL.glProgramUniformMatrix3dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3fv))
    OpenGL.glProgramUniformMatrix3fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3fvEXT))
    OpenGL.glProgramUniformMatrix3fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x2dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3x2dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x2dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x2dv))
    OpenGL.glProgramUniformMatrix3x2dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x2dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3x2dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x2dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x2dvEXT))
    OpenGL.glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x2fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3x2fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x2fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x2fv))
    OpenGL.glProgramUniformMatrix3x2fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x2fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3x2fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x2fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x2fvEXT))
    OpenGL.glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x4dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3x4dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x4dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x4dv))
    OpenGL.glProgramUniformMatrix3x4dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x4dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix3x4dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x4dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x4dvEXT))
    OpenGL.glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x4fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3x4fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x4fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x4fv))
    OpenGL.glProgramUniformMatrix3x4fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix3x4fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix3x4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix3x4fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix3x4fvEXT))
    OpenGL.glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4dv))
    OpenGL.glProgramUniformMatrix4dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4dvEXT))
    OpenGL.glProgramUniformMatrix4dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4fv))
    OpenGL.glProgramUniformMatrix4fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4fvEXT", support: [OpenGL.ss143, OpenGL.ss182, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4fvEXT))
    OpenGL.glProgramUniformMatrix4fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x2dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4x2dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x2dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x2dv))
    OpenGL.glProgramUniformMatrix4x2dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x2dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4x2dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x2dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x2dvEXT))
    OpenGL.glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x2fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4x2fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x2fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x2fv))
    OpenGL.glProgramUniformMatrix4x2fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x2fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4x2fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x2fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x2fvEXT))
    OpenGL.glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x3dv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4x3dv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x3dv", support: [OpenGL.ss359, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x3dv))
    OpenGL.glProgramUniformMatrix4x3dv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x3dvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glProgramUniformMatrix4x3dvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x3dvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x3dvEXT))
    OpenGL.glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x3fv(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4x3fv = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x3fv", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x3fv))
    OpenGL.glProgramUniformMatrix4x3fv(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformMatrix4x3fvEXT(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glProgramUniformMatrix4x3fvEXT = unsafeBitCast(OpenGL.getfp("glProgramUniformMatrix4x3fvEXT", support: [OpenGL.ss143, OpenGL.ss182]), to: Swift.type(of: OpenGL.glProgramUniformMatrix4x3fvEXT))
    OpenGL.glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value)
}
fileprivate 
func _load_glProgramUniformui64NV(program:OpenGL.UInt, location:OpenGL.Int, value:OpenGL.UInt64EXT)
{
    OpenGL.glProgramUniformui64NV = unsafeBitCast(OpenGL.getfp("glProgramUniformui64NV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glProgramUniformui64NV))
    OpenGL.glProgramUniformui64NV(program, location, value)
}
fileprivate 
func _load_glProgramUniformui64vNV(program:OpenGL.UInt, location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glProgramUniformui64vNV = unsafeBitCast(OpenGL.getfp("glProgramUniformui64vNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glProgramUniformui64vNV))
    OpenGL.glProgramUniformui64vNV(program, location, count, value)
}
fileprivate 
func _load_glProgramVertexLimitNV(target:OpenGL.Enum, limit:OpenGL.Int)
{
    OpenGL.glProgramVertexLimitNV = unsafeBitCast(OpenGL.getfp("glProgramVertexLimitNV", support: [OpenGL.ss250]), to: Swift.type(of: OpenGL.glProgramVertexLimitNV))
    OpenGL.glProgramVertexLimitNV(target, limit)
}
fileprivate 
func _load_glProvokingVertex(mode:OpenGL.Enum)
{
    OpenGL.glProvokingVertex = unsafeBitCast(OpenGL.getfp("glProvokingVertex", support: [OpenGL.ss356, OpenGL.ss75]), to: Swift.type(of: OpenGL.glProvokingVertex))
    OpenGL.glProvokingVertex(mode)
}
fileprivate 
func _load_glProvokingVertexEXT(mode:OpenGL.Enum)
{
    OpenGL.glProvokingVertexEXT = unsafeBitCast(OpenGL.getfp("glProvokingVertexEXT", support: [OpenGL.ss178]), to: Swift.type(of: OpenGL.glProvokingVertexEXT))
    OpenGL.glProvokingVertexEXT(mode)
}
fileprivate 
func _load_glPushAttrib(mask:OpenGL.Bitfield)
{
    OpenGL.glPushAttrib = unsafeBitCast(OpenGL.getfp("glPushAttrib", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPushAttrib))
    OpenGL.glPushAttrib(mask)
}
fileprivate 
func _load_glPushClientAttrib(mask:OpenGL.Bitfield)
{
    OpenGL.glPushClientAttrib = unsafeBitCast(OpenGL.getfp("glPushClientAttrib", support: [OpenGL.ss347, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPushClientAttrib))
    OpenGL.glPushClientAttrib(mask)
}
fileprivate 
func _load_glPushClientAttribDefaultEXT(mask:OpenGL.Bitfield)
{
    OpenGL.glPushClientAttribDefaultEXT = unsafeBitCast(OpenGL.getfp("glPushClientAttribDefaultEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glPushClientAttribDefaultEXT))
    OpenGL.glPushClientAttribDefaultEXT(mask)
}
fileprivate 
func _load_glPushDebugGroup(source:OpenGL.Enum, id:OpenGL.UInt, length:OpenGL.Size, message:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glPushDebugGroup = unsafeBitCast(OpenGL.getfp("glPushDebugGroup", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss221]), to: Swift.type(of: OpenGL.glPushDebugGroup))
    OpenGL.glPushDebugGroup(source, id, length, message)
}
fileprivate 
func _load_glPushDebugGroupKHR(source:OpenGL.Enum, id:OpenGL.UInt, length:OpenGL.Size, message:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glPushDebugGroupKHR = unsafeBitCast(OpenGL.getfp("glPushDebugGroupKHR", support: [OpenGL.ss221]), to: Swift.type(of: OpenGL.glPushDebugGroupKHR))
    OpenGL.glPushDebugGroupKHR(source, id, length, message)
}
fileprivate 
func _load_glPushGroupMarkerEXT(length:OpenGL.Size, marker:UnsafePointer<OpenGL.Char>?)
{
    OpenGL.glPushGroupMarkerEXT = unsafeBitCast(OpenGL.getfp("glPushGroupMarkerEXT", support: [OpenGL.ss141]), to: Swift.type(of: OpenGL.glPushGroupMarkerEXT))
    OpenGL.glPushGroupMarkerEXT(length, marker)
}
fileprivate 
func _load_glPushMatrix()
{
    OpenGL.glPushMatrix = unsafeBitCast(OpenGL.getfp("glPushMatrix", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glPushMatrix))
    OpenGL.glPushMatrix()
}
fileprivate 
func _load_glPushName(name:OpenGL.UInt)
{
    OpenGL.glPushName = unsafeBitCast(OpenGL.getfp("glPushName", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glPushName))
    OpenGL.glPushName(name)
}
fileprivate 
func _load_glQueryCounter(id:OpenGL.UInt, target:OpenGL.Enum)
{
    OpenGL.glQueryCounter = unsafeBitCast(OpenGL.getfp("glQueryCounter", support: [OpenGL.ss357, OpenGL.ss99]), to: Swift.type(of: OpenGL.glQueryCounter))
    OpenGL.glQueryCounter(id, target)
}
fileprivate 
func _load_glQueryCounterEXT(id:OpenGL.UInt, target:OpenGL.Enum)
{
    OpenGL.glQueryCounterEXT = unsafeBitCast(OpenGL.getfp("glQueryCounterEXT", support: [OpenGL.ss145]), to: Swift.type(of: OpenGL.glQueryCounterEXT))
    OpenGL.glQueryCounterEXT(id, target)
}
fileprivate 
func _load_glQueryMatrixxOES(mantissa:UnsafeMutablePointer<OpenGL.Fixed>?, exponent:UnsafeMutablePointer<OpenGL.Int>?) -> OpenGL.Bitfield
{
    OpenGL.glQueryMatrixxOES = unsafeBitCast(OpenGL.getfp("glQueryMatrixxOES", support: [OpenGL.ss300]), to: Swift.type(of: OpenGL.glQueryMatrixxOES))
    return OpenGL.glQueryMatrixxOES(mantissa, exponent)
}
fileprivate 
func _load_glQueryObjectParameteruiAMD(target:OpenGL.Enum, id:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.UInt)
{
    OpenGL.glQueryObjectParameteruiAMD = unsafeBitCast(OpenGL.getfp("glQueryObjectParameteruiAMD", support: [OpenGL.ss7]), to: Swift.type(of: OpenGL.glQueryObjectParameteruiAMD))
    OpenGL.glQueryObjectParameteruiAMD(target, id, pname, param)
}
fileprivate 
func _load_glRasterPos2d(x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glRasterPos2d = unsafeBitCast(OpenGL.getfp("glRasterPos2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2d))
    OpenGL.glRasterPos2d(x, y)
}
fileprivate 
func _load_glRasterPos2dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glRasterPos2dv = unsafeBitCast(OpenGL.getfp("glRasterPos2dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2dv))
    OpenGL.glRasterPos2dv(v)
}
fileprivate 
func _load_glRasterPos2f(x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glRasterPos2f = unsafeBitCast(OpenGL.getfp("glRasterPos2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2f))
    OpenGL.glRasterPos2f(x, y)
}
fileprivate 
func _load_glRasterPos2fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glRasterPos2fv = unsafeBitCast(OpenGL.getfp("glRasterPos2fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2fv))
    OpenGL.glRasterPos2fv(v)
}
fileprivate 
func _load_glRasterPos2i(x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glRasterPos2i = unsafeBitCast(OpenGL.getfp("glRasterPos2i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2i))
    OpenGL.glRasterPos2i(x, y)
}
fileprivate 
func _load_glRasterPos2iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glRasterPos2iv = unsafeBitCast(OpenGL.getfp("glRasterPos2iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2iv))
    OpenGL.glRasterPos2iv(v)
}
fileprivate 
func _load_glRasterPos2s(x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glRasterPos2s = unsafeBitCast(OpenGL.getfp("glRasterPos2s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2s))
    OpenGL.glRasterPos2s(x, y)
}
fileprivate 
func _load_glRasterPos2sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glRasterPos2sv = unsafeBitCast(OpenGL.getfp("glRasterPos2sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos2sv))
    OpenGL.glRasterPos2sv(v)
}
fileprivate 
func _load_glRasterPos2xOES(x:OpenGL.Fixed, y:OpenGL.Fixed)
{
    OpenGL.glRasterPos2xOES = unsafeBitCast(OpenGL.getfp("glRasterPos2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos2xOES))
    OpenGL.glRasterPos2xOES(x, y)
}
fileprivate 
func _load_glRasterPos2xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glRasterPos2xvOES = unsafeBitCast(OpenGL.getfp("glRasterPos2xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos2xvOES))
    OpenGL.glRasterPos2xvOES(coords)
}
fileprivate 
func _load_glRasterPos3d(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glRasterPos3d = unsafeBitCast(OpenGL.getfp("glRasterPos3d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3d))
    OpenGL.glRasterPos3d(x, y, z)
}
fileprivate 
func _load_glRasterPos3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glRasterPos3dv = unsafeBitCast(OpenGL.getfp("glRasterPos3dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3dv))
    OpenGL.glRasterPos3dv(v)
}
fileprivate 
func _load_glRasterPos3f(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glRasterPos3f = unsafeBitCast(OpenGL.getfp("glRasterPos3f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3f))
    OpenGL.glRasterPos3f(x, y, z)
}
fileprivate 
func _load_glRasterPos3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glRasterPos3fv = unsafeBitCast(OpenGL.getfp("glRasterPos3fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3fv))
    OpenGL.glRasterPos3fv(v)
}
fileprivate 
func _load_glRasterPos3i(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glRasterPos3i = unsafeBitCast(OpenGL.getfp("glRasterPos3i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3i))
    OpenGL.glRasterPos3i(x, y, z)
}
fileprivate 
func _load_glRasterPos3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glRasterPos3iv = unsafeBitCast(OpenGL.getfp("glRasterPos3iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3iv))
    OpenGL.glRasterPos3iv(v)
}
fileprivate 
func _load_glRasterPos3s(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glRasterPos3s = unsafeBitCast(OpenGL.getfp("glRasterPos3s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3s))
    OpenGL.glRasterPos3s(x, y, z)
}
fileprivate 
func _load_glRasterPos3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glRasterPos3sv = unsafeBitCast(OpenGL.getfp("glRasterPos3sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos3sv))
    OpenGL.glRasterPos3sv(v)
}
fileprivate 
func _load_glRasterPos3xOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glRasterPos3xOES = unsafeBitCast(OpenGL.getfp("glRasterPos3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos3xOES))
    OpenGL.glRasterPos3xOES(x, y, z)
}
fileprivate 
func _load_glRasterPos3xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glRasterPos3xvOES = unsafeBitCast(OpenGL.getfp("glRasterPos3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos3xvOES))
    OpenGL.glRasterPos3xvOES(coords)
}
fileprivate 
func _load_glRasterPos4d(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glRasterPos4d = unsafeBitCast(OpenGL.getfp("glRasterPos4d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4d))
    OpenGL.glRasterPos4d(x, y, z, w)
}
fileprivate 
func _load_glRasterPos4dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glRasterPos4dv = unsafeBitCast(OpenGL.getfp("glRasterPos4dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4dv))
    OpenGL.glRasterPos4dv(v)
}
fileprivate 
func _load_glRasterPos4f(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glRasterPos4f = unsafeBitCast(OpenGL.getfp("glRasterPos4f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4f))
    OpenGL.glRasterPos4f(x, y, z, w)
}
fileprivate 
func _load_glRasterPos4fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glRasterPos4fv = unsafeBitCast(OpenGL.getfp("glRasterPos4fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4fv))
    OpenGL.glRasterPos4fv(v)
}
fileprivate 
func _load_glRasterPos4i(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glRasterPos4i = unsafeBitCast(OpenGL.getfp("glRasterPos4i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4i))
    OpenGL.glRasterPos4i(x, y, z, w)
}
fileprivate 
func _load_glRasterPos4iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glRasterPos4iv = unsafeBitCast(OpenGL.getfp("glRasterPos4iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4iv))
    OpenGL.glRasterPos4iv(v)
}
fileprivate 
func _load_glRasterPos4s(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glRasterPos4s = unsafeBitCast(OpenGL.getfp("glRasterPos4s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4s))
    OpenGL.glRasterPos4s(x, y, z, w)
}
fileprivate 
func _load_glRasterPos4sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glRasterPos4sv = unsafeBitCast(OpenGL.getfp("glRasterPos4sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRasterPos4sv))
    OpenGL.glRasterPos4sv(v)
}
fileprivate 
func _load_glRasterPos4xOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed, w:OpenGL.Fixed)
{
    OpenGL.glRasterPos4xOES = unsafeBitCast(OpenGL.getfp("glRasterPos4xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos4xOES))
    OpenGL.glRasterPos4xOES(x, y, z, w)
}
fileprivate 
func _load_glRasterPos4xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glRasterPos4xvOES = unsafeBitCast(OpenGL.getfp("glRasterPos4xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRasterPos4xvOES))
    OpenGL.glRasterPos4xvOES(coords)
}
fileprivate 
func _load_glRasterSamplesEXT(samples:OpenGL.UInt, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glRasterSamplesEXT = unsafeBitCast(OpenGL.getfp("glRasterSamplesEXT", support: [OpenGL.ss179, OpenGL.ss194, OpenGL.ss247]), to: Swift.type(of: OpenGL.glRasterSamplesEXT))
    OpenGL.glRasterSamplesEXT(samples, fixedsamplelocations)
}
fileprivate 
func _load_glReadBuffer(src:OpenGL.Enum)
{
    OpenGL.glReadBuffer = unsafeBitCast(OpenGL.getfp("glReadBuffer", support: [OpenGL.ss346, OpenGL.ss366]), to: Swift.type(of: OpenGL.glReadBuffer))
    OpenGL.glReadBuffer(src)
}
fileprivate 
func _load_glReadBufferIndexedEXT(src:OpenGL.Enum, index:OpenGL.Int)
{
    OpenGL.glReadBufferIndexedEXT = unsafeBitCast(OpenGL.getfp("glReadBufferIndexedEXT", support: [OpenGL.ss170]), to: Swift.type(of: OpenGL.glReadBufferIndexedEXT))
    OpenGL.glReadBufferIndexedEXT(src, index)
}
fileprivate 
func _load_glReadBufferNV(mode:OpenGL.Enum)
{
    OpenGL.glReadBufferNV = unsafeBitCast(OpenGL.getfp("glReadBufferNV", support: [OpenGL.ss266]), to: Swift.type(of: OpenGL.glReadBufferNV))
    OpenGL.glReadBufferNV(mode)
}
fileprivate 
func _load_glReadInstrumentsSGIX(marker:OpenGL.Int)
{
    OpenGL.glReadInstrumentsSGIX = unsafeBitCast(OpenGL.getfp("glReadInstrumentsSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glReadInstrumentsSGIX))
    OpenGL.glReadInstrumentsSGIX(marker)
}
fileprivate 
func _load_glReadPixels(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeMutableRawPointer?)
{
    OpenGL.glReadPixels = unsafeBitCast(OpenGL.getfp("glReadPixels", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glReadPixels))
    OpenGL.glReadPixels(x, y, width, height, format, type, pixels)
}
fileprivate 
func _load_glReadnPixels(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, data:UnsafeMutableRawPointer?)
{
    OpenGL.glReadnPixels = unsafeBitCast(OpenGL.getfp("glReadnPixels", support: [OpenGL.ss363, OpenGL.ss368, OpenGL.ss222]), to: Swift.type(of: OpenGL.glReadnPixels))
    OpenGL.glReadnPixels(x, y, width, height, format, type, bufSize, data)
}
fileprivate 
func _load_glReadnPixelsARB(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, data:UnsafeMutableRawPointer?)
{
    OpenGL.glReadnPixelsARB = unsafeBitCast(OpenGL.getfp("glReadnPixelsARB", support: [OpenGL.ss76]), to: Swift.type(of: OpenGL.glReadnPixelsARB))
    OpenGL.glReadnPixelsARB(x, y, width, height, format, type, bufSize, data)
}
fileprivate 
func _load_glReadnPixelsEXT(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, data:UnsafeMutableRawPointer?)
{
    OpenGL.glReadnPixelsEXT = unsafeBitCast(OpenGL.getfp("glReadnPixelsEXT", support: [OpenGL.ss180]), to: Swift.type(of: OpenGL.glReadnPixelsEXT))
    OpenGL.glReadnPixelsEXT(x, y, width, height, format, type, bufSize, data)
}
fileprivate 
func _load_glReadnPixelsKHR(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, bufSize:OpenGL.Size, data:UnsafeMutableRawPointer?)
{
    OpenGL.glReadnPixelsKHR = unsafeBitCast(OpenGL.getfp("glReadnPixelsKHR", support: [OpenGL.ss222]), to: Swift.type(of: OpenGL.glReadnPixelsKHR))
    OpenGL.glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data)
}
fileprivate 
func _load_glRectd(x1:OpenGL.Double, y1:OpenGL.Double, x2:OpenGL.Double, y2:OpenGL.Double)
{
    OpenGL.glRectd = unsafeBitCast(OpenGL.getfp("glRectd", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectd))
    OpenGL.glRectd(x1, y1, x2, y2)
}
fileprivate 
func _load_glRectdv(v1:UnsafePointer<OpenGL.Double>?, v2:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glRectdv = unsafeBitCast(OpenGL.getfp("glRectdv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectdv))
    OpenGL.glRectdv(v1, v2)
}
fileprivate 
func _load_glRectf(x1:OpenGL.Float, y1:OpenGL.Float, x2:OpenGL.Float, y2:OpenGL.Float)
{
    OpenGL.glRectf = unsafeBitCast(OpenGL.getfp("glRectf", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectf))
    OpenGL.glRectf(x1, y1, x2, y2)
}
fileprivate 
func _load_glRectfv(v1:UnsafePointer<OpenGL.Float>?, v2:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glRectfv = unsafeBitCast(OpenGL.getfp("glRectfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectfv))
    OpenGL.glRectfv(v1, v2)
}
fileprivate 
func _load_glRecti(x1:OpenGL.Int, y1:OpenGL.Int, x2:OpenGL.Int, y2:OpenGL.Int)
{
    OpenGL.glRecti = unsafeBitCast(OpenGL.getfp("glRecti", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRecti))
    OpenGL.glRecti(x1, y1, x2, y2)
}
fileprivate 
func _load_glRectiv(v1:UnsafePointer<OpenGL.Int>?, v2:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glRectiv = unsafeBitCast(OpenGL.getfp("glRectiv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectiv))
    OpenGL.glRectiv(v1, v2)
}
fileprivate 
func _load_glRects(x1:OpenGL.Short, y1:OpenGL.Short, x2:OpenGL.Short, y2:OpenGL.Short)
{
    OpenGL.glRects = unsafeBitCast(OpenGL.getfp("glRects", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRects))
    OpenGL.glRects(x1, y1, x2, y2)
}
fileprivate 
func _load_glRectsv(v1:UnsafePointer<OpenGL.Short>?, v2:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glRectsv = unsafeBitCast(OpenGL.getfp("glRectsv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRectsv))
    OpenGL.glRectsv(v1, v2)
}
fileprivate 
func _load_glRectxOES(x1:OpenGL.Fixed, y1:OpenGL.Fixed, x2:OpenGL.Fixed, y2:OpenGL.Fixed)
{
    OpenGL.glRectxOES = unsafeBitCast(OpenGL.getfp("glRectxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRectxOES))
    OpenGL.glRectxOES(x1, y1, x2, y2)
}
fileprivate 
func _load_glRectxvOES(v1:UnsafePointer<OpenGL.Fixed>?, v2:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glRectxvOES = unsafeBitCast(OpenGL.getfp("glRectxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRectxvOES))
    OpenGL.glRectxvOES(v1, v2)
}
fileprivate 
func _load_glReferencePlaneSGIX(equation:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glReferencePlaneSGIX = unsafeBitCast(OpenGL.getfp("glReferencePlaneSGIX", support: [OpenGL.ss337]), to: Swift.type(of: OpenGL.glReferencePlaneSGIX))
    OpenGL.glReferencePlaneSGIX(equation)
}
fileprivate 
func _load_glReleaseShaderCompiler()
{
    OpenGL.glReleaseShaderCompiler = unsafeBitCast(OpenGL.getfp("glReleaseShaderCompiler", support: [OpenGL.ss359, OpenGL.ss365, OpenGL.ss28]), to: Swift.type(of: OpenGL.glReleaseShaderCompiler))
    OpenGL.glReleaseShaderCompiler()
}
fileprivate 
func _load_glRenderMode(mode:OpenGL.Enum) -> OpenGL.Int
{
    OpenGL.glRenderMode = unsafeBitCast(OpenGL.getfp("glRenderMode", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRenderMode))
    return OpenGL.glRenderMode(mode)
}
fileprivate 
func _load_glRenderbufferStorage(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorage = unsafeBitCast(OpenGL.getfp("glRenderbufferStorage", support: [OpenGL.ss354, OpenGL.ss365, OpenGL.ss53]), to: Swift.type(of: OpenGL.glRenderbufferStorage))
    OpenGL.glRenderbufferStorage(target, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageEXT = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageEXT", support: [OpenGL.ss155]), to: Swift.type(of: OpenGL.glRenderbufferStorageEXT))
    OpenGL.glRenderbufferStorageEXT(target, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisample(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisample = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisample", support: [OpenGL.ss354, OpenGL.ss366, OpenGL.ss53]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisample))
    OpenGL.glRenderbufferStorageMultisample(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleANGLE(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleANGLE = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleANGLE", support: [OpenGL.ss14]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleANGLE))
    OpenGL.glRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleAPPLE(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleAPPLE = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleAPPLE", support: [OpenGL.ss21]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleAPPLE))
    OpenGL.glRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleCoverageNV(target:OpenGL.Enum, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleCoverageNV = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleCoverageNV", support: [OpenGL.ss249]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleCoverageNV))
    OpenGL.glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleEXT(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleEXT = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleEXT", support: [OpenGL.ss154, OpenGL.ss169]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleEXT))
    OpenGL.glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleIMG(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleIMG = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleIMG", support: [OpenGL.ss213]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleIMG))
    OpenGL.glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageMultisampleNV(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageMultisampleNV = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageMultisampleNV", support: [OpenGL.ss248]), to: Swift.type(of: OpenGL.glRenderbufferStorageMultisampleNV))
    OpenGL.glRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height)
}
fileprivate 
func _load_glRenderbufferStorageOES(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glRenderbufferStorageOES = unsafeBitCast(OpenGL.getfp("glRenderbufferStorageOES", support: [OpenGL.ss293]), to: Swift.type(of: OpenGL.glRenderbufferStorageOES))
    OpenGL.glRenderbufferStorageOES(target, internalformat, width, height)
}
fileprivate 
func _load_glReplacementCodePointerSUN(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    OpenGL.glReplacementCodePointerSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodePointerSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodePointerSUN))
    OpenGL.glReplacementCodePointerSUN(type, stride, pointer)
}
fileprivate 
func _load_glReplacementCodeubSUN(code:OpenGL.UByte)
{
    OpenGL.glReplacementCodeubSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeubSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeubSUN))
    OpenGL.glReplacementCodeubSUN(code)
}
fileprivate 
func _load_glReplacementCodeubvSUN(code:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glReplacementCodeubvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeubvSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeubvSUN))
    OpenGL.glReplacementCodeubvSUN(code)
}
fileprivate 
func _load_glReplacementCodeuiColor3fVertex3fSUN(rc:OpenGL.UInt, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiColor3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor3fVertex3fSUN))
    OpenGL.glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiColor3fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, c:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiColor3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor3fVertex3fvSUN))
    OpenGL.glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v)
}
fileprivate 
func _load_glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc:OpenGL.UInt, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, a:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor4fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fSUN))
    OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, c:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor4fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fvSUN))
    OpenGL.glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v)
}
fileprivate 
func _load_glReplacementCodeuiColor4ubVertex3fSUN(rc:OpenGL.UInt, r:OpenGL.UByte, g:OpenGL.UByte, b:OpenGL.UByte, a:OpenGL.UByte, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiColor4ubVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor4ubVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor4ubVertex3fSUN))
    OpenGL.glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiColor4ubVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, c:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiColor4ubVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiColor4ubVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiColor4ubVertex3fvSUN))
    OpenGL.glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v)
}
fileprivate 
func _load_glReplacementCodeuiNormal3fVertex3fSUN(rc:OpenGL.UInt, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiNormal3fVertex3fSUN))
    OpenGL.glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiNormal3fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiNormal3fVertex3fvSUN))
    OpenGL.glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v)
}
fileprivate 
func _load_glReplacementCodeuiSUN(code:OpenGL.UInt)
{
    OpenGL.glReplacementCodeuiSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeuiSUN))
    OpenGL.glReplacementCodeuiSUN(code)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc:OpenGL.UInt, s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, a:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN))
    OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, tc:UnsafePointer<OpenGL.Float>?, c:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN))
    OpenGL.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc:OpenGL.UInt, s:OpenGL.Float, t:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN))
    OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, tc:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN))
    OpenGL.glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fVertex3fSUN(rc:OpenGL.UInt, s:OpenGL.Float, t:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiTexCoord2fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fVertex3fSUN))
    OpenGL.glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiTexCoord2fVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, tc:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiTexCoord2fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiTexCoord2fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiTexCoord2fVertex3fvSUN))
    OpenGL.glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v)
}
fileprivate 
func _load_glReplacementCodeuiVertex3fSUN(rc:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glReplacementCodeuiVertex3fSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiVertex3fSUN))
    OpenGL.glReplacementCodeuiVertex3fSUN(rc, x, y, z)
}
fileprivate 
func _load_glReplacementCodeuiVertex3fvSUN(rc:UnsafePointer<OpenGL.UInt>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glReplacementCodeuiVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuiVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glReplacementCodeuiVertex3fvSUN))
    OpenGL.glReplacementCodeuiVertex3fvSUN(rc, v)
}
fileprivate 
func _load_glReplacementCodeuivSUN(code:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glReplacementCodeuivSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeuivSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeuivSUN))
    OpenGL.glReplacementCodeuivSUN(code)
}
fileprivate 
func _load_glReplacementCodeusSUN(code:OpenGL.UShort)
{
    OpenGL.glReplacementCodeusSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeusSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeusSUN))
    OpenGL.glReplacementCodeusSUN(code)
}
fileprivate 
func _load_glReplacementCodeusvSUN(code:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glReplacementCodeusvSUN = unsafeBitCast(OpenGL.getfp("glReplacementCodeusvSUN", support: [OpenGL.ss344]), to: Swift.type(of: OpenGL.glReplacementCodeusvSUN))
    OpenGL.glReplacementCodeusvSUN(code)
}
fileprivate 
func _load_glRequestResidentProgramsNV(n:OpenGL.Size, programs:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glRequestResidentProgramsNV = unsafeBitCast(OpenGL.getfp("glRequestResidentProgramsNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glRequestResidentProgramsNV))
    OpenGL.glRequestResidentProgramsNV(n, programs)
}
fileprivate 
func _load_glResetHistogram(target:OpenGL.Enum)
{
    OpenGL.glResetHistogram = unsafeBitCast(OpenGL.getfp("glResetHistogram", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glResetHistogram))
    OpenGL.glResetHistogram(target)
}
fileprivate 
func _load_glResetHistogramEXT(target:OpenGL.Enum)
{
    OpenGL.glResetHistogramEXT = unsafeBitCast(OpenGL.getfp("glResetHistogramEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glResetHistogramEXT))
    OpenGL.glResetHistogramEXT(target)
}
fileprivate 
func _load_glResetMinmax(target:OpenGL.Enum)
{
    OpenGL.glResetMinmax = unsafeBitCast(OpenGL.getfp("glResetMinmax", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glResetMinmax))
    OpenGL.glResetMinmax(target)
}
fileprivate 
func _load_glResetMinmaxEXT(target:OpenGL.Enum)
{
    OpenGL.glResetMinmaxEXT = unsafeBitCast(OpenGL.getfp("glResetMinmaxEXT", support: [OpenGL.ss160]), to: Swift.type(of: OpenGL.glResetMinmaxEXT))
    OpenGL.glResetMinmaxEXT(target)
}
fileprivate 
func _load_glResizeBuffersMESA()
{
    OpenGL.glResizeBuffersMESA = unsafeBitCast(OpenGL.getfp("glResizeBuffersMESA", support: [OpenGL.ss223]), to: Swift.type(of: OpenGL.glResizeBuffersMESA))
    OpenGL.glResizeBuffersMESA()
}
fileprivate 
func _load_glResolveDepthValuesNV()
{
    OpenGL.glResolveDepthValuesNV = unsafeBitCast(OpenGL.getfp("glResolveDepthValuesNV", support: [OpenGL.ss269]), to: Swift.type(of: OpenGL.glResolveDepthValuesNV))
    OpenGL.glResolveDepthValuesNV()
}
fileprivate 
func _load_glResolveMultisampleFramebufferAPPLE()
{
    OpenGL.glResolveMultisampleFramebufferAPPLE = unsafeBitCast(OpenGL.getfp("glResolveMultisampleFramebufferAPPLE", support: [OpenGL.ss21]), to: Swift.type(of: OpenGL.glResolveMultisampleFramebufferAPPLE))
    OpenGL.glResolveMultisampleFramebufferAPPLE()
}
fileprivate 
func _load_glResumeTransformFeedback()
{
    OpenGL.glResumeTransformFeedback = unsafeBitCast(OpenGL.getfp("glResumeTransformFeedback", support: [OpenGL.ss358, OpenGL.ss366, OpenGL.ss100]), to: Swift.type(of: OpenGL.glResumeTransformFeedback))
    OpenGL.glResumeTransformFeedback()
}
fileprivate 
func _load_glResumeTransformFeedbackNV()
{
    OpenGL.glResumeTransformFeedbackNV = unsafeBitCast(OpenGL.getfp("glResumeTransformFeedbackNV", support: [OpenGL.ss274]), to: Swift.type(of: OpenGL.glResumeTransformFeedbackNV))
    OpenGL.glResumeTransformFeedbackNV()
}
fileprivate 
func _load_glRotated(angle:OpenGL.Double, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glRotated = unsafeBitCast(OpenGL.getfp("glRotated", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glRotated))
    OpenGL.glRotated(angle, x, y, z)
}
fileprivate 
func _load_glRotatef(angle:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glRotatef = unsafeBitCast(OpenGL.getfp("glRotatef", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glRotatef))
    OpenGL.glRotatef(angle, x, y, z)
}
fileprivate 
func _load_glRotatex(angle:OpenGL.Fixed, x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glRotatex = unsafeBitCast(OpenGL.getfp("glRotatex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glRotatex))
    OpenGL.glRotatex(angle, x, y, z)
}
fileprivate 
func _load_glRotatexOES(angle:OpenGL.Fixed, x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glRotatexOES = unsafeBitCast(OpenGL.getfp("glRotatexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glRotatexOES))
    OpenGL.glRotatexOES(angle, x, y, z)
}
fileprivate 
func _load_glSampleCoverage(value:OpenGL.Float, invert:OpenGL.Bool)
{
    OpenGL.glSampleCoverage = unsafeBitCast(OpenGL.getfp("glSampleCoverage", support: [OpenGL.ss349, OpenGL.ss365]), to: Swift.type(of: OpenGL.glSampleCoverage))
    OpenGL.glSampleCoverage(value, invert)
}
fileprivate 
func _load_glSampleCoverageARB(value:OpenGL.Float, invert:OpenGL.Bool)
{
    OpenGL.glSampleCoverageARB = unsafeBitCast(OpenGL.getfp("glSampleCoverageARB", support: [OpenGL.ss69]), to: Swift.type(of: OpenGL.glSampleCoverageARB))
    OpenGL.glSampleCoverageARB(value, invert)
}
fileprivate 
func _load_glSampleCoveragex(value:OpenGL.ClampX, invert:OpenGL.Bool)
{
    OpenGL.glSampleCoveragex = unsafeBitCast(OpenGL.getfp("glSampleCoveragex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glSampleCoveragex))
    OpenGL.glSampleCoveragex(value, invert)
}
fileprivate 
func _load_glSampleCoveragexOES(value:OpenGL.ClampX, invert:OpenGL.Bool)
{
    OpenGL.glSampleCoveragexOES = unsafeBitCast(OpenGL.getfp("glSampleCoveragexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glSampleCoveragexOES))
    OpenGL.glSampleCoveragexOES(value, invert)
}
fileprivate 
func _load_glSampleMapATI(dst:OpenGL.UInt, interp:OpenGL.UInt, swizzle:OpenGL.Enum)
{
    OpenGL.glSampleMapATI = unsafeBitCast(OpenGL.getfp("glSampleMapATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glSampleMapATI))
    OpenGL.glSampleMapATI(dst, interp, swizzle)
}
fileprivate 
func _load_glSampleMaskEXT(value:OpenGL.ClampFloat, invert:OpenGL.Bool)
{
    OpenGL.glSampleMaskEXT = unsafeBitCast(OpenGL.getfp("glSampleMaskEXT", support: [OpenGL.ss168]), to: Swift.type(of: OpenGL.glSampleMaskEXT))
    OpenGL.glSampleMaskEXT(value, invert)
}
fileprivate 
func _load_glSampleMaskIndexedNV(index:OpenGL.UInt, mask:OpenGL.Bitfield)
{
    OpenGL.glSampleMaskIndexedNV = unsafeBitCast(OpenGL.getfp("glSampleMaskIndexedNV", support: [OpenGL.ss242]), to: Swift.type(of: OpenGL.glSampleMaskIndexedNV))
    OpenGL.glSampleMaskIndexedNV(index, mask)
}
fileprivate 
func _load_glSampleMaskSGIS(value:OpenGL.ClampFloat, invert:OpenGL.Bool)
{
    OpenGL.glSampleMaskSGIS = unsafeBitCast(OpenGL.getfp("glSampleMaskSGIS", support: [OpenGL.ss321]), to: Swift.type(of: OpenGL.glSampleMaskSGIS))
    OpenGL.glSampleMaskSGIS(value, invert)
}
fileprivate 
func _load_glSampleMaski(maskNumber:OpenGL.UInt, mask:OpenGL.Bitfield)
{
    OpenGL.glSampleMaski = unsafeBitCast(OpenGL.getfp("glSampleMaski", support: [OpenGL.ss356, OpenGL.ss367, OpenGL.ss95]), to: Swift.type(of: OpenGL.glSampleMaski))
    OpenGL.glSampleMaski(maskNumber, mask)
}
fileprivate 
func _load_glSamplePatternEXT(pattern:OpenGL.Enum)
{
    OpenGL.glSamplePatternEXT = unsafeBitCast(OpenGL.getfp("glSamplePatternEXT", support: [OpenGL.ss168]), to: Swift.type(of: OpenGL.glSamplePatternEXT))
    OpenGL.glSamplePatternEXT(pattern)
}
fileprivate 
func _load_glSamplePatternSGIS(pattern:OpenGL.Enum)
{
    OpenGL.glSamplePatternSGIS = unsafeBitCast(OpenGL.getfp("glSamplePatternSGIS", support: [OpenGL.ss321]), to: Swift.type(of: OpenGL.glSamplePatternSGIS))
    OpenGL.glSamplePatternSGIS(pattern)
}
fileprivate 
func _load_glSamplerParameterIiv(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSamplerParameterIiv = unsafeBitCast(OpenGL.getfp("glSamplerParameterIiv", support: [OpenGL.ss357, OpenGL.ss368, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameterIiv))
    OpenGL.glSamplerParameterIiv(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterIivEXT(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSamplerParameterIivEXT = unsafeBitCast(OpenGL.getfp("glSamplerParameterIivEXT", support: [OpenGL.ss191]), to: Swift.type(of: OpenGL.glSamplerParameterIivEXT))
    OpenGL.glSamplerParameterIivEXT(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterIivOES(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSamplerParameterIivOES = unsafeBitCast(OpenGL.getfp("glSamplerParameterIivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glSamplerParameterIivOES))
    OpenGL.glSamplerParameterIivOES(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterIuiv(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSamplerParameterIuiv = unsafeBitCast(OpenGL.getfp("glSamplerParameterIuiv", support: [OpenGL.ss357, OpenGL.ss368, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameterIuiv))
    OpenGL.glSamplerParameterIuiv(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterIuivEXT(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSamplerParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glSamplerParameterIuivEXT", support: [OpenGL.ss191]), to: Swift.type(of: OpenGL.glSamplerParameterIuivEXT))
    OpenGL.glSamplerParameterIuivEXT(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterIuivOES(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSamplerParameterIuivOES = unsafeBitCast(OpenGL.getfp("glSamplerParameterIuivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glSamplerParameterIuivOES))
    OpenGL.glSamplerParameterIuivOES(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterf(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glSamplerParameterf = unsafeBitCast(OpenGL.getfp("glSamplerParameterf", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameterf))
    OpenGL.glSamplerParameterf(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameterfv(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSamplerParameterfv = unsafeBitCast(OpenGL.getfp("glSamplerParameterfv", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameterfv))
    OpenGL.glSamplerParameterfv(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameteri(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glSamplerParameteri = unsafeBitCast(OpenGL.getfp("glSamplerParameteri", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameteri))
    OpenGL.glSamplerParameteri(sampler, pname, param)
}
fileprivate 
func _load_glSamplerParameteriv(sampler:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSamplerParameteriv = unsafeBitCast(OpenGL.getfp("glSamplerParameteriv", support: [OpenGL.ss357, OpenGL.ss366, OpenGL.ss79]), to: Swift.type(of: OpenGL.glSamplerParameteriv))
    OpenGL.glSamplerParameteriv(sampler, pname, param)
}
fileprivate 
func _load_glScaled(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glScaled = unsafeBitCast(OpenGL.getfp("glScaled", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glScaled))
    OpenGL.glScaled(x, y, z)
}
fileprivate 
func _load_glScalef(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glScalef = unsafeBitCast(OpenGL.getfp("glScalef", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glScalef))
    OpenGL.glScalef(x, y, z)
}
fileprivate 
func _load_glScalex(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glScalex = unsafeBitCast(OpenGL.getfp("glScalex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glScalex))
    OpenGL.glScalex(x, y, z)
}
fileprivate 
func _load_glScalexOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glScalexOES = unsafeBitCast(OpenGL.getfp("glScalexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glScalexOES))
    OpenGL.glScalexOES(x, y, z)
}
fileprivate 
func _load_glScissor(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glScissor = unsafeBitCast(OpenGL.getfp("glScissor", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glScissor))
    OpenGL.glScissor(x, y, width, height)
}
fileprivate 
func _load_glScissorArrayv(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glScissorArrayv = unsafeBitCast(OpenGL.getfp("glScissorArrayv", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glScissorArrayv))
    OpenGL.glScissorArrayv(first, count, v)
}
fileprivate 
func _load_glScissorArrayvNV(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glScissorArrayvNV = unsafeBitCast(OpenGL.getfp("glScissorArrayvNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glScissorArrayvNV))
    OpenGL.glScissorArrayvNV(first, count, v)
}
fileprivate 
func _load_glScissorIndexed(index:OpenGL.UInt, left:OpenGL.Int, bottom:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glScissorIndexed = unsafeBitCast(OpenGL.getfp("glScissorIndexed", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glScissorIndexed))
    OpenGL.glScissorIndexed(index, left, bottom, width, height)
}
fileprivate 
func _load_glScissorIndexedNV(index:OpenGL.UInt, left:OpenGL.Int, bottom:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glScissorIndexedNV = unsafeBitCast(OpenGL.getfp("glScissorIndexedNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glScissorIndexedNV))
    OpenGL.glScissorIndexedNV(index, left, bottom, width, height)
}
fileprivate 
func _load_glScissorIndexedv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glScissorIndexedv = unsafeBitCast(OpenGL.getfp("glScissorIndexedv", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glScissorIndexedv))
    OpenGL.glScissorIndexedv(index, v)
}
fileprivate 
func _load_glScissorIndexedvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glScissorIndexedvNV = unsafeBitCast(OpenGL.getfp("glScissorIndexedvNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glScissorIndexedvNV))
    OpenGL.glScissorIndexedvNV(index, v)
}
fileprivate 
func _load_glSecondaryColor3b(red:OpenGL.Byte, green:OpenGL.Byte, blue:OpenGL.Byte)
{
    OpenGL.glSecondaryColor3b = unsafeBitCast(OpenGL.getfp("glSecondaryColor3b", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3b))
    OpenGL.glSecondaryColor3b(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3bEXT(red:OpenGL.Byte, green:OpenGL.Byte, blue:OpenGL.Byte)
{
    OpenGL.glSecondaryColor3bEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3bEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3bEXT))
    OpenGL.glSecondaryColor3bEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3bv(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glSecondaryColor3bv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3bv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3bv))
    OpenGL.glSecondaryColor3bv(v)
}
fileprivate 
func _load_glSecondaryColor3bvEXT(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glSecondaryColor3bvEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3bvEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3bvEXT))
    OpenGL.glSecondaryColor3bvEXT(v)
}
fileprivate 
func _load_glSecondaryColor3d(red:OpenGL.Double, green:OpenGL.Double, blue:OpenGL.Double)
{
    OpenGL.glSecondaryColor3d = unsafeBitCast(OpenGL.getfp("glSecondaryColor3d", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3d))
    OpenGL.glSecondaryColor3d(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3dEXT(red:OpenGL.Double, green:OpenGL.Double, blue:OpenGL.Double)
{
    OpenGL.glSecondaryColor3dEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3dEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3dEXT))
    OpenGL.glSecondaryColor3dEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glSecondaryColor3dv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3dv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3dv))
    OpenGL.glSecondaryColor3dv(v)
}
fileprivate 
func _load_glSecondaryColor3dvEXT(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glSecondaryColor3dvEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3dvEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3dvEXT))
    OpenGL.glSecondaryColor3dvEXT(v)
}
fileprivate 
func _load_glSecondaryColor3f(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float)
{
    OpenGL.glSecondaryColor3f = unsafeBitCast(OpenGL.getfp("glSecondaryColor3f", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3f))
    OpenGL.glSecondaryColor3f(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3fEXT(red:OpenGL.Float, green:OpenGL.Float, blue:OpenGL.Float)
{
    OpenGL.glSecondaryColor3fEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3fEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3fEXT))
    OpenGL.glSecondaryColor3fEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSecondaryColor3fv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3fv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3fv))
    OpenGL.glSecondaryColor3fv(v)
}
fileprivate 
func _load_glSecondaryColor3fvEXT(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSecondaryColor3fvEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3fvEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3fvEXT))
    OpenGL.glSecondaryColor3fvEXT(v)
}
fileprivate 
func _load_glSecondaryColor3hNV(red:OpenGL.HalfNV, green:OpenGL.HalfNV, blue:OpenGL.HalfNV)
{
    OpenGL.glSecondaryColor3hNV = unsafeBitCast(OpenGL.getfp("glSecondaryColor3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glSecondaryColor3hNV))
    OpenGL.glSecondaryColor3hNV(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glSecondaryColor3hvNV = unsafeBitCast(OpenGL.getfp("glSecondaryColor3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glSecondaryColor3hvNV))
    OpenGL.glSecondaryColor3hvNV(v)
}
fileprivate 
func _load_glSecondaryColor3i(red:OpenGL.Int, green:OpenGL.Int, blue:OpenGL.Int)
{
    OpenGL.glSecondaryColor3i = unsafeBitCast(OpenGL.getfp("glSecondaryColor3i", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3i))
    OpenGL.glSecondaryColor3i(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3iEXT(red:OpenGL.Int, green:OpenGL.Int, blue:OpenGL.Int)
{
    OpenGL.glSecondaryColor3iEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3iEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3iEXT))
    OpenGL.glSecondaryColor3iEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSecondaryColor3iv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3iv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3iv))
    OpenGL.glSecondaryColor3iv(v)
}
fileprivate 
func _load_glSecondaryColor3ivEXT(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSecondaryColor3ivEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ivEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3ivEXT))
    OpenGL.glSecondaryColor3ivEXT(v)
}
fileprivate 
func _load_glSecondaryColor3s(red:OpenGL.Short, green:OpenGL.Short, blue:OpenGL.Short)
{
    OpenGL.glSecondaryColor3s = unsafeBitCast(OpenGL.getfp("glSecondaryColor3s", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3s))
    OpenGL.glSecondaryColor3s(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3sEXT(red:OpenGL.Short, green:OpenGL.Short, blue:OpenGL.Short)
{
    OpenGL.glSecondaryColor3sEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3sEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3sEXT))
    OpenGL.glSecondaryColor3sEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glSecondaryColor3sv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3sv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3sv))
    OpenGL.glSecondaryColor3sv(v)
}
fileprivate 
func _load_glSecondaryColor3svEXT(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glSecondaryColor3svEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3svEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3svEXT))
    OpenGL.glSecondaryColor3svEXT(v)
}
fileprivate 
func _load_glSecondaryColor3ub(red:OpenGL.UByte, green:OpenGL.UByte, blue:OpenGL.UByte)
{
    OpenGL.glSecondaryColor3ub = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ub", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3ub))
    OpenGL.glSecondaryColor3ub(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3ubEXT(red:OpenGL.UByte, green:OpenGL.UByte, blue:OpenGL.UByte)
{
    OpenGL.glSecondaryColor3ubEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ubEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3ubEXT))
    OpenGL.glSecondaryColor3ubEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3ubv(v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glSecondaryColor3ubv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ubv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3ubv))
    OpenGL.glSecondaryColor3ubv(v)
}
fileprivate 
func _load_glSecondaryColor3ubvEXT(v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glSecondaryColor3ubvEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ubvEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3ubvEXT))
    OpenGL.glSecondaryColor3ubvEXT(v)
}
fileprivate 
func _load_glSecondaryColor3ui(red:OpenGL.UInt, green:OpenGL.UInt, blue:OpenGL.UInt)
{
    OpenGL.glSecondaryColor3ui = unsafeBitCast(OpenGL.getfp("glSecondaryColor3ui", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3ui))
    OpenGL.glSecondaryColor3ui(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3uiEXT(red:OpenGL.UInt, green:OpenGL.UInt, blue:OpenGL.UInt)
{
    OpenGL.glSecondaryColor3uiEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3uiEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3uiEXT))
    OpenGL.glSecondaryColor3uiEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3uiv(v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSecondaryColor3uiv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3uiv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3uiv))
    OpenGL.glSecondaryColor3uiv(v)
}
fileprivate 
func _load_glSecondaryColor3uivEXT(v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSecondaryColor3uivEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3uivEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3uivEXT))
    OpenGL.glSecondaryColor3uivEXT(v)
}
fileprivate 
func _load_glSecondaryColor3us(red:OpenGL.UShort, green:OpenGL.UShort, blue:OpenGL.UShort)
{
    OpenGL.glSecondaryColor3us = unsafeBitCast(OpenGL.getfp("glSecondaryColor3us", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3us))
    OpenGL.glSecondaryColor3us(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3usEXT(red:OpenGL.UShort, green:OpenGL.UShort, blue:OpenGL.UShort)
{
    OpenGL.glSecondaryColor3usEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3usEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3usEXT))
    OpenGL.glSecondaryColor3usEXT(red, green, blue)
}
fileprivate 
func _load_glSecondaryColor3usv(v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glSecondaryColor3usv = unsafeBitCast(OpenGL.getfp("glSecondaryColor3usv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColor3usv))
    OpenGL.glSecondaryColor3usv(v)
}
fileprivate 
func _load_glSecondaryColor3usvEXT(v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glSecondaryColor3usvEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColor3usvEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColor3usvEXT))
    OpenGL.glSecondaryColor3usvEXT(v)
}
fileprivate 
func _load_glSecondaryColorFormatNV(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glSecondaryColorFormatNV = unsafeBitCast(OpenGL.getfp("glSecondaryColorFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glSecondaryColorFormatNV))
    OpenGL.glSecondaryColorFormatNV(size, type, stride)
}
fileprivate 
func _load_glSecondaryColorP3ui(type:OpenGL.Enum, color:OpenGL.UInt)
{
    OpenGL.glSecondaryColorP3ui = unsafeBitCast(OpenGL.getfp("glSecondaryColorP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glSecondaryColorP3ui))
    OpenGL.glSecondaryColorP3ui(type, color)
}
fileprivate 
func _load_glSecondaryColorP3uiv(type:OpenGL.Enum, color:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glSecondaryColorP3uiv = unsafeBitCast(OpenGL.getfp("glSecondaryColorP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glSecondaryColorP3uiv))
    OpenGL.glSecondaryColorP3uiv(type, color)
}
fileprivate 
func _load_glSecondaryColorPointer(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glSecondaryColorPointer = unsafeBitCast(OpenGL.getfp("glSecondaryColorPointer", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSecondaryColorPointer))
    OpenGL.glSecondaryColorPointer(size, type, stride, pointer)
}
fileprivate 
func _load_glSecondaryColorPointerEXT(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glSecondaryColorPointerEXT = unsafeBitCast(OpenGL.getfp("glSecondaryColorPointerEXT", support: [OpenGL.ss181]), to: Swift.type(of: OpenGL.glSecondaryColorPointerEXT))
    OpenGL.glSecondaryColorPointerEXT(size, type, stride, pointer)
}
fileprivate 
func _load_glSecondaryColorPointerListIBM(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glSecondaryColorPointerListIBM = unsafeBitCast(OpenGL.getfp("glSecondaryColorPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glSecondaryColorPointerListIBM))
    OpenGL.glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glSelectBuffer(size:OpenGL.Size, buffer:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glSelectBuffer = unsafeBitCast(OpenGL.getfp("glSelectBuffer", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glSelectBuffer))
    OpenGL.glSelectBuffer(size, buffer)
}
fileprivate 
func _load_glSelectPerfMonitorCountersAMD(monitor:OpenGL.UInt, enable:OpenGL.Bool, group:OpenGL.UInt, numCounters:OpenGL.Int, counterList:UnsafeMutablePointer<OpenGL.UInt>?)
{
    OpenGL.glSelectPerfMonitorCountersAMD = unsafeBitCast(OpenGL.getfp("glSelectPerfMonitorCountersAMD", support: [OpenGL.ss8]), to: Swift.type(of: OpenGL.glSelectPerfMonitorCountersAMD))
    OpenGL.glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList)
}
fileprivate 
func _load_glSeparableFilter2D(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    OpenGL.glSeparableFilter2D = unsafeBitCast(OpenGL.getfp("glSeparableFilter2D", support: [OpenGL.ss59]), to: Swift.type(of: OpenGL.glSeparableFilter2D))
    OpenGL.glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
}
fileprivate 
func _load_glSeparableFilter2DEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    OpenGL.glSeparableFilter2DEXT = unsafeBitCast(OpenGL.getfp("glSeparableFilter2DEXT", support: [OpenGL.ss135]), to: Swift.type(of: OpenGL.glSeparableFilter2DEXT))
    OpenGL.glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column)
}
fileprivate 
func _load_glSetFenceAPPLE(fence:OpenGL.UInt)
{
    OpenGL.glSetFenceAPPLE = unsafeBitCast(OpenGL.getfp("glSetFenceAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glSetFenceAPPLE))
    OpenGL.glSetFenceAPPLE(fence)
}
fileprivate 
func _load_glSetFenceNV(fence:OpenGL.UInt, condition:OpenGL.Enum)
{
    OpenGL.glSetFenceNV = unsafeBitCast(OpenGL.getfp("glSetFenceNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glSetFenceNV))
    OpenGL.glSetFenceNV(fence, condition)
}
fileprivate 
func _load_glSetFragmentShaderConstantATI(dst:OpenGL.UInt, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSetFragmentShaderConstantATI = unsafeBitCast(OpenGL.getfp("glSetFragmentShaderConstantATI", support: [OpenGL.ss118]), to: Swift.type(of: OpenGL.glSetFragmentShaderConstantATI))
    OpenGL.glSetFragmentShaderConstantATI(dst, value)
}
fileprivate 
func _load_glSetInvariantEXT(id:OpenGL.UInt, type:OpenGL.Enum, addr:UnsafeRawPointer?)
{
    OpenGL.glSetInvariantEXT = unsafeBitCast(OpenGL.getfp("glSetInvariantEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glSetInvariantEXT))
    OpenGL.glSetInvariantEXT(id, type, addr)
}
fileprivate 
func _load_glSetLocalConstantEXT(id:OpenGL.UInt, type:OpenGL.Enum, addr:UnsafeRawPointer?)
{
    OpenGL.glSetLocalConstantEXT = unsafeBitCast(OpenGL.getfp("glSetLocalConstantEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glSetLocalConstantEXT))
    OpenGL.glSetLocalConstantEXT(id, type, addr)
}
fileprivate 
func _load_glSetMultisamplefvAMD(pname:OpenGL.Enum, index:OpenGL.UInt, val:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSetMultisamplefvAMD = unsafeBitCast(OpenGL.getfp("glSetMultisamplefvAMD", support: [OpenGL.ss9]), to: Swift.type(of: OpenGL.glSetMultisamplefvAMD))
    OpenGL.glSetMultisamplefvAMD(pname, index, val)
}
fileprivate 
func _load_glShadeModel(mode:OpenGL.Enum)
{
    OpenGL.glShadeModel = unsafeBitCast(OpenGL.getfp("glShadeModel", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glShadeModel))
    OpenGL.glShadeModel(mode)
}
fileprivate 
func _load_glShaderBinary(count:OpenGL.Size, shaders:UnsafePointer<OpenGL.UInt>?, binaryformat:OpenGL.Enum, binary:UnsafeRawPointer?, length:OpenGL.Size)
{
    OpenGL.glShaderBinary = unsafeBitCast(OpenGL.getfp("glShaderBinary", support: [OpenGL.ss359, OpenGL.ss365, OpenGL.ss28]), to: Swift.type(of: OpenGL.glShaderBinary))
    OpenGL.glShaderBinary(count, shaders, binaryformat, binary, length)
}
fileprivate 
func _load_glShaderOp1EXT(op:OpenGL.Enum, res:OpenGL.UInt, arg1:OpenGL.UInt)
{
    OpenGL.glShaderOp1EXT = unsafeBitCast(OpenGL.getfp("glShaderOp1EXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glShaderOp1EXT))
    OpenGL.glShaderOp1EXT(op, res, arg1)
}
fileprivate 
func _load_glShaderOp2EXT(op:OpenGL.Enum, res:OpenGL.UInt, arg1:OpenGL.UInt, arg2:OpenGL.UInt)
{
    OpenGL.glShaderOp2EXT = unsafeBitCast(OpenGL.getfp("glShaderOp2EXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glShaderOp2EXT))
    OpenGL.glShaderOp2EXT(op, res, arg1, arg2)
}
fileprivate 
func _load_glShaderOp3EXT(op:OpenGL.Enum, res:OpenGL.UInt, arg1:OpenGL.UInt, arg2:OpenGL.UInt, arg3:OpenGL.UInt)
{
    OpenGL.glShaderOp3EXT = unsafeBitCast(OpenGL.getfp("glShaderOp3EXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glShaderOp3EXT))
    OpenGL.glShaderOp3EXT(op, res, arg1, arg2, arg3)
}
fileprivate 
func _load_glShaderSource(shader:OpenGL.UInt, count:OpenGL.Size, string:UnsafePointer<UnsafePointer<OpenGL.Char>?>?, length:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glShaderSource = unsafeBitCast(OpenGL.getfp("glShaderSource", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glShaderSource))
    OpenGL.glShaderSource(shader, count, string, length)
}
fileprivate 
func _load_glShaderSourceARB(shaderObj:OpenGL.HandleARB, count:OpenGL.Size, string:UnsafeMutablePointer<UnsafeMutablePointer<OpenGL.CharARB>?>?, length:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glShaderSourceARB = unsafeBitCast(OpenGL.getfp("glShaderSourceARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glShaderSourceARB))
    OpenGL.glShaderSourceARB(shaderObj, count, string, length)
}
fileprivate 
func _load_glShaderStorageBlockBinding(program:OpenGL.UInt, storageBlockIndex:OpenGL.UInt, storageBlockBinding:OpenGL.UInt)
{
    OpenGL.glShaderStorageBlockBinding = unsafeBitCast(OpenGL.getfp("glShaderStorageBlockBinding", support: [OpenGL.ss361, OpenGL.ss84]), to: Swift.type(of: OpenGL.glShaderStorageBlockBinding))
    OpenGL.glShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding)
}
fileprivate 
func _load_glSharpenTexFuncSGIS(target:OpenGL.Enum, n:OpenGL.Size, points:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSharpenTexFuncSGIS = unsafeBitCast(OpenGL.getfp("glSharpenTexFuncSGIS", support: [OpenGL.ss324]), to: Swift.type(of: OpenGL.glSharpenTexFuncSGIS))
    OpenGL.glSharpenTexFuncSGIS(target, n, points)
}
fileprivate 
func _load_glSpriteParameterfSGIX(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glSpriteParameterfSGIX = unsafeBitCast(OpenGL.getfp("glSpriteParameterfSGIX", support: [OpenGL.ss338]), to: Swift.type(of: OpenGL.glSpriteParameterfSGIX))
    OpenGL.glSpriteParameterfSGIX(pname, param)
}
fileprivate 
func _load_glSpriteParameterfvSGIX(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glSpriteParameterfvSGIX = unsafeBitCast(OpenGL.getfp("glSpriteParameterfvSGIX", support: [OpenGL.ss338]), to: Swift.type(of: OpenGL.glSpriteParameterfvSGIX))
    OpenGL.glSpriteParameterfvSGIX(pname, params)
}
fileprivate 
func _load_glSpriteParameteriSGIX(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glSpriteParameteriSGIX = unsafeBitCast(OpenGL.getfp("glSpriteParameteriSGIX", support: [OpenGL.ss338]), to: Swift.type(of: OpenGL.glSpriteParameteriSGIX))
    OpenGL.glSpriteParameteriSGIX(pname, param)
}
fileprivate 
func _load_glSpriteParameterivSGIX(pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glSpriteParameterivSGIX = unsafeBitCast(OpenGL.getfp("glSpriteParameterivSGIX", support: [OpenGL.ss338]), to: Swift.type(of: OpenGL.glSpriteParameterivSGIX))
    OpenGL.glSpriteParameterivSGIX(pname, params)
}
fileprivate 
func _load_glStartInstrumentsSGIX()
{
    OpenGL.glStartInstrumentsSGIX = unsafeBitCast(OpenGL.getfp("glStartInstrumentsSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glStartInstrumentsSGIX))
    OpenGL.glStartInstrumentsSGIX()
}
fileprivate 
func _load_glStartTilingQCOM(x:OpenGL.UInt, y:OpenGL.UInt, width:OpenGL.UInt, height:OpenGL.UInt, preserveMask:OpenGL.Bitfield)
{
    OpenGL.glStartTilingQCOM = unsafeBitCast(OpenGL.getfp("glStartTilingQCOM", support: [OpenGL.ss318]), to: Swift.type(of: OpenGL.glStartTilingQCOM))
    OpenGL.glStartTilingQCOM(x, y, width, height, preserveMask)
}
fileprivate 
func _load_glStateCaptureNV(state:OpenGL.UInt, mode:OpenGL.Enum)
{
    OpenGL.glStateCaptureNV = unsafeBitCast(OpenGL.getfp("glStateCaptureNV", support: [OpenGL.ss230]), to: Swift.type(of: OpenGL.glStateCaptureNV))
    OpenGL.glStateCaptureNV(state, mode)
}
fileprivate 
func _load_glStencilClearTagEXT(stencilTagBits:OpenGL.Size, stencilClearTag:OpenGL.UInt)
{
    OpenGL.glStencilClearTagEXT = unsafeBitCast(OpenGL.getfp("glStencilClearTagEXT", support: [OpenGL.ss185]), to: Swift.type(of: OpenGL.glStencilClearTagEXT))
    OpenGL.glStencilClearTagEXT(stencilTagBits, stencilClearTag)
}
fileprivate 
func _load_glStencilFillPathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, fillMode:OpenGL.Enum, mask:OpenGL.UInt, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glStencilFillPathInstancedNV = unsafeBitCast(OpenGL.getfp("glStencilFillPathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilFillPathInstancedNV))
    OpenGL.glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
}
fileprivate 
func _load_glStencilFillPathNV(path:OpenGL.UInt, fillMode:OpenGL.Enum, mask:OpenGL.UInt)
{
    OpenGL.glStencilFillPathNV = unsafeBitCast(OpenGL.getfp("glStencilFillPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilFillPathNV))
    OpenGL.glStencilFillPathNV(path, fillMode, mask)
}
fileprivate 
func _load_glStencilFunc(f:OpenGL.Enum, ref:OpenGL.Int, mask:OpenGL.UInt)
{
    OpenGL.glStencilFunc = unsafeBitCast(OpenGL.getfp("glStencilFunc", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilFunc))
    OpenGL.glStencilFunc(f, ref, mask)
}
fileprivate 
func _load_glStencilFuncSeparate(face:OpenGL.Enum, f:OpenGL.Enum, ref:OpenGL.Int, mask:OpenGL.UInt)
{
    OpenGL.glStencilFuncSeparate = unsafeBitCast(OpenGL.getfp("glStencilFuncSeparate", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilFuncSeparate))
    OpenGL.glStencilFuncSeparate(face, f, ref, mask)
}
fileprivate 
func _load_glStencilFuncSeparateATI(frontfunc:OpenGL.Enum, backfunc:OpenGL.Enum, ref:OpenGL.Int, mask:OpenGL.UInt)
{
    OpenGL.glStencilFuncSeparateATI = unsafeBitCast(OpenGL.getfp("glStencilFuncSeparateATI", support: [OpenGL.ss121]), to: Swift.type(of: OpenGL.glStencilFuncSeparateATI))
    OpenGL.glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)
}
fileprivate 
func _load_glStencilMask(mask:OpenGL.UInt)
{
    OpenGL.glStencilMask = unsafeBitCast(OpenGL.getfp("glStencilMask", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilMask))
    OpenGL.glStencilMask(mask)
}
fileprivate 
func _load_glStencilMaskSeparate(face:OpenGL.Enum, mask:OpenGL.UInt)
{
    OpenGL.glStencilMaskSeparate = unsafeBitCast(OpenGL.getfp("glStencilMaskSeparate", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilMaskSeparate))
    OpenGL.glStencilMaskSeparate(face, mask)
}
fileprivate 
func _load_glStencilOp(fail:OpenGL.Enum, zfail:OpenGL.Enum, zpass:OpenGL.Enum)
{
    OpenGL.glStencilOp = unsafeBitCast(OpenGL.getfp("glStencilOp", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilOp))
    OpenGL.glStencilOp(fail, zfail, zpass)
}
fileprivate 
func _load_glStencilOpSeparate(face:OpenGL.Enum, sfail:OpenGL.Enum, dpfail:OpenGL.Enum, dppass:OpenGL.Enum)
{
    OpenGL.glStencilOpSeparate = unsafeBitCast(OpenGL.getfp("glStencilOpSeparate", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glStencilOpSeparate))
    OpenGL.glStencilOpSeparate(face, sfail, dpfail, dppass)
}
fileprivate 
func _load_glStencilOpSeparateATI(face:OpenGL.Enum, sfail:OpenGL.Enum, dpfail:OpenGL.Enum, dppass:OpenGL.Enum)
{
    OpenGL.glStencilOpSeparateATI = unsafeBitCast(OpenGL.getfp("glStencilOpSeparateATI", support: [OpenGL.ss121]), to: Swift.type(of: OpenGL.glStencilOpSeparateATI))
    OpenGL.glStencilOpSeparateATI(face, sfail, dpfail, dppass)
}
fileprivate 
func _load_glStencilOpValueAMD(face:OpenGL.Enum, value:OpenGL.UInt)
{
    OpenGL.glStencilOpValueAMD = unsafeBitCast(OpenGL.getfp("glStencilOpValueAMD", support: [OpenGL.ss11]), to: Swift.type(of: OpenGL.glStencilOpValueAMD))
    OpenGL.glStencilOpValueAMD(face, value)
}
fileprivate 
func _load_glStencilStrokePathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, reference:OpenGL.Int, mask:OpenGL.UInt, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glStencilStrokePathInstancedNV = unsafeBitCast(OpenGL.getfp("glStencilStrokePathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilStrokePathInstancedNV))
    OpenGL.glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
}
fileprivate 
func _load_glStencilStrokePathNV(path:OpenGL.UInt, reference:OpenGL.Int, mask:OpenGL.UInt)
{
    OpenGL.glStencilStrokePathNV = unsafeBitCast(OpenGL.getfp("glStencilStrokePathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilStrokePathNV))
    OpenGL.glStencilStrokePathNV(path, reference, mask)
}
fileprivate 
func _load_glStencilThenCoverFillPathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, fillMode:OpenGL.Enum, mask:OpenGL.UInt, coverMode:OpenGL.Enum, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glStencilThenCoverFillPathInstancedNV = unsafeBitCast(OpenGL.getfp("glStencilThenCoverFillPathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilThenCoverFillPathInstancedNV))
    OpenGL.glStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
}
fileprivate 
func _load_glStencilThenCoverFillPathNV(path:OpenGL.UInt, fillMode:OpenGL.Enum, mask:OpenGL.UInt, coverMode:OpenGL.Enum)
{
    OpenGL.glStencilThenCoverFillPathNV = unsafeBitCast(OpenGL.getfp("glStencilThenCoverFillPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilThenCoverFillPathNV))
    OpenGL.glStencilThenCoverFillPathNV(path, fillMode, mask, coverMode)
}
fileprivate 
func _load_glStencilThenCoverStrokePathInstancedNV(numPaths:OpenGL.Size, pathNameType:OpenGL.Enum, paths:UnsafeRawPointer?, pathBase:OpenGL.UInt, reference:OpenGL.Int, mask:OpenGL.UInt, coverMode:OpenGL.Enum, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glStencilThenCoverStrokePathInstancedNV = unsafeBitCast(OpenGL.getfp("glStencilThenCoverStrokePathInstancedNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilThenCoverStrokePathInstancedNV))
    OpenGL.glStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
}
fileprivate 
func _load_glStencilThenCoverStrokePathNV(path:OpenGL.UInt, reference:OpenGL.Int, mask:OpenGL.UInt, coverMode:OpenGL.Enum)
{
    OpenGL.glStencilThenCoverStrokePathNV = unsafeBitCast(OpenGL.getfp("glStencilThenCoverStrokePathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glStencilThenCoverStrokePathNV))
    OpenGL.glStencilThenCoverStrokePathNV(path, reference, mask, coverMode)
}
fileprivate 
func _load_glStopInstrumentsSGIX(marker:OpenGL.Int)
{
    OpenGL.glStopInstrumentsSGIX = unsafeBitCast(OpenGL.getfp("glStopInstrumentsSGIX", support: [OpenGL.ss333]), to: Swift.type(of: OpenGL.glStopInstrumentsSGIX))
    OpenGL.glStopInstrumentsSGIX(marker)
}
fileprivate 
func _load_glStringMarkerGREMEDY(len:OpenGL.Size, string:UnsafeRawPointer?)
{
    OpenGL.glStringMarkerGREMEDY = unsafeBitCast(OpenGL.getfp("glStringMarkerGREMEDY", support: [OpenGL.ss208]), to: Swift.type(of: OpenGL.glStringMarkerGREMEDY))
    OpenGL.glStringMarkerGREMEDY(len, string)
}
fileprivate 
func _load_glSubpixelPrecisionBiasNV(xbits:OpenGL.UInt, ybits:OpenGL.UInt)
{
    OpenGL.glSubpixelPrecisionBiasNV = unsafeBitCast(OpenGL.getfp("glSubpixelPrecisionBiasNV", support: [OpenGL.ss232]), to: Swift.type(of: OpenGL.glSubpixelPrecisionBiasNV))
    OpenGL.glSubpixelPrecisionBiasNV(xbits, ybits)
}
fileprivate 
func _load_glSwizzleEXT(res:OpenGL.UInt, input:OpenGL.UInt, outX:OpenGL.Enum, outY:OpenGL.Enum, outZ:OpenGL.Enum, outW:OpenGL.Enum)
{
    OpenGL.glSwizzleEXT = unsafeBitCast(OpenGL.getfp("glSwizzleEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glSwizzleEXT))
    OpenGL.glSwizzleEXT(res, input, outX, outY, outZ, outW)
}
fileprivate 
func _load_glSyncTextureINTEL(texture:OpenGL.UInt)
{
    OpenGL.glSyncTextureINTEL = unsafeBitCast(OpenGL.getfp("glSyncTextureINTEL", support: [OpenGL.ss217]), to: Swift.type(of: OpenGL.glSyncTextureINTEL))
    OpenGL.glSyncTextureINTEL(texture)
}
fileprivate 
func _load_glTagSampleBufferSGIX()
{
    OpenGL.glTagSampleBufferSGIX = unsafeBitCast(OpenGL.getfp("glTagSampleBufferSGIX", support: [OpenGL.ss339]), to: Swift.type(of: OpenGL.glTagSampleBufferSGIX))
    OpenGL.glTagSampleBufferSGIX()
}
fileprivate 
func _load_glTangent3bEXT(tx:OpenGL.Byte, ty:OpenGL.Byte, tz:OpenGL.Byte)
{
    OpenGL.glTangent3bEXT = unsafeBitCast(OpenGL.getfp("glTangent3bEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3bEXT))
    OpenGL.glTangent3bEXT(tx, ty, tz)
}
fileprivate 
func _load_glTangent3bvEXT(v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glTangent3bvEXT = unsafeBitCast(OpenGL.getfp("glTangent3bvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3bvEXT))
    OpenGL.glTangent3bvEXT(v)
}
fileprivate 
func _load_glTangent3dEXT(tx:OpenGL.Double, ty:OpenGL.Double, tz:OpenGL.Double)
{
    OpenGL.glTangent3dEXT = unsafeBitCast(OpenGL.getfp("glTangent3dEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3dEXT))
    OpenGL.glTangent3dEXT(tx, ty, tz)
}
fileprivate 
func _load_glTangent3dvEXT(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTangent3dvEXT = unsafeBitCast(OpenGL.getfp("glTangent3dvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3dvEXT))
    OpenGL.glTangent3dvEXT(v)
}
fileprivate 
func _load_glTangent3fEXT(tx:OpenGL.Float, ty:OpenGL.Float, tz:OpenGL.Float)
{
    OpenGL.glTangent3fEXT = unsafeBitCast(OpenGL.getfp("glTangent3fEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3fEXT))
    OpenGL.glTangent3fEXT(tx, ty, tz)
}
fileprivate 
func _load_glTangent3fvEXT(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTangent3fvEXT = unsafeBitCast(OpenGL.getfp("glTangent3fvEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3fvEXT))
    OpenGL.glTangent3fvEXT(v)
}
fileprivate 
func _load_glTangent3iEXT(tx:OpenGL.Int, ty:OpenGL.Int, tz:OpenGL.Int)
{
    OpenGL.glTangent3iEXT = unsafeBitCast(OpenGL.getfp("glTangent3iEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3iEXT))
    OpenGL.glTangent3iEXT(tx, ty, tz)
}
fileprivate 
func _load_glTangent3ivEXT(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTangent3ivEXT = unsafeBitCast(OpenGL.getfp("glTangent3ivEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3ivEXT))
    OpenGL.glTangent3ivEXT(v)
}
fileprivate 
func _load_glTangent3sEXT(tx:OpenGL.Short, ty:OpenGL.Short, tz:OpenGL.Short)
{
    OpenGL.glTangent3sEXT = unsafeBitCast(OpenGL.getfp("glTangent3sEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3sEXT))
    OpenGL.glTangent3sEXT(tx, ty, tz)
}
fileprivate 
func _load_glTangent3svEXT(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glTangent3svEXT = unsafeBitCast(OpenGL.getfp("glTangent3svEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangent3svEXT))
    OpenGL.glTangent3svEXT(v)
}
fileprivate 
func _load_glTangentPointerEXT(type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glTangentPointerEXT = unsafeBitCast(OpenGL.getfp("glTangentPointerEXT", support: [OpenGL.ss136]), to: Swift.type(of: OpenGL.glTangentPointerEXT))
    OpenGL.glTangentPointerEXT(type, stride, pointer)
}
fileprivate 
func _load_glTbufferMask3DFX(mask:OpenGL.UInt)
{
    OpenGL.glTbufferMask3DFX = unsafeBitCast(OpenGL.getfp("glTbufferMask3DFX", support: [OpenGL.ss0]), to: Swift.type(of: OpenGL.glTbufferMask3DFX))
    OpenGL.glTbufferMask3DFX(mask)
}
fileprivate 
func _load_glTessellationFactorAMD(factor:OpenGL.Float)
{
    OpenGL.glTessellationFactorAMD = unsafeBitCast(OpenGL.getfp("glTessellationFactorAMD", support: [OpenGL.ss12]), to: Swift.type(of: OpenGL.glTessellationFactorAMD))
    OpenGL.glTessellationFactorAMD(factor)
}
fileprivate 
func _load_glTessellationModeAMD(mode:OpenGL.Enum)
{
    OpenGL.glTessellationModeAMD = unsafeBitCast(OpenGL.getfp("glTessellationModeAMD", support: [OpenGL.ss12]), to: Swift.type(of: OpenGL.glTessellationModeAMD))
    OpenGL.glTessellationModeAMD(mode)
}
fileprivate 
func _load_glTestFenceAPPLE(fence:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glTestFenceAPPLE = unsafeBitCast(OpenGL.getfp("glTestFenceAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glTestFenceAPPLE))
    return OpenGL.glTestFenceAPPLE(fence)
}
fileprivate 
func _load_glTestFenceNV(fence:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glTestFenceNV = unsafeBitCast(OpenGL.getfp("glTestFenceNV", support: [OpenGL.ss243]), to: Swift.type(of: OpenGL.glTestFenceNV))
    return OpenGL.glTestFenceNV(fence)
}
fileprivate 
func _load_glTestObjectAPPLE(object:OpenGL.Enum, name:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glTestObjectAPPLE = unsafeBitCast(OpenGL.getfp("glTestObjectAPPLE", support: [OpenGL.ss19]), to: Swift.type(of: OpenGL.glTestObjectAPPLE))
    return OpenGL.glTestObjectAPPLE(object, name)
}
fileprivate 
func _load_glTexBuffer(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTexBuffer = unsafeBitCast(OpenGL.getfp("glTexBuffer", support: [OpenGL.ss355, OpenGL.ss368]), to: Swift.type(of: OpenGL.glTexBuffer))
    OpenGL.glTexBuffer(target, internalformat, buffer)
}
fileprivate 
func _load_glTexBufferARB(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTexBufferARB = unsafeBitCast(OpenGL.getfp("glTexBufferARB", support: [OpenGL.ss92]), to: Swift.type(of: OpenGL.glTexBufferARB))
    OpenGL.glTexBufferARB(target, internalformat, buffer)
}
fileprivate 
func _load_glTexBufferEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTexBufferEXT = unsafeBitCast(OpenGL.getfp("glTexBufferEXT", support: [OpenGL.ss192, OpenGL.ss193]), to: Swift.type(of: OpenGL.glTexBufferEXT))
    OpenGL.glTexBufferEXT(target, internalformat, buffer)
}
fileprivate 
func _load_glTexBufferOES(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTexBufferOES = unsafeBitCast(OpenGL.getfp("glTexBufferOES", support: [OpenGL.ss306]), to: Swift.type(of: OpenGL.glTexBufferOES))
    OpenGL.glTexBufferOES(target, internalformat, buffer)
}
fileprivate 
func _load_glTexBufferRange(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTexBufferRange = unsafeBitCast(OpenGL.getfp("glTexBufferRange", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss93]), to: Swift.type(of: OpenGL.glTexBufferRange))
    OpenGL.glTexBufferRange(target, internalformat, buffer, offset, size)
}
fileprivate 
func _load_glTexBufferRangeEXT(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTexBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glTexBufferRangeEXT", support: [OpenGL.ss192]), to: Swift.type(of: OpenGL.glTexBufferRangeEXT))
    OpenGL.glTexBufferRangeEXT(target, internalformat, buffer, offset, size)
}
fileprivate 
func _load_glTexBufferRangeOES(target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTexBufferRangeOES = unsafeBitCast(OpenGL.getfp("glTexBufferRangeOES", support: [OpenGL.ss306]), to: Swift.type(of: OpenGL.glTexBufferRangeOES))
    OpenGL.glTexBufferRangeOES(target, internalformat, buffer, offset, size)
}
fileprivate 
func _load_glTexBumpParameterfvATI(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexBumpParameterfvATI = unsafeBitCast(OpenGL.getfp("glTexBumpParameterfvATI", support: [OpenGL.ss117]), to: Swift.type(of: OpenGL.glTexBumpParameterfvATI))
    OpenGL.glTexBumpParameterfvATI(pname, param)
}
fileprivate 
func _load_glTexBumpParameterivATI(pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexBumpParameterivATI = unsafeBitCast(OpenGL.getfp("glTexBumpParameterivATI", support: [OpenGL.ss117]), to: Swift.type(of: OpenGL.glTexBumpParameterivATI))
    OpenGL.glTexBumpParameterivATI(pname, param)
}
fileprivate 
func _load_glTexCoord1bOES(s:OpenGL.Byte)
{
    OpenGL.glTexCoord1bOES = unsafeBitCast(OpenGL.getfp("glTexCoord1bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord1bOES))
    OpenGL.glTexCoord1bOES(s)
}
fileprivate 
func _load_glTexCoord1bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glTexCoord1bvOES = unsafeBitCast(OpenGL.getfp("glTexCoord1bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord1bvOES))
    OpenGL.glTexCoord1bvOES(coords)
}
fileprivate 
func _load_glTexCoord1d(s:OpenGL.Double)
{
    OpenGL.glTexCoord1d = unsafeBitCast(OpenGL.getfp("glTexCoord1d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1d))
    OpenGL.glTexCoord1d(s)
}
fileprivate 
func _load_glTexCoord1dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTexCoord1dv = unsafeBitCast(OpenGL.getfp("glTexCoord1dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1dv))
    OpenGL.glTexCoord1dv(v)
}
fileprivate 
func _load_glTexCoord1f(s:OpenGL.Float)
{
    OpenGL.glTexCoord1f = unsafeBitCast(OpenGL.getfp("glTexCoord1f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1f))
    OpenGL.glTexCoord1f(s)
}
fileprivate 
func _load_glTexCoord1fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord1fv = unsafeBitCast(OpenGL.getfp("glTexCoord1fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1fv))
    OpenGL.glTexCoord1fv(v)
}
fileprivate 
func _load_glTexCoord1hNV(s:OpenGL.HalfNV)
{
    OpenGL.glTexCoord1hNV = unsafeBitCast(OpenGL.getfp("glTexCoord1hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord1hNV))
    OpenGL.glTexCoord1hNV(s)
}
fileprivate 
func _load_glTexCoord1hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glTexCoord1hvNV = unsafeBitCast(OpenGL.getfp("glTexCoord1hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord1hvNV))
    OpenGL.glTexCoord1hvNV(v)
}
fileprivate 
func _load_glTexCoord1i(s:OpenGL.Int)
{
    OpenGL.glTexCoord1i = unsafeBitCast(OpenGL.getfp("glTexCoord1i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1i))
    OpenGL.glTexCoord1i(s)
}
fileprivate 
func _load_glTexCoord1iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexCoord1iv = unsafeBitCast(OpenGL.getfp("glTexCoord1iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1iv))
    OpenGL.glTexCoord1iv(v)
}
fileprivate 
func _load_glTexCoord1s(s:OpenGL.Short)
{
    OpenGL.glTexCoord1s = unsafeBitCast(OpenGL.getfp("glTexCoord1s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1s))
    OpenGL.glTexCoord1s(s)
}
fileprivate 
func _load_glTexCoord1sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glTexCoord1sv = unsafeBitCast(OpenGL.getfp("glTexCoord1sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord1sv))
    OpenGL.glTexCoord1sv(v)
}
fileprivate 
func _load_glTexCoord1xOES(s:OpenGL.Fixed)
{
    OpenGL.glTexCoord1xOES = unsafeBitCast(OpenGL.getfp("glTexCoord1xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord1xOES))
    OpenGL.glTexCoord1xOES(s)
}
fileprivate 
func _load_glTexCoord1xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexCoord1xvOES = unsafeBitCast(OpenGL.getfp("glTexCoord1xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord1xvOES))
    OpenGL.glTexCoord1xvOES(coords)
}
fileprivate 
func _load_glTexCoord2bOES(s:OpenGL.Byte, t:OpenGL.Byte)
{
    OpenGL.glTexCoord2bOES = unsafeBitCast(OpenGL.getfp("glTexCoord2bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord2bOES))
    OpenGL.glTexCoord2bOES(s, t)
}
fileprivate 
func _load_glTexCoord2bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glTexCoord2bvOES = unsafeBitCast(OpenGL.getfp("glTexCoord2bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord2bvOES))
    OpenGL.glTexCoord2bvOES(coords)
}
fileprivate 
func _load_glTexCoord2d(s:OpenGL.Double, t:OpenGL.Double)
{
    OpenGL.glTexCoord2d = unsafeBitCast(OpenGL.getfp("glTexCoord2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2d))
    OpenGL.glTexCoord2d(s, t)
}
fileprivate 
func _load_glTexCoord2dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTexCoord2dv = unsafeBitCast(OpenGL.getfp("glTexCoord2dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2dv))
    OpenGL.glTexCoord2dv(v)
}
fileprivate 
func _load_glTexCoord2f(s:OpenGL.Float, t:OpenGL.Float)
{
    OpenGL.glTexCoord2f = unsafeBitCast(OpenGL.getfp("glTexCoord2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2f))
    OpenGL.glTexCoord2f(s, t)
}
fileprivate 
func _load_glTexCoord2fColor3fVertex3fSUN(s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTexCoord2fColor3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor3fVertex3fSUN))
    OpenGL.glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z)
}
fileprivate 
func _load_glTexCoord2fColor3fVertex3fvSUN(tc:UnsafePointer<OpenGL.Float>?, c:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fColor3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor3fVertex3fvSUN))
    OpenGL.glTexCoord2fColor3fVertex3fvSUN(tc, c, v)
}
fileprivate 
func _load_glTexCoord2fColor4fNormal3fVertex3fSUN(s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, a:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTexCoord2fColor4fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor4fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor4fNormal3fVertex3fSUN))
    OpenGL.glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glTexCoord2fColor4fNormal3fVertex3fvSUN(tc:UnsafePointer<OpenGL.Float>?, c:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fColor4fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor4fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor4fNormal3fVertex3fvSUN))
    OpenGL.glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v)
}
fileprivate 
func _load_glTexCoord2fColor4ubVertex3fSUN(s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.UByte, g:OpenGL.UByte, b:OpenGL.UByte, a:OpenGL.UByte, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTexCoord2fColor4ubVertex3fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor4ubVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor4ubVertex3fSUN))
    OpenGL.glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z)
}
fileprivate 
func _load_glTexCoord2fColor4ubVertex3fvSUN(tc:UnsafePointer<OpenGL.Float>?, c:UnsafePointer<OpenGL.UByte>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fColor4ubVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fColor4ubVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fColor4ubVertex3fvSUN))
    OpenGL.glTexCoord2fColor4ubVertex3fvSUN(tc, c, v)
}
fileprivate 
func _load_glTexCoord2fNormal3fVertex3fSUN(s:OpenGL.Float, t:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTexCoord2fNormal3fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fNormal3fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fNormal3fVertex3fSUN))
    OpenGL.glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z)
}
fileprivate 
func _load_glTexCoord2fNormal3fVertex3fvSUN(tc:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fNormal3fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fNormal3fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fNormal3fVertex3fvSUN))
    OpenGL.glTexCoord2fNormal3fVertex3fvSUN(tc, n, v)
}
fileprivate 
func _load_glTexCoord2fVertex3fSUN(s:OpenGL.Float, t:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTexCoord2fVertex3fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fVertex3fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fVertex3fSUN))
    OpenGL.glTexCoord2fVertex3fSUN(s, t, x, y, z)
}
fileprivate 
func _load_glTexCoord2fVertex3fvSUN(tc:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fVertex3fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord2fVertex3fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord2fVertex3fvSUN))
    OpenGL.glTexCoord2fVertex3fvSUN(tc, v)
}
fileprivate 
func _load_glTexCoord2fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord2fv = unsafeBitCast(OpenGL.getfp("glTexCoord2fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2fv))
    OpenGL.glTexCoord2fv(v)
}
fileprivate 
func _load_glTexCoord2hNV(s:OpenGL.HalfNV, t:OpenGL.HalfNV)
{
    OpenGL.glTexCoord2hNV = unsafeBitCast(OpenGL.getfp("glTexCoord2hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord2hNV))
    OpenGL.glTexCoord2hNV(s, t)
}
fileprivate 
func _load_glTexCoord2hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glTexCoord2hvNV = unsafeBitCast(OpenGL.getfp("glTexCoord2hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord2hvNV))
    OpenGL.glTexCoord2hvNV(v)
}
fileprivate 
func _load_glTexCoord2i(s:OpenGL.Int, t:OpenGL.Int)
{
    OpenGL.glTexCoord2i = unsafeBitCast(OpenGL.getfp("glTexCoord2i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2i))
    OpenGL.glTexCoord2i(s, t)
}
fileprivate 
func _load_glTexCoord2iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexCoord2iv = unsafeBitCast(OpenGL.getfp("glTexCoord2iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2iv))
    OpenGL.glTexCoord2iv(v)
}
fileprivate 
func _load_glTexCoord2s(s:OpenGL.Short, t:OpenGL.Short)
{
    OpenGL.glTexCoord2s = unsafeBitCast(OpenGL.getfp("glTexCoord2s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2s))
    OpenGL.glTexCoord2s(s, t)
}
fileprivate 
func _load_glTexCoord2sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glTexCoord2sv = unsafeBitCast(OpenGL.getfp("glTexCoord2sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord2sv))
    OpenGL.glTexCoord2sv(v)
}
fileprivate 
func _load_glTexCoord2xOES(s:OpenGL.Fixed, t:OpenGL.Fixed)
{
    OpenGL.glTexCoord2xOES = unsafeBitCast(OpenGL.getfp("glTexCoord2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord2xOES))
    OpenGL.glTexCoord2xOES(s, t)
}
fileprivate 
func _load_glTexCoord2xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexCoord2xvOES = unsafeBitCast(OpenGL.getfp("glTexCoord2xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord2xvOES))
    OpenGL.glTexCoord2xvOES(coords)
}
fileprivate 
func _load_glTexCoord3bOES(s:OpenGL.Byte, t:OpenGL.Byte, r:OpenGL.Byte)
{
    OpenGL.glTexCoord3bOES = unsafeBitCast(OpenGL.getfp("glTexCoord3bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord3bOES))
    OpenGL.glTexCoord3bOES(s, t, r)
}
fileprivate 
func _load_glTexCoord3bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glTexCoord3bvOES = unsafeBitCast(OpenGL.getfp("glTexCoord3bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord3bvOES))
    OpenGL.glTexCoord3bvOES(coords)
}
fileprivate 
func _load_glTexCoord3d(s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double)
{
    OpenGL.glTexCoord3d = unsafeBitCast(OpenGL.getfp("glTexCoord3d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3d))
    OpenGL.glTexCoord3d(s, t, r)
}
fileprivate 
func _load_glTexCoord3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTexCoord3dv = unsafeBitCast(OpenGL.getfp("glTexCoord3dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3dv))
    OpenGL.glTexCoord3dv(v)
}
fileprivate 
func _load_glTexCoord3f(s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float)
{
    OpenGL.glTexCoord3f = unsafeBitCast(OpenGL.getfp("glTexCoord3f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3f))
    OpenGL.glTexCoord3f(s, t, r)
}
fileprivate 
func _load_glTexCoord3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord3fv = unsafeBitCast(OpenGL.getfp("glTexCoord3fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3fv))
    OpenGL.glTexCoord3fv(v)
}
fileprivate 
func _load_glTexCoord3hNV(s:OpenGL.HalfNV, t:OpenGL.HalfNV, r:OpenGL.HalfNV)
{
    OpenGL.glTexCoord3hNV = unsafeBitCast(OpenGL.getfp("glTexCoord3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord3hNV))
    OpenGL.glTexCoord3hNV(s, t, r)
}
fileprivate 
func _load_glTexCoord3hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glTexCoord3hvNV = unsafeBitCast(OpenGL.getfp("glTexCoord3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord3hvNV))
    OpenGL.glTexCoord3hvNV(v)
}
fileprivate 
func _load_glTexCoord3i(s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int)
{
    OpenGL.glTexCoord3i = unsafeBitCast(OpenGL.getfp("glTexCoord3i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3i))
    OpenGL.glTexCoord3i(s, t, r)
}
fileprivate 
func _load_glTexCoord3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexCoord3iv = unsafeBitCast(OpenGL.getfp("glTexCoord3iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3iv))
    OpenGL.glTexCoord3iv(v)
}
fileprivate 
func _load_glTexCoord3s(s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short)
{
    OpenGL.glTexCoord3s = unsafeBitCast(OpenGL.getfp("glTexCoord3s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3s))
    OpenGL.glTexCoord3s(s, t, r)
}
fileprivate 
func _load_glTexCoord3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glTexCoord3sv = unsafeBitCast(OpenGL.getfp("glTexCoord3sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord3sv))
    OpenGL.glTexCoord3sv(v)
}
fileprivate 
func _load_glTexCoord3xOES(s:OpenGL.Fixed, t:OpenGL.Fixed, r:OpenGL.Fixed)
{
    OpenGL.glTexCoord3xOES = unsafeBitCast(OpenGL.getfp("glTexCoord3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord3xOES))
    OpenGL.glTexCoord3xOES(s, t, r)
}
fileprivate 
func _load_glTexCoord3xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexCoord3xvOES = unsafeBitCast(OpenGL.getfp("glTexCoord3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord3xvOES))
    OpenGL.glTexCoord3xvOES(coords)
}
fileprivate 
func _load_glTexCoord4bOES(s:OpenGL.Byte, t:OpenGL.Byte, r:OpenGL.Byte, q:OpenGL.Byte)
{
    OpenGL.glTexCoord4bOES = unsafeBitCast(OpenGL.getfp("glTexCoord4bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord4bOES))
    OpenGL.glTexCoord4bOES(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glTexCoord4bvOES = unsafeBitCast(OpenGL.getfp("glTexCoord4bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glTexCoord4bvOES))
    OpenGL.glTexCoord4bvOES(coords)
}
fileprivate 
func _load_glTexCoord4d(s:OpenGL.Double, t:OpenGL.Double, r:OpenGL.Double, q:OpenGL.Double)
{
    OpenGL.glTexCoord4d = unsafeBitCast(OpenGL.getfp("glTexCoord4d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4d))
    OpenGL.glTexCoord4d(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTexCoord4dv = unsafeBitCast(OpenGL.getfp("glTexCoord4dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4dv))
    OpenGL.glTexCoord4dv(v)
}
fileprivate 
func _load_glTexCoord4f(s:OpenGL.Float, t:OpenGL.Float, r:OpenGL.Float, q:OpenGL.Float)
{
    OpenGL.glTexCoord4f = unsafeBitCast(OpenGL.getfp("glTexCoord4f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4f))
    OpenGL.glTexCoord4f(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4fColor4fNormal3fVertex4fSUN(s:OpenGL.Float, t:OpenGL.Float, p:OpenGL.Float, q:OpenGL.Float, r:OpenGL.Float, g:OpenGL.Float, b:OpenGL.Float, a:OpenGL.Float, nx:OpenGL.Float, ny:OpenGL.Float, nz:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glTexCoord4fColor4fNormal3fVertex4fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord4fColor4fNormal3fVertex4fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord4fColor4fNormal3fVertex4fSUN))
    OpenGL.glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
}
fileprivate 
func _load_glTexCoord4fColor4fNormal3fVertex4fvSUN(tc:UnsafePointer<OpenGL.Float>?, c:UnsafePointer<OpenGL.Float>?, n:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord4fColor4fNormal3fVertex4fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord4fColor4fNormal3fVertex4fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord4fColor4fNormal3fVertex4fvSUN))
    OpenGL.glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v)
}
fileprivate 
func _load_glTexCoord4fVertex4fSUN(s:OpenGL.Float, t:OpenGL.Float, p:OpenGL.Float, q:OpenGL.Float, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glTexCoord4fVertex4fSUN = unsafeBitCast(OpenGL.getfp("glTexCoord4fVertex4fSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord4fVertex4fSUN))
    OpenGL.glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w)
}
fileprivate 
func _load_glTexCoord4fVertex4fvSUN(tc:UnsafePointer<OpenGL.Float>?, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord4fVertex4fvSUN = unsafeBitCast(OpenGL.getfp("glTexCoord4fVertex4fvSUN", support: [OpenGL.ss345]), to: Swift.type(of: OpenGL.glTexCoord4fVertex4fvSUN))
    OpenGL.glTexCoord4fVertex4fvSUN(tc, v)
}
fileprivate 
func _load_glTexCoord4fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexCoord4fv = unsafeBitCast(OpenGL.getfp("glTexCoord4fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4fv))
    OpenGL.glTexCoord4fv(v)
}
fileprivate 
func _load_glTexCoord4hNV(s:OpenGL.HalfNV, t:OpenGL.HalfNV, r:OpenGL.HalfNV, q:OpenGL.HalfNV)
{
    OpenGL.glTexCoord4hNV = unsafeBitCast(OpenGL.getfp("glTexCoord4hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord4hNV))
    OpenGL.glTexCoord4hNV(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glTexCoord4hvNV = unsafeBitCast(OpenGL.getfp("glTexCoord4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glTexCoord4hvNV))
    OpenGL.glTexCoord4hvNV(v)
}
fileprivate 
func _load_glTexCoord4i(s:OpenGL.Int, t:OpenGL.Int, r:OpenGL.Int, q:OpenGL.Int)
{
    OpenGL.glTexCoord4i = unsafeBitCast(OpenGL.getfp("glTexCoord4i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4i))
    OpenGL.glTexCoord4i(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexCoord4iv = unsafeBitCast(OpenGL.getfp("glTexCoord4iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4iv))
    OpenGL.glTexCoord4iv(v)
}
fileprivate 
func _load_glTexCoord4s(s:OpenGL.Short, t:OpenGL.Short, r:OpenGL.Short, q:OpenGL.Short)
{
    OpenGL.glTexCoord4s = unsafeBitCast(OpenGL.getfp("glTexCoord4s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4s))
    OpenGL.glTexCoord4s(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glTexCoord4sv = unsafeBitCast(OpenGL.getfp("glTexCoord4sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexCoord4sv))
    OpenGL.glTexCoord4sv(v)
}
fileprivate 
func _load_glTexCoord4xOES(s:OpenGL.Fixed, t:OpenGL.Fixed, r:OpenGL.Fixed, q:OpenGL.Fixed)
{
    OpenGL.glTexCoord4xOES = unsafeBitCast(OpenGL.getfp("glTexCoord4xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord4xOES))
    OpenGL.glTexCoord4xOES(s, t, r, q)
}
fileprivate 
func _load_glTexCoord4xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexCoord4xvOES = unsafeBitCast(OpenGL.getfp("glTexCoord4xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexCoord4xvOES))
    OpenGL.glTexCoord4xvOES(coords)
}
fileprivate 
func _load_glTexCoordFormatNV(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glTexCoordFormatNV = unsafeBitCast(OpenGL.getfp("glTexCoordFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glTexCoordFormatNV))
    OpenGL.glTexCoordFormatNV(size, type, stride)
}
fileprivate 
func _load_glTexCoordP1ui(type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glTexCoordP1ui = unsafeBitCast(OpenGL.getfp("glTexCoordP1ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP1ui))
    OpenGL.glTexCoordP1ui(type, coords)
}
fileprivate 
func _load_glTexCoordP1uiv(type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexCoordP1uiv = unsafeBitCast(OpenGL.getfp("glTexCoordP1uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP1uiv))
    OpenGL.glTexCoordP1uiv(type, coords)
}
fileprivate 
func _load_glTexCoordP2ui(type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glTexCoordP2ui = unsafeBitCast(OpenGL.getfp("glTexCoordP2ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP2ui))
    OpenGL.glTexCoordP2ui(type, coords)
}
fileprivate 
func _load_glTexCoordP2uiv(type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexCoordP2uiv = unsafeBitCast(OpenGL.getfp("glTexCoordP2uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP2uiv))
    OpenGL.glTexCoordP2uiv(type, coords)
}
fileprivate 
func _load_glTexCoordP3ui(type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glTexCoordP3ui = unsafeBitCast(OpenGL.getfp("glTexCoordP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP3ui))
    OpenGL.glTexCoordP3ui(type, coords)
}
fileprivate 
func _load_glTexCoordP3uiv(type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexCoordP3uiv = unsafeBitCast(OpenGL.getfp("glTexCoordP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP3uiv))
    OpenGL.glTexCoordP3uiv(type, coords)
}
fileprivate 
func _load_glTexCoordP4ui(type:OpenGL.Enum, coords:OpenGL.UInt)
{
    OpenGL.glTexCoordP4ui = unsafeBitCast(OpenGL.getfp("glTexCoordP4ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP4ui))
    OpenGL.glTexCoordP4ui(type, coords)
}
fileprivate 
func _load_glTexCoordP4uiv(type:OpenGL.Enum, coords:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexCoordP4uiv = unsafeBitCast(OpenGL.getfp("glTexCoordP4uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glTexCoordP4uiv))
    OpenGL.glTexCoordP4uiv(type, coords)
}
fileprivate 
func _load_glTexCoordPointer(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glTexCoordPointer = unsafeBitCast(OpenGL.getfp("glTexCoordPointer", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexCoordPointer))
    OpenGL.glTexCoordPointer(size, type, stride, pointer)
}
fileprivate 
func _load_glTexCoordPointerEXT(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glTexCoordPointerEXT = unsafeBitCast(OpenGL.getfp("glTexCoordPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glTexCoordPointerEXT))
    OpenGL.glTexCoordPointerEXT(size, type, stride, count, pointer)
}
fileprivate 
func _load_glTexCoordPointerListIBM(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glTexCoordPointerListIBM = unsafeBitCast(OpenGL.getfp("glTexCoordPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glTexCoordPointerListIBM))
    OpenGL.glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glTexCoordPointervINTEL(size:OpenGL.Int, type:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    OpenGL.glTexCoordPointervINTEL = unsafeBitCast(OpenGL.getfp("glTexCoordPointervINTEL", support: [OpenGL.ss218]), to: Swift.type(of: OpenGL.glTexCoordPointervINTEL))
    OpenGL.glTexCoordPointervINTEL(size, type, pointer)
}
fileprivate 
func _load_glTexEnvf(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTexEnvf = unsafeBitCast(OpenGL.getfp("glTexEnvf", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnvf))
    OpenGL.glTexEnvf(target, pname, param)
}
fileprivate 
func _load_glTexEnvfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexEnvfv = unsafeBitCast(OpenGL.getfp("glTexEnvfv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnvfv))
    OpenGL.glTexEnvfv(target, pname, params)
}
fileprivate 
func _load_glTexEnvi(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTexEnvi = unsafeBitCast(OpenGL.getfp("glTexEnvi", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnvi))
    OpenGL.glTexEnvi(target, pname, param)
}
fileprivate 
func _load_glTexEnviv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexEnviv = unsafeBitCast(OpenGL.getfp("glTexEnviv", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnviv))
    OpenGL.glTexEnviv(target, pname, params)
}
fileprivate 
func _load_glTexEnvx(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glTexEnvx = unsafeBitCast(OpenGL.getfp("glTexEnvx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnvx))
    OpenGL.glTexEnvx(target, pname, param)
}
fileprivate 
func _load_glTexEnvxOES(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glTexEnvxOES = unsafeBitCast(OpenGL.getfp("glTexEnvxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexEnvxOES))
    OpenGL.glTexEnvxOES(target, pname, param)
}
fileprivate 
func _load_glTexEnvxv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexEnvxv = unsafeBitCast(OpenGL.getfp("glTexEnvxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexEnvxv))
    OpenGL.glTexEnvxv(target, pname, params)
}
fileprivate 
func _load_glTexEnvxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexEnvxvOES = unsafeBitCast(OpenGL.getfp("glTexEnvxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexEnvxvOES))
    OpenGL.glTexEnvxvOES(target, pname, params)
}
fileprivate 
func _load_glTexFilterFuncSGIS(target:OpenGL.Enum, filter:OpenGL.Enum, n:OpenGL.Size, weights:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexFilterFuncSGIS = unsafeBitCast(OpenGL.getfp("glTexFilterFuncSGIS", support: [OpenGL.ss327]), to: Swift.type(of: OpenGL.glTexFilterFuncSGIS))
    OpenGL.glTexFilterFuncSGIS(target, filter, n, weights)
}
fileprivate 
func _load_glTexGend(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Double)
{
    OpenGL.glTexGend = unsafeBitCast(OpenGL.getfp("glTexGend", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGend))
    OpenGL.glTexGend(coord, pname, param)
}
fileprivate 
func _load_glTexGendv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glTexGendv = unsafeBitCast(OpenGL.getfp("glTexGendv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGendv))
    OpenGL.glTexGendv(coord, pname, params)
}
fileprivate 
func _load_glTexGenf(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTexGenf = unsafeBitCast(OpenGL.getfp("glTexGenf", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGenf))
    OpenGL.glTexGenf(coord, pname, param)
}
fileprivate 
func _load_glTexGenfOES(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTexGenfOES = unsafeBitCast(OpenGL.getfp("glTexGenfOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGenfOES))
    OpenGL.glTexGenfOES(coord, pname, param)
}
fileprivate 
func _load_glTexGenfv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexGenfv = unsafeBitCast(OpenGL.getfp("glTexGenfv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGenfv))
    OpenGL.glTexGenfv(coord, pname, params)
}
fileprivate 
func _load_glTexGenfvOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexGenfvOES = unsafeBitCast(OpenGL.getfp("glTexGenfvOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGenfvOES))
    OpenGL.glTexGenfvOES(coord, pname, params)
}
fileprivate 
func _load_glTexGeni(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTexGeni = unsafeBitCast(OpenGL.getfp("glTexGeni", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGeni))
    OpenGL.glTexGeni(coord, pname, param)
}
fileprivate 
func _load_glTexGeniOES(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTexGeniOES = unsafeBitCast(OpenGL.getfp("glTexGeniOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGeniOES))
    OpenGL.glTexGeniOES(coord, pname, param)
}
fileprivate 
func _load_glTexGeniv(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexGeniv = unsafeBitCast(OpenGL.getfp("glTexGeniv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTexGeniv))
    OpenGL.glTexGeniv(coord, pname, params)
}
fileprivate 
func _load_glTexGenivOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexGenivOES = unsafeBitCast(OpenGL.getfp("glTexGenivOES", support: [OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGenivOES))
    OpenGL.glTexGenivOES(coord, pname, params)
}
fileprivate 
func _load_glTexGenxOES(coord:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glTexGenxOES = unsafeBitCast(OpenGL.getfp("glTexGenxOES", support: [OpenGL.ss292, OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGenxOES))
    OpenGL.glTexGenxOES(coord, pname, param)
}
fileprivate 
func _load_glTexGenxvOES(coord:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexGenxvOES = unsafeBitCast(OpenGL.getfp("glTexGenxvOES", support: [OpenGL.ss292, OpenGL.ss307]), to: Swift.type(of: OpenGL.glTexGenxvOES))
    OpenGL.glTexGenxvOES(coord, pname, params)
}
fileprivate 
func _load_glTexImage1D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage1D = unsafeBitCast(OpenGL.getfp("glTexImage1D", support: [OpenGL.ss346]), to: Swift.type(of: OpenGL.glTexImage1D))
    OpenGL.glTexImage1D(target, level, internalformat, width, border, format, type, pixels)
}
fileprivate 
func _load_glTexImage2D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage2D = unsafeBitCast(OpenGL.getfp("glTexImage2D", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexImage2D))
    OpenGL.glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels)
}
fileprivate 
func _load_glTexImage2DMultisample(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTexImage2DMultisample = unsafeBitCast(OpenGL.getfp("glTexImage2DMultisample", support: [OpenGL.ss356, OpenGL.ss95]), to: Swift.type(of: OpenGL.glTexImage2DMultisample))
    OpenGL.glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
fileprivate 
func _load_glTexImage2DMultisampleCoverageNV(target:OpenGL.Enum, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTexImage2DMultisampleCoverageNV = unsafeBitCast(OpenGL.getfp("glTexImage2DMultisampleCoverageNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTexImage2DMultisampleCoverageNV))
    OpenGL.glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
fileprivate 
func _load_glTexImage3D(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage3D = unsafeBitCast(OpenGL.getfp("glTexImage3D", support: [OpenGL.ss348, OpenGL.ss366]), to: Swift.type(of: OpenGL.glTexImage3D))
    OpenGL.glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
fileprivate 
func _load_glTexImage3DEXT(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage3DEXT = unsafeBitCast(OpenGL.getfp("glTexImage3DEXT", support: [OpenGL.ss189]), to: Swift.type(of: OpenGL.glTexImage3DEXT))
    OpenGL.glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
fileprivate 
func _load_glTexImage3DMultisample(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTexImage3DMultisample = unsafeBitCast(OpenGL.getfp("glTexImage3DMultisample", support: [OpenGL.ss356, OpenGL.ss95]), to: Swift.type(of: OpenGL.glTexImage3DMultisample))
    OpenGL.glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
fileprivate 
func _load_glTexImage3DMultisampleCoverageNV(target:OpenGL.Enum, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTexImage3DMultisampleCoverageNV = unsafeBitCast(OpenGL.getfp("glTexImage3DMultisampleCoverageNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTexImage3DMultisampleCoverageNV))
    OpenGL.glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
fileprivate 
func _load_glTexImage3DOES(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage3DOES = unsafeBitCast(OpenGL.getfp("glTexImage3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glTexImage3DOES))
    OpenGL.glTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
fileprivate 
func _load_glTexImage4DSGIS(target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, size4d:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexImage4DSGIS = unsafeBitCast(OpenGL.getfp("glTexImage4DSGIS", support: [OpenGL.ss325]), to: Swift.type(of: OpenGL.glTexImage4DSGIS))
    OpenGL.glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)
}
fileprivate 
func _load_glTexPageCommitmentARB(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, commit:OpenGL.Bool)
{
    OpenGL.glTexPageCommitmentARB = unsafeBitCast(OpenGL.getfp("glTexPageCommitmentARB", support: [OpenGL.ss88]), to: Swift.type(of: OpenGL.glTexPageCommitmentARB))
    OpenGL.glTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
fileprivate 
func _load_glTexPageCommitmentEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, commit:OpenGL.Bool)
{
    OpenGL.glTexPageCommitmentEXT = unsafeBitCast(OpenGL.getfp("glTexPageCommitmentEXT", support: [OpenGL.ss184]), to: Swift.type(of: OpenGL.glTexPageCommitmentEXT))
    OpenGL.glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
fileprivate 
func _load_glTexParameterIiv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexParameterIiv = unsafeBitCast(OpenGL.getfp("glTexParameterIiv", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glTexParameterIiv))
    OpenGL.glTexParameterIiv(target, pname, params)
}
fileprivate 
func _load_glTexParameterIivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexParameterIivEXT = unsafeBitCast(OpenGL.getfp("glTexParameterIivEXT", support: [OpenGL.ss191, OpenGL.ss195]), to: Swift.type(of: OpenGL.glTexParameterIivEXT))
    OpenGL.glTexParameterIivEXT(target, pname, params)
}
fileprivate 
func _load_glTexParameterIivOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexParameterIivOES = unsafeBitCast(OpenGL.getfp("glTexParameterIivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glTexParameterIivOES))
    OpenGL.glTexParameterIivOES(target, pname, params)
}
fileprivate 
func _load_glTexParameterIuiv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexParameterIuiv = unsafeBitCast(OpenGL.getfp("glTexParameterIuiv", support: [OpenGL.ss354, OpenGL.ss368]), to: Swift.type(of: OpenGL.glTexParameterIuiv))
    OpenGL.glTexParameterIuiv(target, pname, params)
}
fileprivate 
func _load_glTexParameterIuivEXT(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glTexParameterIuivEXT", support: [OpenGL.ss191, OpenGL.ss195]), to: Swift.type(of: OpenGL.glTexParameterIuivEXT))
    OpenGL.glTexParameterIuivEXT(target, pname, params)
}
fileprivate 
func _load_glTexParameterIuivOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTexParameterIuivOES = unsafeBitCast(OpenGL.getfp("glTexParameterIuivOES", support: [OpenGL.ss305]), to: Swift.type(of: OpenGL.glTexParameterIuivOES))
    OpenGL.glTexParameterIuivOES(target, pname, params)
}
fileprivate 
func _load_glTexParameterf(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTexParameterf = unsafeBitCast(OpenGL.getfp("glTexParameterf", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexParameterf))
    OpenGL.glTexParameterf(target, pname, param)
}
fileprivate 
func _load_glTexParameterfv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTexParameterfv = unsafeBitCast(OpenGL.getfp("glTexParameterfv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexParameterfv))
    OpenGL.glTexParameterfv(target, pname, params)
}
fileprivate 
func _load_glTexParameteri(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTexParameteri = unsafeBitCast(OpenGL.getfp("glTexParameteri", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexParameteri))
    OpenGL.glTexParameteri(target, pname, param)
}
fileprivate 
func _load_glTexParameteriv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTexParameteriv = unsafeBitCast(OpenGL.getfp("glTexParameteriv", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexParameteriv))
    OpenGL.glTexParameteriv(target, pname, params)
}
fileprivate 
func _load_glTexParameterx(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glTexParameterx = unsafeBitCast(OpenGL.getfp("glTexParameterx", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexParameterx))
    OpenGL.glTexParameterx(target, pname, param)
}
fileprivate 
func _load_glTexParameterxOES(target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Fixed)
{
    OpenGL.glTexParameterxOES = unsafeBitCast(OpenGL.getfp("glTexParameterxOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexParameterxOES))
    OpenGL.glTexParameterxOES(target, pname, param)
}
fileprivate 
func _load_glTexParameterxv(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexParameterxv = unsafeBitCast(OpenGL.getfp("glTexParameterxv", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glTexParameterxv))
    OpenGL.glTexParameterxv(target, pname, params)
}
fileprivate 
func _load_glTexParameterxvOES(target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glTexParameterxvOES = unsafeBitCast(OpenGL.getfp("glTexParameterxvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTexParameterxvOES))
    OpenGL.glTexParameterxvOES(target, pname, params)
}
fileprivate 
func _load_glTexRenderbufferNV(target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glTexRenderbufferNV = unsafeBitCast(OpenGL.getfp("glTexRenderbufferNV", support: [OpenGL.ss242]), to: Swift.type(of: OpenGL.glTexRenderbufferNV))
    OpenGL.glTexRenderbufferNV(target, renderbuffer)
}
fileprivate 
func _load_glTexStorage1D(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size)
{
    OpenGL.glTexStorage1D = unsafeBitCast(OpenGL.getfp("glTexStorage1D", support: [OpenGL.ss360, OpenGL.ss96]), to: Swift.type(of: OpenGL.glTexStorage1D))
    OpenGL.glTexStorage1D(target, levels, internalformat, width)
}
fileprivate 
func _load_glTexStorage1DEXT(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size)
{
    OpenGL.glTexStorage1DEXT = unsafeBitCast(OpenGL.getfp("glTexStorage1DEXT", support: [OpenGL.ss198]), to: Swift.type(of: OpenGL.glTexStorage1DEXT))
    OpenGL.glTexStorage1DEXT(target, levels, internalformat, width)
}
fileprivate 
func _load_glTexStorage2D(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glTexStorage2D = unsafeBitCast(OpenGL.getfp("glTexStorage2D", support: [OpenGL.ss360, OpenGL.ss366, OpenGL.ss96]), to: Swift.type(of: OpenGL.glTexStorage2D))
    OpenGL.glTexStorage2D(target, levels, internalformat, width, height)
}
fileprivate 
func _load_glTexStorage2DEXT(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glTexStorage2DEXT = unsafeBitCast(OpenGL.getfp("glTexStorage2DEXT", support: [OpenGL.ss198]), to: Swift.type(of: OpenGL.glTexStorage2DEXT))
    OpenGL.glTexStorage2DEXT(target, levels, internalformat, width, height)
}
fileprivate 
func _load_glTexStorage2DMultisample(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTexStorage2DMultisample = unsafeBitCast(OpenGL.getfp("glTexStorage2DMultisample", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss97]), to: Swift.type(of: OpenGL.glTexStorage2DMultisample))
    OpenGL.glTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
fileprivate 
func _load_glTexStorage3D(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glTexStorage3D = unsafeBitCast(OpenGL.getfp("glTexStorage3D", support: [OpenGL.ss360, OpenGL.ss366, OpenGL.ss96]), to: Swift.type(of: OpenGL.glTexStorage3D))
    OpenGL.glTexStorage3D(target, levels, internalformat, width, height, depth)
}
fileprivate 
func _load_glTexStorage3DEXT(target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glTexStorage3DEXT = unsafeBitCast(OpenGL.getfp("glTexStorage3DEXT", support: [OpenGL.ss198]), to: Swift.type(of: OpenGL.glTexStorage3DEXT))
    OpenGL.glTexStorage3DEXT(target, levels, internalformat, width, height, depth)
}
fileprivate 
func _load_glTexStorage3DMultisample(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTexStorage3DMultisample = unsafeBitCast(OpenGL.getfp("glTexStorage3DMultisample", support: [OpenGL.ss361, OpenGL.ss368, OpenGL.ss97]), to: Swift.type(of: OpenGL.glTexStorage3DMultisample))
    OpenGL.glTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
fileprivate 
func _load_glTexStorage3DMultisampleOES(target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTexStorage3DMultisampleOES = unsafeBitCast(OpenGL.getfp("glTexStorage3DMultisampleOES", support: [OpenGL.ss308]), to: Swift.type(of: OpenGL.glTexStorage3DMultisampleOES))
    OpenGL.glTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
fileprivate 
func _load_glTexStorageSparseAMD(target:OpenGL.Enum, internalFormat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, layers:OpenGL.Size, flags:OpenGL.Bitfield)
{
    OpenGL.glTexStorageSparseAMD = unsafeBitCast(OpenGL.getfp("glTexStorageSparseAMD", support: [OpenGL.ss10]), to: Swift.type(of: OpenGL.glTexStorageSparseAMD))
    OpenGL.glTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags)
}
fileprivate 
func _load_glTexSubImage1D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage1D = unsafeBitCast(OpenGL.getfp("glTexSubImage1D", support: [OpenGL.ss347]), to: Swift.type(of: OpenGL.glTexSubImage1D))
    OpenGL.glTexSubImage1D(target, level, xoffset, width, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage1DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glTexSubImage1DEXT", support: [OpenGL.ss187]), to: Swift.type(of: OpenGL.glTexSubImage1DEXT))
    OpenGL.glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage2D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage2D = unsafeBitCast(OpenGL.getfp("glTexSubImage2D", support: [OpenGL.ss347, OpenGL.ss365]), to: Swift.type(of: OpenGL.glTexSubImage2D))
    OpenGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage2DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glTexSubImage2DEXT", support: [OpenGL.ss187]), to: Swift.type(of: OpenGL.glTexSubImage2DEXT))
    OpenGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage3D(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage3D = unsafeBitCast(OpenGL.getfp("glTexSubImage3D", support: [OpenGL.ss348, OpenGL.ss366]), to: Swift.type(of: OpenGL.glTexSubImage3D))
    OpenGL.glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage3DEXT(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glTexSubImage3DEXT", support: [OpenGL.ss189]), to: Swift.type(of: OpenGL.glTexSubImage3DEXT))
    OpenGL.glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage3DOES(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage3DOES = unsafeBitCast(OpenGL.getfp("glTexSubImage3DOES", support: [OpenGL.ss304]), to: Swift.type(of: OpenGL.glTexSubImage3DOES))
    OpenGL.glTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glTexSubImage4DSGIS(target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, woffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, size4d:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTexSubImage4DSGIS = unsafeBitCast(OpenGL.getfp("glTexSubImage4DSGIS", support: [OpenGL.ss325]), to: Swift.type(of: OpenGL.glTexSubImage4DSGIS))
    OpenGL.glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)
}
fileprivate 
func _load_glTextureBarrier()
{
    OpenGL.glTextureBarrier = unsafeBitCast(OpenGL.getfp("glTextureBarrier", support: [OpenGL.ss363, OpenGL.ss91]), to: Swift.type(of: OpenGL.glTextureBarrier))
    OpenGL.glTextureBarrier()
}
fileprivate 
func _load_glTextureBarrierNV()
{
    OpenGL.glTextureBarrierNV = unsafeBitCast(OpenGL.getfp("glTextureBarrierNV", support: [OpenGL.ss271]), to: Swift.type(of: OpenGL.glTextureBarrierNV))
    OpenGL.glTextureBarrierNV()
}
fileprivate 
func _load_glTextureBuffer(texture:OpenGL.UInt, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTextureBuffer = unsafeBitCast(OpenGL.getfp("glTextureBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureBuffer))
    OpenGL.glTextureBuffer(texture, internalformat, buffer)
}
fileprivate 
func _load_glTextureBufferEXT(texture:OpenGL.UInt, target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt)
{
    OpenGL.glTextureBufferEXT = unsafeBitCast(OpenGL.getfp("glTextureBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureBufferEXT))
    OpenGL.glTextureBufferEXT(texture, target, internalformat, buffer)
}
fileprivate 
func _load_glTextureBufferRange(texture:OpenGL.UInt, internalformat:OpenGL.Enum, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTextureBufferRange = unsafeBitCast(OpenGL.getfp("glTextureBufferRange", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureBufferRange))
    OpenGL.glTextureBufferRange(texture, internalformat, buffer, offset, size)
}
fileprivate 
func _load_glTextureBufferRangeEXT(texture:OpenGL.UInt, target:OpenGL.Enum, internalformat:OpenGL.Enum, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTextureBufferRangeEXT = unsafeBitCast(OpenGL.getfp("glTextureBufferRangeEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureBufferRangeEXT))
    OpenGL.glTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size)
}
fileprivate 
func _load_glTextureColorMaskSGIS(red:OpenGL.Bool, green:OpenGL.Bool, blue:OpenGL.Bool, alpha:OpenGL.Bool)
{
    OpenGL.glTextureColorMaskSGIS = unsafeBitCast(OpenGL.getfp("glTextureColorMaskSGIS", support: [OpenGL.ss326]), to: Swift.type(of: OpenGL.glTextureColorMaskSGIS))
    OpenGL.glTextureColorMaskSGIS(red, green, blue, alpha)
}
fileprivate 
func _load_glTextureImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureImage1DEXT = unsafeBitCast(OpenGL.getfp("glTextureImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureImage1DEXT))
    OpenGL.glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels)
}
fileprivate 
func _load_glTextureImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureImage2DEXT = unsafeBitCast(OpenGL.getfp("glTextureImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureImage2DEXT))
    OpenGL.glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels)
}
fileprivate 
func _load_glTextureImage2DMultisampleCoverageNV(texture:OpenGL.UInt, target:OpenGL.Enum, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTextureImage2DMultisampleCoverageNV = unsafeBitCast(OpenGL.getfp("glTextureImage2DMultisampleCoverageNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTextureImage2DMultisampleCoverageNV))
    OpenGL.glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
fileprivate 
func _load_glTextureImage2DMultisampleNV(texture:OpenGL.UInt, target:OpenGL.Enum, samples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTextureImage2DMultisampleNV = unsafeBitCast(OpenGL.getfp("glTextureImage2DMultisampleNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTextureImage2DMultisampleNV))
    OpenGL.glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations)
}
fileprivate 
func _load_glTextureImage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, internalformat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, border:OpenGL.Int, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureImage3DEXT = unsafeBitCast(OpenGL.getfp("glTextureImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureImage3DEXT))
    OpenGL.glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
fileprivate 
func _load_glTextureImage3DMultisampleCoverageNV(texture:OpenGL.UInt, target:OpenGL.Enum, coverageSamples:OpenGL.Size, colorSamples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTextureImage3DMultisampleCoverageNV = unsafeBitCast(OpenGL.getfp("glTextureImage3DMultisampleCoverageNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTextureImage3DMultisampleCoverageNV))
    OpenGL.glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
fileprivate 
func _load_glTextureImage3DMultisampleNV(texture:OpenGL.UInt, target:OpenGL.Enum, samples:OpenGL.Size, internalFormat:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedSampleLocations:OpenGL.Bool)
{
    OpenGL.glTextureImage3DMultisampleNV = unsafeBitCast(OpenGL.getfp("glTextureImage3DMultisampleNV", support: [OpenGL.ss272]), to: Swift.type(of: OpenGL.glTextureImage3DMultisampleNV))
    OpenGL.glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
}
fileprivate 
func _load_glTextureLightEXT(pname:OpenGL.Enum)
{
    OpenGL.glTextureLightEXT = unsafeBitCast(OpenGL.getfp("glTextureLightEXT", support: [OpenGL.ss164]), to: Swift.type(of: OpenGL.glTextureLightEXT))
    OpenGL.glTextureLightEXT(pname)
}
fileprivate 
func _load_glTextureMaterialEXT(face:OpenGL.Enum, mode:OpenGL.Enum)
{
    OpenGL.glTextureMaterialEXT = unsafeBitCast(OpenGL.getfp("glTextureMaterialEXT", support: [OpenGL.ss164]), to: Swift.type(of: OpenGL.glTextureMaterialEXT))
    OpenGL.glTextureMaterialEXT(face, mode)
}
fileprivate 
func _load_glTextureNormalEXT(mode:OpenGL.Enum)
{
    OpenGL.glTextureNormalEXT = unsafeBitCast(OpenGL.getfp("glTextureNormalEXT", support: [OpenGL.ss197]), to: Swift.type(of: OpenGL.glTextureNormalEXT))
    OpenGL.glTextureNormalEXT(mode)
}
fileprivate 
func _load_glTexturePageCommitmentEXT(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, commit:OpenGL.Bool)
{
    OpenGL.glTexturePageCommitmentEXT = unsafeBitCast(OpenGL.getfp("glTexturePageCommitmentEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTexturePageCommitmentEXT))
    OpenGL.glTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
fileprivate 
func _load_glTextureParameterIiv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTextureParameterIiv = unsafeBitCast(OpenGL.getfp("glTextureParameterIiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameterIiv))
    OpenGL.glTextureParameterIiv(texture, pname, params)
}
fileprivate 
func _load_glTextureParameterIivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTextureParameterIivEXT = unsafeBitCast(OpenGL.getfp("glTextureParameterIivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameterIivEXT))
    OpenGL.glTextureParameterIivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glTextureParameterIuiv(texture:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTextureParameterIuiv = unsafeBitCast(OpenGL.getfp("glTextureParameterIuiv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameterIuiv))
    OpenGL.glTextureParameterIuiv(texture, pname, params)
}
fileprivate 
func _load_glTextureParameterIuivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glTextureParameterIuivEXT = unsafeBitCast(OpenGL.getfp("glTextureParameterIuivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameterIuivEXT))
    OpenGL.glTextureParameterIuivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glTextureParameterf(texture:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTextureParameterf = unsafeBitCast(OpenGL.getfp("glTextureParameterf", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameterf))
    OpenGL.glTextureParameterf(texture, pname, param)
}
fileprivate 
func _load_glTextureParameterfEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glTextureParameterfEXT = unsafeBitCast(OpenGL.getfp("glTextureParameterfEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameterfEXT))
    OpenGL.glTextureParameterfEXT(texture, target, pname, param)
}
fileprivate 
func _load_glTextureParameterfv(texture:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTextureParameterfv = unsafeBitCast(OpenGL.getfp("glTextureParameterfv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameterfv))
    OpenGL.glTextureParameterfv(texture, pname, param)
}
fileprivate 
func _load_glTextureParameterfvEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTextureParameterfvEXT = unsafeBitCast(OpenGL.getfp("glTextureParameterfvEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameterfvEXT))
    OpenGL.glTextureParameterfvEXT(texture, target, pname, params)
}
fileprivate 
func _load_glTextureParameteri(texture:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTextureParameteri = unsafeBitCast(OpenGL.getfp("glTextureParameteri", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameteri))
    OpenGL.glTextureParameteri(texture, pname, param)
}
fileprivate 
func _load_glTextureParameteriEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glTextureParameteriEXT = unsafeBitCast(OpenGL.getfp("glTextureParameteriEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameteriEXT))
    OpenGL.glTextureParameteriEXT(texture, target, pname, param)
}
fileprivate 
func _load_glTextureParameteriv(texture:OpenGL.UInt, pname:OpenGL.Enum, param:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTextureParameteriv = unsafeBitCast(OpenGL.getfp("glTextureParameteriv", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureParameteriv))
    OpenGL.glTextureParameteriv(texture, pname, param)
}
fileprivate 
func _load_glTextureParameterivEXT(texture:OpenGL.UInt, target:OpenGL.Enum, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glTextureParameterivEXT = unsafeBitCast(OpenGL.getfp("glTextureParameterivEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureParameterivEXT))
    OpenGL.glTextureParameterivEXT(texture, target, pname, params)
}
fileprivate 
func _load_glTextureRangeAPPLE(target:OpenGL.Enum, length:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glTextureRangeAPPLE = unsafeBitCast(OpenGL.getfp("glTextureRangeAPPLE", support: [OpenGL.ss24]), to: Swift.type(of: OpenGL.glTextureRangeAPPLE))
    OpenGL.glTextureRangeAPPLE(target, length, pointer)
}
fileprivate 
func _load_glTextureRenderbufferEXT(texture:OpenGL.UInt, target:OpenGL.Enum, renderbuffer:OpenGL.UInt)
{
    OpenGL.glTextureRenderbufferEXT = unsafeBitCast(OpenGL.getfp("glTextureRenderbufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureRenderbufferEXT))
    OpenGL.glTextureRenderbufferEXT(texture, target, renderbuffer)
}
fileprivate 
func _load_glTextureStorage1D(texture:OpenGL.UInt, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size)
{
    OpenGL.glTextureStorage1D = unsafeBitCast(OpenGL.getfp("glTextureStorage1D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureStorage1D))
    OpenGL.glTextureStorage1D(texture, levels, internalformat, width)
}
fileprivate 
func _load_glTextureStorage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size)
{
    OpenGL.glTextureStorage1DEXT = unsafeBitCast(OpenGL.getfp("glTextureStorage1DEXT", support: [OpenGL.ss143, OpenGL.ss198]), to: Swift.type(of: OpenGL.glTextureStorage1DEXT))
    OpenGL.glTextureStorage1DEXT(texture, target, levels, internalformat, width)
}
fileprivate 
func _load_glTextureStorage2D(texture:OpenGL.UInt, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glTextureStorage2D = unsafeBitCast(OpenGL.getfp("glTextureStorage2D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureStorage2D))
    OpenGL.glTextureStorage2D(texture, levels, internalformat, width, height)
}
fileprivate 
func _load_glTextureStorage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glTextureStorage2DEXT = unsafeBitCast(OpenGL.getfp("glTextureStorage2DEXT", support: [OpenGL.ss143, OpenGL.ss198]), to: Swift.type(of: OpenGL.glTextureStorage2DEXT))
    OpenGL.glTextureStorage2DEXT(texture, target, levels, internalformat, width, height)
}
fileprivate 
func _load_glTextureStorage2DMultisample(texture:OpenGL.UInt, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTextureStorage2DMultisample = unsafeBitCast(OpenGL.getfp("glTextureStorage2DMultisample", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureStorage2DMultisample))
    OpenGL.glTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations)
}
fileprivate 
func _load_glTextureStorage2DMultisampleEXT(texture:OpenGL.UInt, target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTextureStorage2DMultisampleEXT = unsafeBitCast(OpenGL.getfp("glTextureStorage2DMultisampleEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureStorage2DMultisampleEXT))
    OpenGL.glTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations)
}
fileprivate 
func _load_glTextureStorage3D(texture:OpenGL.UInt, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glTextureStorage3D = unsafeBitCast(OpenGL.getfp("glTextureStorage3D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureStorage3D))
    OpenGL.glTextureStorage3D(texture, levels, internalformat, width, height, depth)
}
fileprivate 
func _load_glTextureStorage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, levels:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size)
{
    OpenGL.glTextureStorage3DEXT = unsafeBitCast(OpenGL.getfp("glTextureStorage3DEXT", support: [OpenGL.ss143, OpenGL.ss198]), to: Swift.type(of: OpenGL.glTextureStorage3DEXT))
    OpenGL.glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth)
}
fileprivate 
func _load_glTextureStorage3DMultisample(texture:OpenGL.UInt, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTextureStorage3DMultisample = unsafeBitCast(OpenGL.getfp("glTextureStorage3DMultisample", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureStorage3DMultisample))
    OpenGL.glTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations)
}
fileprivate 
func _load_glTextureStorage3DMultisampleEXT(texture:OpenGL.UInt, target:OpenGL.Enum, samples:OpenGL.Size, internalformat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, fixedsamplelocations:OpenGL.Bool)
{
    OpenGL.glTextureStorage3DMultisampleEXT = unsafeBitCast(OpenGL.getfp("glTextureStorage3DMultisampleEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureStorage3DMultisampleEXT))
    OpenGL.glTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
fileprivate 
func _load_glTextureStorageSparseAMD(texture:OpenGL.UInt, target:OpenGL.Enum, internalFormat:OpenGL.Enum, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, layers:OpenGL.Size, flags:OpenGL.Bitfield)
{
    OpenGL.glTextureStorageSparseAMD = unsafeBitCast(OpenGL.getfp("glTextureStorageSparseAMD", support: [OpenGL.ss10]), to: Swift.type(of: OpenGL.glTextureStorageSparseAMD))
    OpenGL.glTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags)
}
fileprivate 
func _load_glTextureSubImage1D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage1D = unsafeBitCast(OpenGL.getfp("glTextureSubImage1D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureSubImage1D))
    OpenGL.glTextureSubImage1D(texture, level, xoffset, width, format, type, pixels)
}
fileprivate 
func _load_glTextureSubImage1DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, width:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage1DEXT = unsafeBitCast(OpenGL.getfp("glTextureSubImage1DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureSubImage1DEXT))
    OpenGL.glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels)
}
fileprivate 
func _load_glTextureSubImage2D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage2D = unsafeBitCast(OpenGL.getfp("glTextureSubImage2D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureSubImage2D))
    OpenGL.glTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels)
}
fileprivate 
func _load_glTextureSubImage2DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage2DEXT = unsafeBitCast(OpenGL.getfp("glTextureSubImage2DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureSubImage2DEXT))
    OpenGL.glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
fileprivate 
func _load_glTextureSubImage3D(texture:OpenGL.UInt, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage3D = unsafeBitCast(OpenGL.getfp("glTextureSubImage3D", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTextureSubImage3D))
    OpenGL.glTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glTextureSubImage3DEXT(texture:OpenGL.UInt, target:OpenGL.Enum, level:OpenGL.Int, xoffset:OpenGL.Int, yoffset:OpenGL.Int, zoffset:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size, depth:OpenGL.Size, format:OpenGL.Enum, type:OpenGL.Enum, pixels:UnsafeRawPointer?)
{
    OpenGL.glTextureSubImage3DEXT = unsafeBitCast(OpenGL.getfp("glTextureSubImage3DEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glTextureSubImage3DEXT))
    OpenGL.glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
fileprivate 
func _load_glTextureView(texture:OpenGL.UInt, target:OpenGL.Enum, origtexture:OpenGL.UInt, internalformat:OpenGL.Enum, minlevel:OpenGL.UInt, numlevels:OpenGL.UInt, minlayer:OpenGL.UInt, numlayers:OpenGL.UInt)
{
    OpenGL.glTextureView = unsafeBitCast(OpenGL.getfp("glTextureView", support: [OpenGL.ss361, OpenGL.ss98]), to: Swift.type(of: OpenGL.glTextureView))
    OpenGL.glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
fileprivate 
func _load_glTextureViewEXT(texture:OpenGL.UInt, target:OpenGL.Enum, origtexture:OpenGL.UInt, internalformat:OpenGL.Enum, minlevel:OpenGL.UInt, numlevels:OpenGL.UInt, minlayer:OpenGL.UInt, numlayers:OpenGL.UInt)
{
    OpenGL.glTextureViewEXT = unsafeBitCast(OpenGL.getfp("glTextureViewEXT", support: [OpenGL.ss199]), to: Swift.type(of: OpenGL.glTextureViewEXT))
    OpenGL.glTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
fileprivate 
func _load_glTextureViewOES(texture:OpenGL.UInt, target:OpenGL.Enum, origtexture:OpenGL.UInt, internalformat:OpenGL.Enum, minlevel:OpenGL.UInt, numlevels:OpenGL.UInt, minlayer:OpenGL.UInt, numlayers:OpenGL.UInt)
{
    OpenGL.glTextureViewOES = unsafeBitCast(OpenGL.getfp("glTextureViewOES", support: [OpenGL.ss309]), to: Swift.type(of: OpenGL.glTextureViewOES))
    OpenGL.glTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
fileprivate 
func _load_glTrackMatrixNV(target:OpenGL.Enum, address:OpenGL.UInt, matrix:OpenGL.Enum, transform:OpenGL.Enum)
{
    OpenGL.glTrackMatrixNV = unsafeBitCast(OpenGL.getfp("glTrackMatrixNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glTrackMatrixNV))
    OpenGL.glTrackMatrixNV(target, address, matrix, transform)
}
fileprivate 
func _load_glTransformFeedbackAttribsNV(count:OpenGL.Size, attribs:UnsafePointer<OpenGL.Int>?, bufferMode:OpenGL.Enum)
{
    OpenGL.glTransformFeedbackAttribsNV = unsafeBitCast(OpenGL.getfp("glTransformFeedbackAttribsNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glTransformFeedbackAttribsNV))
    OpenGL.glTransformFeedbackAttribsNV(count, attribs, bufferMode)
}
fileprivate 
func _load_glTransformFeedbackBufferBase(xfb:OpenGL.UInt, index:OpenGL.UInt, buffer:OpenGL.UInt)
{
    OpenGL.glTransformFeedbackBufferBase = unsafeBitCast(OpenGL.getfp("glTransformFeedbackBufferBase", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTransformFeedbackBufferBase))
    OpenGL.glTransformFeedbackBufferBase(xfb, index, buffer)
}
fileprivate 
func _load_glTransformFeedbackBufferRange(xfb:OpenGL.UInt, index:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, size:OpenGL.SizePointer)
{
    OpenGL.glTransformFeedbackBufferRange = unsafeBitCast(OpenGL.getfp("glTransformFeedbackBufferRange", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glTransformFeedbackBufferRange))
    OpenGL.glTransformFeedbackBufferRange(xfb, index, buffer, offset, size)
}
fileprivate 
func _load_glTransformFeedbackStreamAttribsNV(count:OpenGL.Size, attribs:UnsafePointer<OpenGL.Int>?, nbuffers:OpenGL.Size, bufstreams:UnsafePointer<OpenGL.Int>?, bufferMode:OpenGL.Enum)
{
    OpenGL.glTransformFeedbackStreamAttribsNV = unsafeBitCast(OpenGL.getfp("glTransformFeedbackStreamAttribsNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glTransformFeedbackStreamAttribsNV))
    OpenGL.glTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode)
}
fileprivate 
func _load_glTransformFeedbackVaryings(program:OpenGL.UInt, count:OpenGL.Size, varyings:UnsafePointer<UnsafePointer<OpenGL.Char>?>?, bufferMode:OpenGL.Enum)
{
    OpenGL.glTransformFeedbackVaryings = unsafeBitCast(OpenGL.getfp("glTransformFeedbackVaryings", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glTransformFeedbackVaryings))
    OpenGL.glTransformFeedbackVaryings(program, count, varyings, bufferMode)
}
fileprivate 
func _load_glTransformFeedbackVaryingsEXT(program:OpenGL.UInt, count:OpenGL.Size, varyings:UnsafePointer<UnsafePointer<OpenGL.Char>?>?, bufferMode:OpenGL.Enum)
{
    OpenGL.glTransformFeedbackVaryingsEXT = unsafeBitCast(OpenGL.getfp("glTransformFeedbackVaryingsEXT", support: [OpenGL.ss201]), to: Swift.type(of: OpenGL.glTransformFeedbackVaryingsEXT))
    OpenGL.glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode)
}
fileprivate 
func _load_glTransformFeedbackVaryingsNV(program:OpenGL.UInt, count:OpenGL.Size, locations:UnsafePointer<OpenGL.Int>?, bufferMode:OpenGL.Enum)
{
    OpenGL.glTransformFeedbackVaryingsNV = unsafeBitCast(OpenGL.getfp("glTransformFeedbackVaryingsNV", support: [OpenGL.ss273]), to: Swift.type(of: OpenGL.glTransformFeedbackVaryingsNV))
    OpenGL.glTransformFeedbackVaryingsNV(program, count, locations, bufferMode)
}
fileprivate 
func _load_glTransformPathNV(resultPath:OpenGL.UInt, srcPath:OpenGL.UInt, transformType:OpenGL.Enum, transformValues:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glTransformPathNV = unsafeBitCast(OpenGL.getfp("glTransformPathNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glTransformPathNV))
    OpenGL.glTransformPathNV(resultPath, srcPath, transformType, transformValues)
}
fileprivate 
func _load_glTranslated(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glTranslated = unsafeBitCast(OpenGL.getfp("glTranslated", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glTranslated))
    OpenGL.glTranslated(x, y, z)
}
fileprivate 
func _load_glTranslatef(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glTranslatef = unsafeBitCast(OpenGL.getfp("glTranslatef", support: [OpenGL.ss346, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glTranslatef))
    OpenGL.glTranslatef(x, y, z)
}
fileprivate 
func _load_glTranslatex(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glTranslatex = unsafeBitCast(OpenGL.getfp("glTranslatex", support: [OpenGL.ss364]), to: Swift.type(of: OpenGL.glTranslatex))
    OpenGL.glTranslatex(x, y, z)
}
fileprivate 
func _load_glTranslatexOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glTranslatexOES = unsafeBitCast(OpenGL.getfp("glTranslatexOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glTranslatexOES))
    OpenGL.glTranslatexOES(x, y, z)
}
fileprivate 
func _load_glUniform1d(location:OpenGL.Int, x:OpenGL.Double)
{
    OpenGL.glUniform1d = unsafeBitCast(OpenGL.getfp("glUniform1d", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform1d))
    OpenGL.glUniform1d(location, x)
}
fileprivate 
func _load_glUniform1dv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniform1dv = unsafeBitCast(OpenGL.getfp("glUniform1dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform1dv))
    OpenGL.glUniform1dv(location, count, value)
}
fileprivate 
func _load_glUniform1f(location:OpenGL.Int, v0:OpenGL.Float)
{
    OpenGL.glUniform1f = unsafeBitCast(OpenGL.getfp("glUniform1f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform1f))
    OpenGL.glUniform1f(location, v0)
}
fileprivate 
func _load_glUniform1fARB(location:OpenGL.Int, v0:OpenGL.Float)
{
    OpenGL.glUniform1fARB = unsafeBitCast(OpenGL.getfp("glUniform1fARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform1fARB))
    OpenGL.glUniform1fARB(location, v0)
}
fileprivate 
func _load_glUniform1fv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform1fv = unsafeBitCast(OpenGL.getfp("glUniform1fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform1fv))
    OpenGL.glUniform1fv(location, count, value)
}
fileprivate 
func _load_glUniform1fvARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform1fvARB = unsafeBitCast(OpenGL.getfp("glUniform1fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform1fvARB))
    OpenGL.glUniform1fvARB(location, count, value)
}
fileprivate 
func _load_glUniform1i(location:OpenGL.Int, v0:OpenGL.Int)
{
    OpenGL.glUniform1i = unsafeBitCast(OpenGL.getfp("glUniform1i", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform1i))
    OpenGL.glUniform1i(location, v0)
}
fileprivate 
func _load_glUniform1i64ARB(location:OpenGL.Int, x:OpenGL.Int64)
{
    OpenGL.glUniform1i64ARB = unsafeBitCast(OpenGL.getfp("glUniform1i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform1i64ARB))
    OpenGL.glUniform1i64ARB(location, x)
}
fileprivate 
func _load_glUniform1i64NV(location:OpenGL.Int, x:OpenGL.Int64EXT)
{
    OpenGL.glUniform1i64NV = unsafeBitCast(OpenGL.getfp("glUniform1i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform1i64NV))
    OpenGL.glUniform1i64NV(location, x)
}
fileprivate 
func _load_glUniform1i64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glUniform1i64vARB = unsafeBitCast(OpenGL.getfp("glUniform1i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform1i64vARB))
    OpenGL.glUniform1i64vARB(location, count, value)
}
fileprivate 
func _load_glUniform1i64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glUniform1i64vNV = unsafeBitCast(OpenGL.getfp("glUniform1i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform1i64vNV))
    OpenGL.glUniform1i64vNV(location, count, value)
}
fileprivate 
func _load_glUniform1iARB(location:OpenGL.Int, v0:OpenGL.Int)
{
    OpenGL.glUniform1iARB = unsafeBitCast(OpenGL.getfp("glUniform1iARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform1iARB))
    OpenGL.glUniform1iARB(location, v0)
}
fileprivate 
func _load_glUniform1iv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform1iv = unsafeBitCast(OpenGL.getfp("glUniform1iv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform1iv))
    OpenGL.glUniform1iv(location, count, value)
}
fileprivate 
func _load_glUniform1ivARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform1ivARB = unsafeBitCast(OpenGL.getfp("glUniform1ivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform1ivARB))
    OpenGL.glUniform1ivARB(location, count, value)
}
fileprivate 
func _load_glUniform1ui(location:OpenGL.Int, v0:OpenGL.UInt)
{
    OpenGL.glUniform1ui = unsafeBitCast(OpenGL.getfp("glUniform1ui", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform1ui))
    OpenGL.glUniform1ui(location, v0)
}
fileprivate 
func _load_glUniform1ui64ARB(location:OpenGL.Int, x:OpenGL.UInt64)
{
    OpenGL.glUniform1ui64ARB = unsafeBitCast(OpenGL.getfp("glUniform1ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform1ui64ARB))
    OpenGL.glUniform1ui64ARB(location, x)
}
fileprivate 
func _load_glUniform1ui64NV(location:OpenGL.Int, x:OpenGL.UInt64EXT)
{
    OpenGL.glUniform1ui64NV = unsafeBitCast(OpenGL.getfp("glUniform1ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform1ui64NV))
    OpenGL.glUniform1ui64NV(location, x)
}
fileprivate 
func _load_glUniform1ui64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniform1ui64vARB = unsafeBitCast(OpenGL.getfp("glUniform1ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform1ui64vARB))
    OpenGL.glUniform1ui64vARB(location, count, value)
}
fileprivate 
func _load_glUniform1ui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glUniform1ui64vNV = unsafeBitCast(OpenGL.getfp("glUniform1ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform1ui64vNV))
    OpenGL.glUniform1ui64vNV(location, count, value)
}
fileprivate 
func _load_glUniform1uiEXT(location:OpenGL.Int, v0:OpenGL.UInt)
{
    OpenGL.glUniform1uiEXT = unsafeBitCast(OpenGL.getfp("glUniform1uiEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform1uiEXT))
    OpenGL.glUniform1uiEXT(location, v0)
}
fileprivate 
func _load_glUniform1uiv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform1uiv = unsafeBitCast(OpenGL.getfp("glUniform1uiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform1uiv))
    OpenGL.glUniform1uiv(location, count, value)
}
fileprivate 
func _load_glUniform1uivEXT(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform1uivEXT = unsafeBitCast(OpenGL.getfp("glUniform1uivEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform1uivEXT))
    OpenGL.glUniform1uivEXT(location, count, value)
}
fileprivate 
func _load_glUniform2d(location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glUniform2d = unsafeBitCast(OpenGL.getfp("glUniform2d", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform2d))
    OpenGL.glUniform2d(location, x, y)
}
fileprivate 
func _load_glUniform2dv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniform2dv = unsafeBitCast(OpenGL.getfp("glUniform2dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform2dv))
    OpenGL.glUniform2dv(location, count, value)
}
fileprivate 
func _load_glUniform2f(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float)
{
    OpenGL.glUniform2f = unsafeBitCast(OpenGL.getfp("glUniform2f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform2f))
    OpenGL.glUniform2f(location, v0, v1)
}
fileprivate 
func _load_glUniform2fARB(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float)
{
    OpenGL.glUniform2fARB = unsafeBitCast(OpenGL.getfp("glUniform2fARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform2fARB))
    OpenGL.glUniform2fARB(location, v0, v1)
}
fileprivate 
func _load_glUniform2fv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform2fv = unsafeBitCast(OpenGL.getfp("glUniform2fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform2fv))
    OpenGL.glUniform2fv(location, count, value)
}
fileprivate 
func _load_glUniform2fvARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform2fvARB = unsafeBitCast(OpenGL.getfp("glUniform2fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform2fvARB))
    OpenGL.glUniform2fvARB(location, count, value)
}
fileprivate 
func _load_glUniform2i(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int)
{
    OpenGL.glUniform2i = unsafeBitCast(OpenGL.getfp("glUniform2i", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform2i))
    OpenGL.glUniform2i(location, v0, v1)
}
fileprivate 
func _load_glUniform2i64ARB(location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64)
{
    OpenGL.glUniform2i64ARB = unsafeBitCast(OpenGL.getfp("glUniform2i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform2i64ARB))
    OpenGL.glUniform2i64ARB(location, x, y)
}
fileprivate 
func _load_glUniform2i64NV(location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT)
{
    OpenGL.glUniform2i64NV = unsafeBitCast(OpenGL.getfp("glUniform2i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform2i64NV))
    OpenGL.glUniform2i64NV(location, x, y)
}
fileprivate 
func _load_glUniform2i64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glUniform2i64vARB = unsafeBitCast(OpenGL.getfp("glUniform2i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform2i64vARB))
    OpenGL.glUniform2i64vARB(location, count, value)
}
fileprivate 
func _load_glUniform2i64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glUniform2i64vNV = unsafeBitCast(OpenGL.getfp("glUniform2i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform2i64vNV))
    OpenGL.glUniform2i64vNV(location, count, value)
}
fileprivate 
func _load_glUniform2iARB(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int)
{
    OpenGL.glUniform2iARB = unsafeBitCast(OpenGL.getfp("glUniform2iARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform2iARB))
    OpenGL.glUniform2iARB(location, v0, v1)
}
fileprivate 
func _load_glUniform2iv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform2iv = unsafeBitCast(OpenGL.getfp("glUniform2iv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform2iv))
    OpenGL.glUniform2iv(location, count, value)
}
fileprivate 
func _load_glUniform2ivARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform2ivARB = unsafeBitCast(OpenGL.getfp("glUniform2ivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform2ivARB))
    OpenGL.glUniform2ivARB(location, count, value)
}
fileprivate 
func _load_glUniform2ui(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt)
{
    OpenGL.glUniform2ui = unsafeBitCast(OpenGL.getfp("glUniform2ui", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform2ui))
    OpenGL.glUniform2ui(location, v0, v1)
}
fileprivate 
func _load_glUniform2ui64ARB(location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64)
{
    OpenGL.glUniform2ui64ARB = unsafeBitCast(OpenGL.getfp("glUniform2ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform2ui64ARB))
    OpenGL.glUniform2ui64ARB(location, x, y)
}
fileprivate 
func _load_glUniform2ui64NV(location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT)
{
    OpenGL.glUniform2ui64NV = unsafeBitCast(OpenGL.getfp("glUniform2ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform2ui64NV))
    OpenGL.glUniform2ui64NV(location, x, y)
}
fileprivate 
func _load_glUniform2ui64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniform2ui64vARB = unsafeBitCast(OpenGL.getfp("glUniform2ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform2ui64vARB))
    OpenGL.glUniform2ui64vARB(location, count, value)
}
fileprivate 
func _load_glUniform2ui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glUniform2ui64vNV = unsafeBitCast(OpenGL.getfp("glUniform2ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform2ui64vNV))
    OpenGL.glUniform2ui64vNV(location, count, value)
}
fileprivate 
func _load_glUniform2uiEXT(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt)
{
    OpenGL.glUniform2uiEXT = unsafeBitCast(OpenGL.getfp("glUniform2uiEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform2uiEXT))
    OpenGL.glUniform2uiEXT(location, v0, v1)
}
fileprivate 
func _load_glUniform2uiv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform2uiv = unsafeBitCast(OpenGL.getfp("glUniform2uiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform2uiv))
    OpenGL.glUniform2uiv(location, count, value)
}
fileprivate 
func _load_glUniform2uivEXT(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform2uivEXT = unsafeBitCast(OpenGL.getfp("glUniform2uivEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform2uivEXT))
    OpenGL.glUniform2uivEXT(location, count, value)
}
fileprivate 
func _load_glUniform3d(location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glUniform3d = unsafeBitCast(OpenGL.getfp("glUniform3d", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform3d))
    OpenGL.glUniform3d(location, x, y, z)
}
fileprivate 
func _load_glUniform3dv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniform3dv = unsafeBitCast(OpenGL.getfp("glUniform3dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform3dv))
    OpenGL.glUniform3dv(location, count, value)
}
fileprivate 
func _load_glUniform3f(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float)
{
    OpenGL.glUniform3f = unsafeBitCast(OpenGL.getfp("glUniform3f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform3f))
    OpenGL.glUniform3f(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3fARB(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float)
{
    OpenGL.glUniform3fARB = unsafeBitCast(OpenGL.getfp("glUniform3fARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform3fARB))
    OpenGL.glUniform3fARB(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3fv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform3fv = unsafeBitCast(OpenGL.getfp("glUniform3fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform3fv))
    OpenGL.glUniform3fv(location, count, value)
}
fileprivate 
func _load_glUniform3fvARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform3fvARB = unsafeBitCast(OpenGL.getfp("glUniform3fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform3fvARB))
    OpenGL.glUniform3fvARB(location, count, value)
}
fileprivate 
func _load_glUniform3i(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int)
{
    OpenGL.glUniform3i = unsafeBitCast(OpenGL.getfp("glUniform3i", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform3i))
    OpenGL.glUniform3i(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3i64ARB(location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64, z:OpenGL.Int64)
{
    OpenGL.glUniform3i64ARB = unsafeBitCast(OpenGL.getfp("glUniform3i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform3i64ARB))
    OpenGL.glUniform3i64ARB(location, x, y, z)
}
fileprivate 
func _load_glUniform3i64NV(location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT)
{
    OpenGL.glUniform3i64NV = unsafeBitCast(OpenGL.getfp("glUniform3i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform3i64NV))
    OpenGL.glUniform3i64NV(location, x, y, z)
}
fileprivate 
func _load_glUniform3i64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glUniform3i64vARB = unsafeBitCast(OpenGL.getfp("glUniform3i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform3i64vARB))
    OpenGL.glUniform3i64vARB(location, count, value)
}
fileprivate 
func _load_glUniform3i64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glUniform3i64vNV = unsafeBitCast(OpenGL.getfp("glUniform3i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform3i64vNV))
    OpenGL.glUniform3i64vNV(location, count, value)
}
fileprivate 
func _load_glUniform3iARB(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int)
{
    OpenGL.glUniform3iARB = unsafeBitCast(OpenGL.getfp("glUniform3iARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform3iARB))
    OpenGL.glUniform3iARB(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3iv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform3iv = unsafeBitCast(OpenGL.getfp("glUniform3iv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform3iv))
    OpenGL.glUniform3iv(location, count, value)
}
fileprivate 
func _load_glUniform3ivARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform3ivARB = unsafeBitCast(OpenGL.getfp("glUniform3ivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform3ivARB))
    OpenGL.glUniform3ivARB(location, count, value)
}
fileprivate 
func _load_glUniform3ui(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt)
{
    OpenGL.glUniform3ui = unsafeBitCast(OpenGL.getfp("glUniform3ui", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform3ui))
    OpenGL.glUniform3ui(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3ui64ARB(location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64, z:OpenGL.UInt64)
{
    OpenGL.glUniform3ui64ARB = unsafeBitCast(OpenGL.getfp("glUniform3ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform3ui64ARB))
    OpenGL.glUniform3ui64ARB(location, x, y, z)
}
fileprivate 
func _load_glUniform3ui64NV(location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT)
{
    OpenGL.glUniform3ui64NV = unsafeBitCast(OpenGL.getfp("glUniform3ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform3ui64NV))
    OpenGL.glUniform3ui64NV(location, x, y, z)
}
fileprivate 
func _load_glUniform3ui64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniform3ui64vARB = unsafeBitCast(OpenGL.getfp("glUniform3ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform3ui64vARB))
    OpenGL.glUniform3ui64vARB(location, count, value)
}
fileprivate 
func _load_glUniform3ui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glUniform3ui64vNV = unsafeBitCast(OpenGL.getfp("glUniform3ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform3ui64vNV))
    OpenGL.glUniform3ui64vNV(location, count, value)
}
fileprivate 
func _load_glUniform3uiEXT(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt)
{
    OpenGL.glUniform3uiEXT = unsafeBitCast(OpenGL.getfp("glUniform3uiEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform3uiEXT))
    OpenGL.glUniform3uiEXT(location, v0, v1, v2)
}
fileprivate 
func _load_glUniform3uiv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform3uiv = unsafeBitCast(OpenGL.getfp("glUniform3uiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform3uiv))
    OpenGL.glUniform3uiv(location, count, value)
}
fileprivate 
func _load_glUniform3uivEXT(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform3uivEXT = unsafeBitCast(OpenGL.getfp("glUniform3uivEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform3uivEXT))
    OpenGL.glUniform3uivEXT(location, count, value)
}
fileprivate 
func _load_glUniform4d(location:OpenGL.Int, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glUniform4d = unsafeBitCast(OpenGL.getfp("glUniform4d", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform4d))
    OpenGL.glUniform4d(location, x, y, z, w)
}
fileprivate 
func _load_glUniform4dv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniform4dv = unsafeBitCast(OpenGL.getfp("glUniform4dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniform4dv))
    OpenGL.glUniform4dv(location, count, value)
}
fileprivate 
func _load_glUniform4f(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float, v3:OpenGL.Float)
{
    OpenGL.glUniform4f = unsafeBitCast(OpenGL.getfp("glUniform4f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform4f))
    OpenGL.glUniform4f(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4fARB(location:OpenGL.Int, v0:OpenGL.Float, v1:OpenGL.Float, v2:OpenGL.Float, v3:OpenGL.Float)
{
    OpenGL.glUniform4fARB = unsafeBitCast(OpenGL.getfp("glUniform4fARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform4fARB))
    OpenGL.glUniform4fARB(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4fv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform4fv = unsafeBitCast(OpenGL.getfp("glUniform4fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform4fv))
    OpenGL.glUniform4fv(location, count, value)
}
fileprivate 
func _load_glUniform4fvARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniform4fvARB = unsafeBitCast(OpenGL.getfp("glUniform4fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform4fvARB))
    OpenGL.glUniform4fvARB(location, count, value)
}
fileprivate 
func _load_glUniform4i(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int, v3:OpenGL.Int)
{
    OpenGL.glUniform4i = unsafeBitCast(OpenGL.getfp("glUniform4i", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform4i))
    OpenGL.glUniform4i(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4i64ARB(location:OpenGL.Int, x:OpenGL.Int64, y:OpenGL.Int64, z:OpenGL.Int64, w:OpenGL.Int64)
{
    OpenGL.glUniform4i64ARB = unsafeBitCast(OpenGL.getfp("glUniform4i64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform4i64ARB))
    OpenGL.glUniform4i64ARB(location, x, y, z, w)
}
fileprivate 
func _load_glUniform4i64NV(location:OpenGL.Int, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT, w:OpenGL.Int64EXT)
{
    OpenGL.glUniform4i64NV = unsafeBitCast(OpenGL.getfp("glUniform4i64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform4i64NV))
    OpenGL.glUniform4i64NV(location, x, y, z, w)
}
fileprivate 
func _load_glUniform4i64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64>?)
{
    OpenGL.glUniform4i64vARB = unsafeBitCast(OpenGL.getfp("glUniform4i64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform4i64vARB))
    OpenGL.glUniform4i64vARB(location, count, value)
}
fileprivate 
func _load_glUniform4i64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glUniform4i64vNV = unsafeBitCast(OpenGL.getfp("glUniform4i64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform4i64vNV))
    OpenGL.glUniform4i64vNV(location, count, value)
}
fileprivate 
func _load_glUniform4iARB(location:OpenGL.Int, v0:OpenGL.Int, v1:OpenGL.Int, v2:OpenGL.Int, v3:OpenGL.Int)
{
    OpenGL.glUniform4iARB = unsafeBitCast(OpenGL.getfp("glUniform4iARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform4iARB))
    OpenGL.glUniform4iARB(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4iv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform4iv = unsafeBitCast(OpenGL.getfp("glUniform4iv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniform4iv))
    OpenGL.glUniform4iv(location, count, value)
}
fileprivate 
func _load_glUniform4ivARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glUniform4ivARB = unsafeBitCast(OpenGL.getfp("glUniform4ivARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniform4ivARB))
    OpenGL.glUniform4ivARB(location, count, value)
}
fileprivate 
func _load_glUniform4ui(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt, v3:OpenGL.UInt)
{
    OpenGL.glUniform4ui = unsafeBitCast(OpenGL.getfp("glUniform4ui", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform4ui))
    OpenGL.glUniform4ui(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4ui64ARB(location:OpenGL.Int, x:OpenGL.UInt64, y:OpenGL.UInt64, z:OpenGL.UInt64, w:OpenGL.UInt64)
{
    OpenGL.glUniform4ui64ARB = unsafeBitCast(OpenGL.getfp("glUniform4ui64ARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform4ui64ARB))
    OpenGL.glUniform4ui64ARB(location, x, y, z, w)
}
fileprivate 
func _load_glUniform4ui64NV(location:OpenGL.Int, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT, w:OpenGL.UInt64EXT)
{
    OpenGL.glUniform4ui64NV = unsafeBitCast(OpenGL.getfp("glUniform4ui64NV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform4ui64NV))
    OpenGL.glUniform4ui64NV(location, x, y, z, w)
}
fileprivate 
func _load_glUniform4ui64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniform4ui64vARB = unsafeBitCast(OpenGL.getfp("glUniform4ui64vARB", support: [OpenGL.ss58]), to: Swift.type(of: OpenGL.glUniform4ui64vARB))
    OpenGL.glUniform4ui64vARB(location, count, value)
}
fileprivate 
func _load_glUniform4ui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glUniform4ui64vNV = unsafeBitCast(OpenGL.getfp("glUniform4ui64vNV", support: [OpenGL.ss3, OpenGL.ss253]), to: Swift.type(of: OpenGL.glUniform4ui64vNV))
    OpenGL.glUniform4ui64vNV(location, count, value)
}
fileprivate 
func _load_glUniform4uiEXT(location:OpenGL.Int, v0:OpenGL.UInt, v1:OpenGL.UInt, v2:OpenGL.UInt, v3:OpenGL.UInt)
{
    OpenGL.glUniform4uiEXT = unsafeBitCast(OpenGL.getfp("glUniform4uiEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform4uiEXT))
    OpenGL.glUniform4uiEXT(location, v0, v1, v2, v3)
}
fileprivate 
func _load_glUniform4uiv(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform4uiv = unsafeBitCast(OpenGL.getfp("glUniform4uiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniform4uiv))
    OpenGL.glUniform4uiv(location, count, value)
}
fileprivate 
func _load_glUniform4uivEXT(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniform4uivEXT = unsafeBitCast(OpenGL.getfp("glUniform4uivEXT", support: [OpenGL.ss159]), to: Swift.type(of: OpenGL.glUniform4uivEXT))
    OpenGL.glUniform4uivEXT(location, count, value)
}
fileprivate 
func _load_glUniformBlockBinding(program:OpenGL.UInt, uniformBlockIndex:OpenGL.UInt, uniformBlockBinding:OpenGL.UInt)
{
    OpenGL.glUniformBlockBinding = unsafeBitCast(OpenGL.getfp("glUniformBlockBinding", support: [OpenGL.ss355, OpenGL.ss366, OpenGL.ss104]), to: Swift.type(of: OpenGL.glUniformBlockBinding))
    OpenGL.glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding)
}
fileprivate 
func _load_glUniformBufferEXT(program:OpenGL.UInt, location:OpenGL.Int, buffer:OpenGL.UInt)
{
    OpenGL.glUniformBufferEXT = unsafeBitCast(OpenGL.getfp("glUniformBufferEXT", support: [OpenGL.ss126]), to: Swift.type(of: OpenGL.glUniformBufferEXT))
    OpenGL.glUniformBufferEXT(program, location, buffer)
}
fileprivate 
func _load_glUniformHandleui64ARB(location:OpenGL.Int, value:OpenGL.UInt64)
{
    OpenGL.glUniformHandleui64ARB = unsafeBitCast(OpenGL.getfp("glUniformHandleui64ARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glUniformHandleui64ARB))
    OpenGL.glUniformHandleui64ARB(location, value)
}
fileprivate 
func _load_glUniformHandleui64NV(location:OpenGL.Int, value:OpenGL.UInt64)
{
    OpenGL.glUniformHandleui64NV = unsafeBitCast(OpenGL.getfp("glUniformHandleui64NV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glUniformHandleui64NV))
    OpenGL.glUniformHandleui64NV(location, value)
}
fileprivate 
func _load_glUniformHandleui64vARB(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniformHandleui64vARB = unsafeBitCast(OpenGL.getfp("glUniformHandleui64vARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glUniformHandleui64vARB))
    OpenGL.glUniformHandleui64vARB(location, count, value)
}
fileprivate 
func _load_glUniformHandleui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64>?)
{
    OpenGL.glUniformHandleui64vNV = unsafeBitCast(OpenGL.getfp("glUniformHandleui64vNV", support: [OpenGL.ss228]), to: Swift.type(of: OpenGL.glUniformHandleui64vNV))
    OpenGL.glUniformHandleui64vNV(location, count, value)
}
fileprivate 
func _load_glUniformMatrix2dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix2dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix2dv))
    OpenGL.glUniformMatrix2dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniformMatrix2fv))
    OpenGL.glUniformMatrix2fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2fvARB(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2fvARB = unsafeBitCast(OpenGL.getfp("glUniformMatrix2fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniformMatrix2fvARB))
    OpenGL.glUniformMatrix2fvARB(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x3dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix2x3dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x3dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix2x3dv))
    OpenGL.glUniformMatrix2x3dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x3fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2x3fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x3fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix2x3fv))
    OpenGL.glUniformMatrix2x3fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x3fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2x3fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x3fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix2x3fvNV))
    OpenGL.glUniformMatrix2x3fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x4dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix2x4dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x4dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix2x4dv))
    OpenGL.glUniformMatrix2x4dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x4fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2x4fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x4fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix2x4fv))
    OpenGL.glUniformMatrix2x4fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix2x4fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix2x4fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix2x4fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix2x4fvNV))
    OpenGL.glUniformMatrix2x4fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix3dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix3dv))
    OpenGL.glUniformMatrix3dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniformMatrix3fv))
    OpenGL.glUniformMatrix3fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3fvARB(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3fvARB = unsafeBitCast(OpenGL.getfp("glUniformMatrix3fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniformMatrix3fvARB))
    OpenGL.glUniformMatrix3fvARB(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x2dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix3x2dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x2dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix3x2dv))
    OpenGL.glUniformMatrix3x2dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x2fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3x2fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x2fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix3x2fv))
    OpenGL.glUniformMatrix3x2fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x2fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3x2fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x2fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix3x2fvNV))
    OpenGL.glUniformMatrix3x2fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x4dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix3x4dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x4dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix3x4dv))
    OpenGL.glUniformMatrix3x4dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x4fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3x4fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x4fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix3x4fv))
    OpenGL.glUniformMatrix3x4fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix3x4fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix3x4fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix3x4fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix3x4fvNV))
    OpenGL.glUniformMatrix3x4fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix4dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix4dv))
    OpenGL.glUniformMatrix4dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUniformMatrix4fv))
    OpenGL.glUniformMatrix4fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4fvARB(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4fvARB = unsafeBitCast(OpenGL.getfp("glUniformMatrix4fvARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUniformMatrix4fvARB))
    OpenGL.glUniformMatrix4fvARB(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x2dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix4x2dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x2dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix4x2dv))
    OpenGL.glUniformMatrix4x2dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x2fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4x2fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x2fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix4x2fv))
    OpenGL.glUniformMatrix4x2fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x2fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4x2fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x2fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix4x2fvNV))
    OpenGL.glUniformMatrix4x2fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x3dv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glUniformMatrix4x3dv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x3dv", support: [OpenGL.ss358, OpenGL.ss57]), to: Swift.type(of: OpenGL.glUniformMatrix4x3dv))
    OpenGL.glUniformMatrix4x3dv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x3fv(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4x3fv = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x3fv", support: [OpenGL.ss353, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUniformMatrix4x3fv))
    OpenGL.glUniformMatrix4x3fv(location, count, transpose, value)
}
fileprivate 
func _load_glUniformMatrix4x3fvNV(location:OpenGL.Int, count:OpenGL.Size, transpose:OpenGL.Bool, value:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glUniformMatrix4x3fvNV = unsafeBitCast(OpenGL.getfp("glUniformMatrix4x3fvNV", support: [OpenGL.ss257]), to: Swift.type(of: OpenGL.glUniformMatrix4x3fvNV))
    OpenGL.glUniformMatrix4x3fvNV(location, count, transpose, value)
}
fileprivate 
func _load_glUniformSubroutinesuiv(shadertype:OpenGL.Enum, count:OpenGL.Size, indices:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glUniformSubroutinesuiv = unsafeBitCast(OpenGL.getfp("glUniformSubroutinesuiv", support: [OpenGL.ss358, OpenGL.ss85]), to: Swift.type(of: OpenGL.glUniformSubroutinesuiv))
    OpenGL.glUniformSubroutinesuiv(shadertype, count, indices)
}
fileprivate 
func _load_glUniformui64NV(location:OpenGL.Int, value:OpenGL.UInt64EXT)
{
    OpenGL.glUniformui64NV = unsafeBitCast(OpenGL.getfp("glUniformui64NV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glUniformui64NV))
    OpenGL.glUniformui64NV(location, value)
}
fileprivate 
func _load_glUniformui64vNV(location:OpenGL.Int, count:OpenGL.Size, value:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glUniformui64vNV = unsafeBitCast(OpenGL.getfp("glUniformui64vNV", support: [OpenGL.ss270]), to: Swift.type(of: OpenGL.glUniformui64vNV))
    OpenGL.glUniformui64vNV(location, count, value)
}
fileprivate 
func _load_glUnlockArraysEXT()
{
    OpenGL.glUnlockArraysEXT = unsafeBitCast(OpenGL.getfp("glUnlockArraysEXT", support: [OpenGL.ss134]), to: Swift.type(of: OpenGL.glUnlockArraysEXT))
    OpenGL.glUnlockArraysEXT()
}
fileprivate 
func _load_glUnmapBuffer(target:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glUnmapBuffer = unsafeBitCast(OpenGL.getfp("glUnmapBuffer", support: [OpenGL.ss351, OpenGL.ss366]), to: Swift.type(of: OpenGL.glUnmapBuffer))
    return OpenGL.glUnmapBuffer(target)
}
fileprivate 
func _load_glUnmapBufferARB(target:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glUnmapBufferARB = unsafeBitCast(OpenGL.getfp("glUnmapBufferARB", support: [OpenGL.ss109]), to: Swift.type(of: OpenGL.glUnmapBufferARB))
    return OpenGL.glUnmapBufferARB(target)
}
fileprivate 
func _load_glUnmapBufferOES(target:OpenGL.Enum) -> OpenGL.Bool
{
    OpenGL.glUnmapBufferOES = unsafeBitCast(OpenGL.getfp("glUnmapBufferOES", support: [OpenGL.ss296]), to: Swift.type(of: OpenGL.glUnmapBufferOES))
    return OpenGL.glUnmapBufferOES(target)
}
fileprivate 
func _load_glUnmapNamedBuffer(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glUnmapNamedBuffer = unsafeBitCast(OpenGL.getfp("glUnmapNamedBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glUnmapNamedBuffer))
    return OpenGL.glUnmapNamedBuffer(buffer)
}
fileprivate 
func _load_glUnmapNamedBufferEXT(buffer:OpenGL.UInt) -> OpenGL.Bool
{
    OpenGL.glUnmapNamedBufferEXT = unsafeBitCast(OpenGL.getfp("glUnmapNamedBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glUnmapNamedBufferEXT))
    return OpenGL.glUnmapNamedBufferEXT(buffer)
}
fileprivate 
func _load_glUnmapObjectBufferATI(buffer:OpenGL.UInt)
{
    OpenGL.glUnmapObjectBufferATI = unsafeBitCast(OpenGL.getfp("glUnmapObjectBufferATI", support: [OpenGL.ss119]), to: Swift.type(of: OpenGL.glUnmapObjectBufferATI))
    OpenGL.glUnmapObjectBufferATI(buffer)
}
fileprivate 
func _load_glUnmapTexture2DINTEL(texture:OpenGL.UInt, level:OpenGL.Int)
{
    OpenGL.glUnmapTexture2DINTEL = unsafeBitCast(OpenGL.getfp("glUnmapTexture2DINTEL", support: [OpenGL.ss217]), to: Swift.type(of: OpenGL.glUnmapTexture2DINTEL))
    OpenGL.glUnmapTexture2DINTEL(texture, level)
}
fileprivate 
func _load_glUpdateObjectBufferATI(buffer:OpenGL.UInt, offset:OpenGL.UInt, size:OpenGL.Size, pointer:UnsafeRawPointer?, preserve:OpenGL.Enum)
{
    OpenGL.glUpdateObjectBufferATI = unsafeBitCast(OpenGL.getfp("glUpdateObjectBufferATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glUpdateObjectBufferATI))
    OpenGL.glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve)
}
fileprivate 
func _load_glUseProgram(program:OpenGL.UInt)
{
    OpenGL.glUseProgram = unsafeBitCast(OpenGL.getfp("glUseProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glUseProgram))
    OpenGL.glUseProgram(program)
}
fileprivate 
func _load_glUseProgramObjectARB(programObj:OpenGL.HandleARB)
{
    OpenGL.glUseProgramObjectARB = unsafeBitCast(OpenGL.getfp("glUseProgramObjectARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glUseProgramObjectARB))
    OpenGL.glUseProgramObjectARB(programObj)
}
fileprivate 
func _load_glUseProgramStages(pipeline:OpenGL.UInt, stages:OpenGL.Bitfield, program:OpenGL.UInt)
{
    OpenGL.glUseProgramStages = unsafeBitCast(OpenGL.getfp("glUseProgramStages", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glUseProgramStages))
    OpenGL.glUseProgramStages(pipeline, stages, program)
}
fileprivate 
func _load_glUseProgramStagesEXT(pipeline:OpenGL.UInt, stages:OpenGL.Bitfield, program:OpenGL.UInt)
{
    OpenGL.glUseProgramStagesEXT = unsafeBitCast(OpenGL.getfp("glUseProgramStagesEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glUseProgramStagesEXT))
    OpenGL.glUseProgramStagesEXT(pipeline, stages, program)
}
fileprivate 
func _load_glUseShaderProgramEXT(type:OpenGL.Enum, program:OpenGL.UInt)
{
    OpenGL.glUseShaderProgramEXT = unsafeBitCast(OpenGL.getfp("glUseShaderProgramEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glUseShaderProgramEXT))
    OpenGL.glUseShaderProgramEXT(type, program)
}
fileprivate 
func _load_glVDPAUFiniNV()
{
    OpenGL.glVDPAUFiniNV = unsafeBitCast(OpenGL.getfp("glVDPAUFiniNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUFiniNV))
    OpenGL.glVDPAUFiniNV()
}
fileprivate 
func _load_glVDPAUGetSurfaceivNV(surface:OpenGL.VdpauSurfaceNV, pname:OpenGL.Enum, bufSize:OpenGL.Size, length:UnsafeMutablePointer<OpenGL.Size>?, values:UnsafeMutablePointer<OpenGL.Int>?)
{
    OpenGL.glVDPAUGetSurfaceivNV = unsafeBitCast(OpenGL.getfp("glVDPAUGetSurfaceivNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUGetSurfaceivNV))
    OpenGL.glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values)
}
fileprivate 
func _load_glVDPAUInitNV(vdpDevice:UnsafeRawPointer?, getProcAddress:UnsafeRawPointer?)
{
    OpenGL.glVDPAUInitNV = unsafeBitCast(OpenGL.getfp("glVDPAUInitNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUInitNV))
    OpenGL.glVDPAUInitNV(vdpDevice, getProcAddress)
}
fileprivate 
func _load_glVDPAUIsSurfaceNV(surface:OpenGL.VdpauSurfaceNV) -> OpenGL.Bool
{
    OpenGL.glVDPAUIsSurfaceNV = unsafeBitCast(OpenGL.getfp("glVDPAUIsSurfaceNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUIsSurfaceNV))
    return OpenGL.glVDPAUIsSurfaceNV(surface)
}
fileprivate 
func _load_glVDPAUMapSurfacesNV(numSurfaces:OpenGL.Size, surfaces:UnsafePointer<OpenGL.VdpauSurfaceNV>?)
{
    OpenGL.glVDPAUMapSurfacesNV = unsafeBitCast(OpenGL.getfp("glVDPAUMapSurfacesNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUMapSurfacesNV))
    OpenGL.glVDPAUMapSurfacesNV(numSurfaces, surfaces)
}
fileprivate 
func _load_glVDPAURegisterOutputSurfaceNV(vdpSurface:UnsafeRawPointer?, target:OpenGL.Enum, numTextureNames:OpenGL.Size, textureNames:UnsafePointer<OpenGL.UInt>?) -> OpenGL.VdpauSurfaceNV
{
    OpenGL.glVDPAURegisterOutputSurfaceNV = unsafeBitCast(OpenGL.getfp("glVDPAURegisterOutputSurfaceNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAURegisterOutputSurfaceNV))
    return OpenGL.glVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
fileprivate 
func _load_glVDPAURegisterVideoSurfaceNV(vdpSurface:UnsafeRawPointer?, target:OpenGL.Enum, numTextureNames:OpenGL.Size, textureNames:UnsafePointer<OpenGL.UInt>?) -> OpenGL.VdpauSurfaceNV
{
    OpenGL.glVDPAURegisterVideoSurfaceNV = unsafeBitCast(OpenGL.getfp("glVDPAURegisterVideoSurfaceNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAURegisterVideoSurfaceNV))
    return OpenGL.glVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
fileprivate 
func _load_glVDPAUSurfaceAccessNV(surface:OpenGL.VdpauSurfaceNV, access:OpenGL.Enum)
{
    OpenGL.glVDPAUSurfaceAccessNV = unsafeBitCast(OpenGL.getfp("glVDPAUSurfaceAccessNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUSurfaceAccessNV))
    OpenGL.glVDPAUSurfaceAccessNV(surface, access)
}
fileprivate 
func _load_glVDPAUUnmapSurfacesNV(numSurface:OpenGL.Size, surfaces:UnsafePointer<OpenGL.VdpauSurfaceNV>?)
{
    OpenGL.glVDPAUUnmapSurfacesNV = unsafeBitCast(OpenGL.getfp("glVDPAUUnmapSurfacesNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUUnmapSurfacesNV))
    OpenGL.glVDPAUUnmapSurfacesNV(numSurface, surfaces)
}
fileprivate 
func _load_glVDPAUUnregisterSurfaceNV(surface:OpenGL.VdpauSurfaceNV)
{
    OpenGL.glVDPAUUnregisterSurfaceNV = unsafeBitCast(OpenGL.getfp("glVDPAUUnregisterSurfaceNV", support: [OpenGL.ss275]), to: Swift.type(of: OpenGL.glVDPAUUnregisterSurfaceNV))
    OpenGL.glVDPAUUnregisterSurfaceNV(surface)
}
fileprivate 
func _load_glValidateProgram(program:OpenGL.UInt)
{
    OpenGL.glValidateProgram = unsafeBitCast(OpenGL.getfp("glValidateProgram", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glValidateProgram))
    OpenGL.glValidateProgram(program)
}
fileprivate 
func _load_glValidateProgramARB(programObj:OpenGL.HandleARB)
{
    OpenGL.glValidateProgramARB = unsafeBitCast(OpenGL.getfp("glValidateProgramARB", support: [OpenGL.ss83]), to: Swift.type(of: OpenGL.glValidateProgramARB))
    OpenGL.glValidateProgramARB(programObj)
}
fileprivate 
func _load_glValidateProgramPipeline(pipeline:OpenGL.UInt)
{
    OpenGL.glValidateProgramPipeline = unsafeBitCast(OpenGL.getfp("glValidateProgramPipeline", support: [OpenGL.ss359, OpenGL.ss367, OpenGL.ss80]), to: Swift.type(of: OpenGL.glValidateProgramPipeline))
    OpenGL.glValidateProgramPipeline(pipeline)
}
fileprivate 
func _load_glValidateProgramPipelineEXT(pipeline:OpenGL.UInt)
{
    OpenGL.glValidateProgramPipelineEXT = unsafeBitCast(OpenGL.getfp("glValidateProgramPipelineEXT", support: [OpenGL.ss182]), to: Swift.type(of: OpenGL.glValidateProgramPipelineEXT))
    OpenGL.glValidateProgramPipelineEXT(pipeline)
}
fileprivate 
func _load_glVariantArrayObjectATI(id:OpenGL.UInt, type:OpenGL.Enum, stride:OpenGL.Size, buffer:OpenGL.UInt, offset:OpenGL.UInt)
{
    OpenGL.glVariantArrayObjectATI = unsafeBitCast(OpenGL.getfp("glVariantArrayObjectATI", support: [OpenGL.ss122]), to: Swift.type(of: OpenGL.glVariantArrayObjectATI))
    OpenGL.glVariantArrayObjectATI(id, type, stride, buffer, offset)
}
fileprivate 
func _load_glVariantPointerEXT(id:OpenGL.UInt, type:OpenGL.Enum, stride:OpenGL.UInt, addr:UnsafeRawPointer?)
{
    OpenGL.glVariantPointerEXT = unsafeBitCast(OpenGL.getfp("glVariantPointerEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantPointerEXT))
    OpenGL.glVariantPointerEXT(id, type, stride, addr)
}
fileprivate 
func _load_glVariantbvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVariantbvEXT = unsafeBitCast(OpenGL.getfp("glVariantbvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantbvEXT))
    OpenGL.glVariantbvEXT(id, addr)
}
fileprivate 
func _load_glVariantdvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVariantdvEXT = unsafeBitCast(OpenGL.getfp("glVariantdvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantdvEXT))
    OpenGL.glVariantdvEXT(id, addr)
}
fileprivate 
func _load_glVariantfvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVariantfvEXT = unsafeBitCast(OpenGL.getfp("glVariantfvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantfvEXT))
    OpenGL.glVariantfvEXT(id, addr)
}
fileprivate 
func _load_glVariantivEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVariantivEXT = unsafeBitCast(OpenGL.getfp("glVariantivEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantivEXT))
    OpenGL.glVariantivEXT(id, addr)
}
fileprivate 
func _load_glVariantsvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVariantsvEXT = unsafeBitCast(OpenGL.getfp("glVariantsvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantsvEXT))
    OpenGL.glVariantsvEXT(id, addr)
}
fileprivate 
func _load_glVariantubvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVariantubvEXT = unsafeBitCast(OpenGL.getfp("glVariantubvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantubvEXT))
    OpenGL.glVariantubvEXT(id, addr)
}
fileprivate 
func _load_glVariantuivEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVariantuivEXT = unsafeBitCast(OpenGL.getfp("glVariantuivEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantuivEXT))
    OpenGL.glVariantuivEXT(id, addr)
}
fileprivate 
func _load_glVariantusvEXT(id:OpenGL.UInt, addr:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVariantusvEXT = unsafeBitCast(OpenGL.getfp("glVariantusvEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glVariantusvEXT))
    OpenGL.glVariantusvEXT(id, addr)
}
fileprivate 
func _load_glVertex2bOES(x:OpenGL.Byte, y:OpenGL.Byte)
{
    OpenGL.glVertex2bOES = unsafeBitCast(OpenGL.getfp("glVertex2bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex2bOES))
    OpenGL.glVertex2bOES(x, y)
}
fileprivate 
func _load_glVertex2bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertex2bvOES = unsafeBitCast(OpenGL.getfp("glVertex2bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex2bvOES))
    OpenGL.glVertex2bvOES(coords)
}
fileprivate 
func _load_glVertex2d(x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertex2d = unsafeBitCast(OpenGL.getfp("glVertex2d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2d))
    OpenGL.glVertex2d(x, y)
}
fileprivate 
func _load_glVertex2dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertex2dv = unsafeBitCast(OpenGL.getfp("glVertex2dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2dv))
    OpenGL.glVertex2dv(v)
}
fileprivate 
func _load_glVertex2f(x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glVertex2f = unsafeBitCast(OpenGL.getfp("glVertex2f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2f))
    OpenGL.glVertex2f(x, y)
}
fileprivate 
func _load_glVertex2fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertex2fv = unsafeBitCast(OpenGL.getfp("glVertex2fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2fv))
    OpenGL.glVertex2fv(v)
}
fileprivate 
func _load_glVertex2hNV(x:OpenGL.HalfNV, y:OpenGL.HalfNV)
{
    OpenGL.glVertex2hNV = unsafeBitCast(OpenGL.getfp("glVertex2hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex2hNV))
    OpenGL.glVertex2hNV(x, y)
}
fileprivate 
func _load_glVertex2hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertex2hvNV = unsafeBitCast(OpenGL.getfp("glVertex2hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex2hvNV))
    OpenGL.glVertex2hvNV(v)
}
fileprivate 
func _load_glVertex2i(x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glVertex2i = unsafeBitCast(OpenGL.getfp("glVertex2i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2i))
    OpenGL.glVertex2i(x, y)
}
fileprivate 
func _load_glVertex2iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertex2iv = unsafeBitCast(OpenGL.getfp("glVertex2iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2iv))
    OpenGL.glVertex2iv(v)
}
fileprivate 
func _load_glVertex2s(x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glVertex2s = unsafeBitCast(OpenGL.getfp("glVertex2s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2s))
    OpenGL.glVertex2s(x, y)
}
fileprivate 
func _load_glVertex2sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertex2sv = unsafeBitCast(OpenGL.getfp("glVertex2sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex2sv))
    OpenGL.glVertex2sv(v)
}
fileprivate 
func _load_glVertex2xOES(x:OpenGL.Fixed)
{
    OpenGL.glVertex2xOES = unsafeBitCast(OpenGL.getfp("glVertex2xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex2xOES))
    OpenGL.glVertex2xOES(x)
}
fileprivate 
func _load_glVertex2xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glVertex2xvOES = unsafeBitCast(OpenGL.getfp("glVertex2xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex2xvOES))
    OpenGL.glVertex2xvOES(coords)
}
fileprivate 
func _load_glVertex3bOES(x:OpenGL.Byte, y:OpenGL.Byte, z:OpenGL.Byte)
{
    OpenGL.glVertex3bOES = unsafeBitCast(OpenGL.getfp("glVertex3bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex3bOES))
    OpenGL.glVertex3bOES(x, y, z)
}
fileprivate 
func _load_glVertex3bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertex3bvOES = unsafeBitCast(OpenGL.getfp("glVertex3bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex3bvOES))
    OpenGL.glVertex3bvOES(coords)
}
fileprivate 
func _load_glVertex3d(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertex3d = unsafeBitCast(OpenGL.getfp("glVertex3d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3d))
    OpenGL.glVertex3d(x, y, z)
}
fileprivate 
func _load_glVertex3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertex3dv = unsafeBitCast(OpenGL.getfp("glVertex3dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3dv))
    OpenGL.glVertex3dv(v)
}
fileprivate 
func _load_glVertex3f(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glVertex3f = unsafeBitCast(OpenGL.getfp("glVertex3f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3f))
    OpenGL.glVertex3f(x, y, z)
}
fileprivate 
func _load_glVertex3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertex3fv = unsafeBitCast(OpenGL.getfp("glVertex3fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3fv))
    OpenGL.glVertex3fv(v)
}
fileprivate 
func _load_glVertex3hNV(x:OpenGL.HalfNV, y:OpenGL.HalfNV, z:OpenGL.HalfNV)
{
    OpenGL.glVertex3hNV = unsafeBitCast(OpenGL.getfp("glVertex3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex3hNV))
    OpenGL.glVertex3hNV(x, y, z)
}
fileprivate 
func _load_glVertex3hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertex3hvNV = unsafeBitCast(OpenGL.getfp("glVertex3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex3hvNV))
    OpenGL.glVertex3hvNV(v)
}
fileprivate 
func _load_glVertex3i(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glVertex3i = unsafeBitCast(OpenGL.getfp("glVertex3i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3i))
    OpenGL.glVertex3i(x, y, z)
}
fileprivate 
func _load_glVertex3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertex3iv = unsafeBitCast(OpenGL.getfp("glVertex3iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3iv))
    OpenGL.glVertex3iv(v)
}
fileprivate 
func _load_glVertex3s(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glVertex3s = unsafeBitCast(OpenGL.getfp("glVertex3s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3s))
    OpenGL.glVertex3s(x, y, z)
}
fileprivate 
func _load_glVertex3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertex3sv = unsafeBitCast(OpenGL.getfp("glVertex3sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex3sv))
    OpenGL.glVertex3sv(v)
}
fileprivate 
func _load_glVertex3xOES(x:OpenGL.Fixed, y:OpenGL.Fixed)
{
    OpenGL.glVertex3xOES = unsafeBitCast(OpenGL.getfp("glVertex3xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex3xOES))
    OpenGL.glVertex3xOES(x, y)
}
fileprivate 
func _load_glVertex3xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glVertex3xvOES = unsafeBitCast(OpenGL.getfp("glVertex3xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex3xvOES))
    OpenGL.glVertex3xvOES(coords)
}
fileprivate 
func _load_glVertex4bOES(x:OpenGL.Byte, y:OpenGL.Byte, z:OpenGL.Byte, w:OpenGL.Byte)
{
    OpenGL.glVertex4bOES = unsafeBitCast(OpenGL.getfp("glVertex4bOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex4bOES))
    OpenGL.glVertex4bOES(x, y, z, w)
}
fileprivate 
func _load_glVertex4bvOES(coords:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertex4bvOES = unsafeBitCast(OpenGL.getfp("glVertex4bvOES", support: [OpenGL.ss287]), to: Swift.type(of: OpenGL.glVertex4bvOES))
    OpenGL.glVertex4bvOES(coords)
}
fileprivate 
func _load_glVertex4d(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertex4d = unsafeBitCast(OpenGL.getfp("glVertex4d", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4d))
    OpenGL.glVertex4d(x, y, z, w)
}
fileprivate 
func _load_glVertex4dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertex4dv = unsafeBitCast(OpenGL.getfp("glVertex4dv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4dv))
    OpenGL.glVertex4dv(v)
}
fileprivate 
func _load_glVertex4f(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glVertex4f = unsafeBitCast(OpenGL.getfp("glVertex4f", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4f))
    OpenGL.glVertex4f(x, y, z, w)
}
fileprivate 
func _load_glVertex4fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertex4fv = unsafeBitCast(OpenGL.getfp("glVertex4fv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4fv))
    OpenGL.glVertex4fv(v)
}
fileprivate 
func _load_glVertex4hNV(x:OpenGL.HalfNV, y:OpenGL.HalfNV, z:OpenGL.HalfNV, w:OpenGL.HalfNV)
{
    OpenGL.glVertex4hNV = unsafeBitCast(OpenGL.getfp("glVertex4hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex4hNV))
    OpenGL.glVertex4hNV(x, y, z, w)
}
fileprivate 
func _load_glVertex4hvNV(v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertex4hvNV = unsafeBitCast(OpenGL.getfp("glVertex4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertex4hvNV))
    OpenGL.glVertex4hvNV(v)
}
fileprivate 
func _load_glVertex4i(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glVertex4i = unsafeBitCast(OpenGL.getfp("glVertex4i", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4i))
    OpenGL.glVertex4i(x, y, z, w)
}
fileprivate 
func _load_glVertex4iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertex4iv = unsafeBitCast(OpenGL.getfp("glVertex4iv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4iv))
    OpenGL.glVertex4iv(v)
}
fileprivate 
func _load_glVertex4s(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glVertex4s = unsafeBitCast(OpenGL.getfp("glVertex4s", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4s))
    OpenGL.glVertex4s(x, y, z, w)
}
fileprivate 
func _load_glVertex4sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertex4sv = unsafeBitCast(OpenGL.getfp("glVertex4sv", support: [OpenGL.ss346, OpenGL.ss369]), to: Swift.type(of: OpenGL.glVertex4sv))
    OpenGL.glVertex4sv(v)
}
fileprivate 
func _load_glVertex4xOES(x:OpenGL.Fixed, y:OpenGL.Fixed, z:OpenGL.Fixed)
{
    OpenGL.glVertex4xOES = unsafeBitCast(OpenGL.getfp("glVertex4xOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex4xOES))
    OpenGL.glVertex4xOES(x, y, z)
}
fileprivate 
func _load_glVertex4xvOES(coords:UnsafePointer<OpenGL.Fixed>?)
{
    OpenGL.glVertex4xvOES = unsafeBitCast(OpenGL.getfp("glVertex4xvOES", support: [OpenGL.ss292]), to: Swift.type(of: OpenGL.glVertex4xvOES))
    OpenGL.glVertex4xvOES(coords)
}
fileprivate 
func _load_glVertexArrayAttribBinding(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, bindingindex:OpenGL.UInt)
{
    OpenGL.glVertexArrayAttribBinding = unsafeBitCast(OpenGL.getfp("glVertexArrayAttribBinding", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayAttribBinding))
    OpenGL.glVertexArrayAttribBinding(vaobj, attribindex, bindingindex)
}
fileprivate 
func _load_glVertexArrayAttribFormat(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayAttribFormat = unsafeBitCast(OpenGL.getfp("glVertexArrayAttribFormat", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayAttribFormat))
    OpenGL.glVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset)
}
fileprivate 
func _load_glVertexArrayAttribIFormat(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayAttribIFormat = unsafeBitCast(OpenGL.getfp("glVertexArrayAttribIFormat", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayAttribIFormat))
    OpenGL.glVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexArrayAttribLFormat(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayAttribLFormat = unsafeBitCast(OpenGL.getfp("glVertexArrayAttribLFormat", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayAttribLFormat))
    OpenGL.glVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexArrayBindVertexBufferEXT(vaobj:OpenGL.UInt, bindingindex:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, stride:OpenGL.Size)
{
    OpenGL.glVertexArrayBindVertexBufferEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayBindVertexBufferEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayBindVertexBufferEXT))
    OpenGL.glVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride)
}
fileprivate 
func _load_glVertexArrayBindingDivisor(vaobj:OpenGL.UInt, bindingindex:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexArrayBindingDivisor = unsafeBitCast(OpenGL.getfp("glVertexArrayBindingDivisor", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayBindingDivisor))
    OpenGL.glVertexArrayBindingDivisor(vaobj, bindingindex, divisor)
}
fileprivate 
func _load_glVertexArrayColorOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayColorOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayColorOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayColorOffsetEXT))
    OpenGL.glVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayEdgeFlagOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayEdgeFlagOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayEdgeFlagOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayEdgeFlagOffsetEXT))
    OpenGL.glVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset)
}
fileprivate 
func _load_glVertexArrayElementBuffer(vaobj:OpenGL.UInt, buffer:OpenGL.UInt)
{
    OpenGL.glVertexArrayElementBuffer = unsafeBitCast(OpenGL.getfp("glVertexArrayElementBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayElementBuffer))
    OpenGL.glVertexArrayElementBuffer(vaobj, buffer)
}
fileprivate 
func _load_glVertexArrayFogCoordOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayFogCoordOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayFogCoordOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayFogCoordOffsetEXT))
    OpenGL.glVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayIndexOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayIndexOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayIndexOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayIndexOffsetEXT))
    OpenGL.glVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayMultiTexCoordOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, texunit:OpenGL.Enum, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayMultiTexCoordOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayMultiTexCoordOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayMultiTexCoordOffsetEXT))
    OpenGL.glVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayNormalOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayNormalOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayNormalOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayNormalOffsetEXT))
    OpenGL.glVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayParameteriAPPLE(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glVertexArrayParameteriAPPLE = unsafeBitCast(OpenGL.getfp("glVertexArrayParameteriAPPLE", support: [OpenGL.ss26]), to: Swift.type(of: OpenGL.glVertexArrayParameteriAPPLE))
    OpenGL.glVertexArrayParameteriAPPLE(pname, param)
}
fileprivate 
func _load_glVertexArrayRangeAPPLE(length:OpenGL.Size, pointer:UnsafeMutableRawPointer?)
{
    OpenGL.glVertexArrayRangeAPPLE = unsafeBitCast(OpenGL.getfp("glVertexArrayRangeAPPLE", support: [OpenGL.ss26]), to: Swift.type(of: OpenGL.glVertexArrayRangeAPPLE))
    OpenGL.glVertexArrayRangeAPPLE(length, pointer)
}
fileprivate 
func _load_glVertexArrayRangeNV(length:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexArrayRangeNV = unsafeBitCast(OpenGL.getfp("glVertexArrayRangeNV", support: [OpenGL.ss276]), to: Swift.type(of: OpenGL.glVertexArrayRangeNV))
    OpenGL.glVertexArrayRangeNV(length, pointer)
}
fileprivate 
func _load_glVertexArraySecondaryColorOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArraySecondaryColorOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArraySecondaryColorOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArraySecondaryColorOffsetEXT))
    OpenGL.glVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayTexCoordOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayTexCoordOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayTexCoordOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayTexCoordOffsetEXT))
    OpenGL.glVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayVertexAttribBindingEXT(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, bindingindex:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexAttribBindingEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribBindingEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribBindingEXT))
    OpenGL.glVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex)
}
fileprivate 
func _load_glVertexArrayVertexAttribDivisorEXT(vaobj:OpenGL.UInt, index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexAttribDivisorEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribDivisorEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribDivisorEXT))
    OpenGL.glVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor)
}
fileprivate 
func _load_glVertexArrayVertexAttribFormatEXT(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexAttribFormatEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribFormatEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribFormatEXT))
    OpenGL.glVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset)
}
fileprivate 
func _load_glVertexArrayVertexAttribIFormatEXT(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexAttribIFormatEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribIFormatEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribIFormatEXT))
    OpenGL.glVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexArrayVertexAttribIOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayVertexAttribIOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribIOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribIOffsetEXT))
    OpenGL.glVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayVertexAttribLFormatEXT(vaobj:OpenGL.UInt, attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexAttribLFormatEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribLFormatEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribLFormatEXT))
    OpenGL.glVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexArrayVertexAttribLOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayVertexAttribLOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribLOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribLOffsetEXT))
    OpenGL.glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
fileprivate 
func _load_glVertexArrayVertexAttribOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayVertexAttribOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexAttribOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexAttribOffsetEXT))
    OpenGL.glVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset)
}
fileprivate 
func _load_glVertexArrayVertexBindingDivisorEXT(vaobj:OpenGL.UInt, bindingindex:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexArrayVertexBindingDivisorEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexBindingDivisorEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexBindingDivisorEXT))
    OpenGL.glVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor)
}
fileprivate 
func _load_glVertexArrayVertexBuffer(vaobj:OpenGL.UInt, bindingindex:OpenGL.UInt, buffer:OpenGL.UInt, offset:OpenGL.IntPointer, stride:OpenGL.Size)
{
    OpenGL.glVertexArrayVertexBuffer = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexBuffer", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayVertexBuffer))
    OpenGL.glVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride)
}
fileprivate 
func _load_glVertexArrayVertexBuffers(vaobj:OpenGL.UInt, first:OpenGL.UInt, count:OpenGL.Size, buffers:UnsafePointer<OpenGL.UInt>?, offsets:UnsafePointer<OpenGL.IntPointer>?, strides:UnsafePointer<OpenGL.Size>?)
{
    OpenGL.glVertexArrayVertexBuffers = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexBuffers", support: [OpenGL.ss363, OpenGL.ss45]), to: Swift.type(of: OpenGL.glVertexArrayVertexBuffers))
    OpenGL.glVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides)
}
fileprivate 
func _load_glVertexArrayVertexOffsetEXT(vaobj:OpenGL.UInt, buffer:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, offset:OpenGL.IntPointer)
{
    OpenGL.glVertexArrayVertexOffsetEXT = unsafeBitCast(OpenGL.getfp("glVertexArrayVertexOffsetEXT", support: [OpenGL.ss143]), to: Swift.type(of: OpenGL.glVertexArrayVertexOffsetEXT))
    OpenGL.glVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
fileprivate 
func _load_glVertexAttrib1d(index:OpenGL.UInt, x:OpenGL.Double)
{
    OpenGL.glVertexAttrib1d = unsafeBitCast(OpenGL.getfp("glVertexAttrib1d", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib1d))
    OpenGL.glVertexAttrib1d(index, x)
}
fileprivate 
func _load_glVertexAttrib1dARB(index:OpenGL.UInt, x:OpenGL.Double)
{
    OpenGL.glVertexAttrib1dARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1dARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1dARB))
    OpenGL.glVertexAttrib1dARB(index, x)
}
fileprivate 
func _load_glVertexAttrib1dNV(index:OpenGL.UInt, x:OpenGL.Double)
{
    OpenGL.glVertexAttrib1dNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1dNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1dNV))
    OpenGL.glVertexAttrib1dNV(index, x)
}
fileprivate 
func _load_glVertexAttrib1dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib1dv = unsafeBitCast(OpenGL.getfp("glVertexAttrib1dv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib1dv))
    OpenGL.glVertexAttrib1dv(index, v)
}
fileprivate 
func _load_glVertexAttrib1dvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib1dvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1dvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1dvARB))
    OpenGL.glVertexAttrib1dvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib1dvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib1dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1dvNV))
    OpenGL.glVertexAttrib1dvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib1f(index:OpenGL.UInt, x:OpenGL.Float)
{
    OpenGL.glVertexAttrib1f = unsafeBitCast(OpenGL.getfp("glVertexAttrib1f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib1f))
    OpenGL.glVertexAttrib1f(index, x)
}
fileprivate 
func _load_glVertexAttrib1fARB(index:OpenGL.UInt, x:OpenGL.Float)
{
    OpenGL.glVertexAttrib1fARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1fARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1fARB))
    OpenGL.glVertexAttrib1fARB(index, x)
}
fileprivate 
func _load_glVertexAttrib1fNV(index:OpenGL.UInt, x:OpenGL.Float)
{
    OpenGL.glVertexAttrib1fNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1fNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1fNV))
    OpenGL.glVertexAttrib1fNV(index, x)
}
fileprivate 
func _load_glVertexAttrib1fv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib1fv = unsafeBitCast(OpenGL.getfp("glVertexAttrib1fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib1fv))
    OpenGL.glVertexAttrib1fv(index, v)
}
fileprivate 
func _load_glVertexAttrib1fvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib1fvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1fvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1fvARB))
    OpenGL.glVertexAttrib1fvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib1fvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib1fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1fvNV))
    OpenGL.glVertexAttrib1fvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib1hNV(index:OpenGL.UInt, x:OpenGL.HalfNV)
{
    OpenGL.glVertexAttrib1hNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib1hNV))
    OpenGL.glVertexAttrib1hNV(index, x)
}
fileprivate 
func _load_glVertexAttrib1hvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttrib1hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib1hvNV))
    OpenGL.glVertexAttrib1hvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib1s(index:OpenGL.UInt, x:OpenGL.Short)
{
    OpenGL.glVertexAttrib1s = unsafeBitCast(OpenGL.getfp("glVertexAttrib1s", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib1s))
    OpenGL.glVertexAttrib1s(index, x)
}
fileprivate 
func _load_glVertexAttrib1sARB(index:OpenGL.UInt, x:OpenGL.Short)
{
    OpenGL.glVertexAttrib1sARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1sARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1sARB))
    OpenGL.glVertexAttrib1sARB(index, x)
}
fileprivate 
func _load_glVertexAttrib1sNV(index:OpenGL.UInt, x:OpenGL.Short)
{
    OpenGL.glVertexAttrib1sNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1sNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1sNV))
    OpenGL.glVertexAttrib1sNV(index, x)
}
fileprivate 
func _load_glVertexAttrib1sv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib1sv = unsafeBitCast(OpenGL.getfp("glVertexAttrib1sv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib1sv))
    OpenGL.glVertexAttrib1sv(index, v)
}
fileprivate 
func _load_glVertexAttrib1svARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib1svARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib1svARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib1svARB))
    OpenGL.glVertexAttrib1svARB(index, v)
}
fileprivate 
func _load_glVertexAttrib1svNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib1svNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib1svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib1svNV))
    OpenGL.glVertexAttrib1svNV(index, v)
}
fileprivate 
func _load_glVertexAttrib2d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexAttrib2d = unsafeBitCast(OpenGL.getfp("glVertexAttrib2d", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib2d))
    OpenGL.glVertexAttrib2d(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2dARB(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexAttrib2dARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2dARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2dARB))
    OpenGL.glVertexAttrib2dARB(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2dNV(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexAttrib2dNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2dNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2dNV))
    OpenGL.glVertexAttrib2dNV(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib2dv = unsafeBitCast(OpenGL.getfp("glVertexAttrib2dv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib2dv))
    OpenGL.glVertexAttrib2dv(index, v)
}
fileprivate 
func _load_glVertexAttrib2dvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib2dvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2dvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2dvARB))
    OpenGL.glVertexAttrib2dvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib2dvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib2dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2dvNV))
    OpenGL.glVertexAttrib2dvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib2f(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glVertexAttrib2f = unsafeBitCast(OpenGL.getfp("glVertexAttrib2f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib2f))
    OpenGL.glVertexAttrib2f(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2fARB(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glVertexAttrib2fARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2fARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2fARB))
    OpenGL.glVertexAttrib2fARB(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2fNV(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glVertexAttrib2fNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2fNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2fNV))
    OpenGL.glVertexAttrib2fNV(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2fv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib2fv = unsafeBitCast(OpenGL.getfp("glVertexAttrib2fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib2fv))
    OpenGL.glVertexAttrib2fv(index, v)
}
fileprivate 
func _load_glVertexAttrib2fvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib2fvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2fvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2fvARB))
    OpenGL.glVertexAttrib2fvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib2fvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib2fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2fvNV))
    OpenGL.glVertexAttrib2fvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib2hNV(index:OpenGL.UInt, x:OpenGL.HalfNV, y:OpenGL.HalfNV)
{
    OpenGL.glVertexAttrib2hNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib2hNV))
    OpenGL.glVertexAttrib2hNV(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2hvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttrib2hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib2hvNV))
    OpenGL.glVertexAttrib2hvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib2s(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glVertexAttrib2s = unsafeBitCast(OpenGL.getfp("glVertexAttrib2s", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib2s))
    OpenGL.glVertexAttrib2s(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2sARB(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glVertexAttrib2sARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2sARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2sARB))
    OpenGL.glVertexAttrib2sARB(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2sNV(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glVertexAttrib2sNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2sNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2sNV))
    OpenGL.glVertexAttrib2sNV(index, x, y)
}
fileprivate 
func _load_glVertexAttrib2sv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib2sv = unsafeBitCast(OpenGL.getfp("glVertexAttrib2sv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib2sv))
    OpenGL.glVertexAttrib2sv(index, v)
}
fileprivate 
func _load_glVertexAttrib2svARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib2svARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib2svARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib2svARB))
    OpenGL.glVertexAttrib2svARB(index, v)
}
fileprivate 
func _load_glVertexAttrib2svNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib2svNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib2svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib2svNV))
    OpenGL.glVertexAttrib2svNV(index, v)
}
fileprivate 
func _load_glVertexAttrib3d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexAttrib3d = unsafeBitCast(OpenGL.getfp("glVertexAttrib3d", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib3d))
    OpenGL.glVertexAttrib3d(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3dARB(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexAttrib3dARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3dARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3dARB))
    OpenGL.glVertexAttrib3dARB(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3dNV(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexAttrib3dNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3dNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3dNV))
    OpenGL.glVertexAttrib3dNV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib3dv = unsafeBitCast(OpenGL.getfp("glVertexAttrib3dv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib3dv))
    OpenGL.glVertexAttrib3dv(index, v)
}
fileprivate 
func _load_glVertexAttrib3dvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib3dvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3dvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3dvARB))
    OpenGL.glVertexAttrib3dvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib3dvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib3dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3dvNV))
    OpenGL.glVertexAttrib3dvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib3f(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glVertexAttrib3f = unsafeBitCast(OpenGL.getfp("glVertexAttrib3f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib3f))
    OpenGL.glVertexAttrib3f(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3fARB(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glVertexAttrib3fARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3fARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3fARB))
    OpenGL.glVertexAttrib3fARB(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3fNV(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glVertexAttrib3fNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3fNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3fNV))
    OpenGL.glVertexAttrib3fNV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3fv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib3fv = unsafeBitCast(OpenGL.getfp("glVertexAttrib3fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib3fv))
    OpenGL.glVertexAttrib3fv(index, v)
}
fileprivate 
func _load_glVertexAttrib3fvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib3fvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3fvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3fvARB))
    OpenGL.glVertexAttrib3fvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib3fvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib3fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3fvNV))
    OpenGL.glVertexAttrib3fvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib3hNV(index:OpenGL.UInt, x:OpenGL.HalfNV, y:OpenGL.HalfNV, z:OpenGL.HalfNV)
{
    OpenGL.glVertexAttrib3hNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib3hNV))
    OpenGL.glVertexAttrib3hNV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3hvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttrib3hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib3hvNV))
    OpenGL.glVertexAttrib3hvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib3s(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glVertexAttrib3s = unsafeBitCast(OpenGL.getfp("glVertexAttrib3s", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib3s))
    OpenGL.glVertexAttrib3s(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3sARB(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glVertexAttrib3sARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3sARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3sARB))
    OpenGL.glVertexAttrib3sARB(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3sNV(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glVertexAttrib3sNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3sNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3sNV))
    OpenGL.glVertexAttrib3sNV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttrib3sv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib3sv = unsafeBitCast(OpenGL.getfp("glVertexAttrib3sv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib3sv))
    OpenGL.glVertexAttrib3sv(index, v)
}
fileprivate 
func _load_glVertexAttrib3svARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib3svARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib3svARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib3svARB))
    OpenGL.glVertexAttrib3svARB(index, v)
}
fileprivate 
func _load_glVertexAttrib3svNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib3svNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib3svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib3svNV))
    OpenGL.glVertexAttrib3svNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4Nbv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttrib4Nbv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nbv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nbv))
    OpenGL.glVertexAttrib4Nbv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NbvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttrib4NbvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NbvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NbvARB))
    OpenGL.glVertexAttrib4NbvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4Niv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttrib4Niv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Niv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Niv))
    OpenGL.glVertexAttrib4Niv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NivARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttrib4NivARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NivARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NivARB))
    OpenGL.glVertexAttrib4NivARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4Nsv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib4Nsv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nsv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nsv))
    OpenGL.glVertexAttrib4Nsv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NsvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib4NsvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NsvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NsvARB))
    OpenGL.glVertexAttrib4NsvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4Nub(index:OpenGL.UInt, x:OpenGL.UByte, y:OpenGL.UByte, z:OpenGL.UByte, w:OpenGL.UByte)
{
    OpenGL.glVertexAttrib4Nub = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nub", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nub))
    OpenGL.glVertexAttrib4Nub(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4NubARB(index:OpenGL.UInt, x:OpenGL.UByte, y:OpenGL.UByte, z:OpenGL.UByte, w:OpenGL.UByte)
{
    OpenGL.glVertexAttrib4NubARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NubARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NubARB))
    OpenGL.glVertexAttrib4NubARB(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4Nubv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttrib4Nubv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nubv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nubv))
    OpenGL.glVertexAttrib4Nubv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NubvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttrib4NubvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NubvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NubvARB))
    OpenGL.glVertexAttrib4NubvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4Nuiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttrib4Nuiv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nuiv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nuiv))
    OpenGL.glVertexAttrib4Nuiv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NuivARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttrib4NuivARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NuivARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NuivARB))
    OpenGL.glVertexAttrib4NuivARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4Nusv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttrib4Nusv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4Nusv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4Nusv))
    OpenGL.glVertexAttrib4Nusv(index, v)
}
fileprivate 
func _load_glVertexAttrib4NusvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttrib4NusvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4NusvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4NusvARB))
    OpenGL.glVertexAttrib4NusvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4bv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttrib4bv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4bv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4bv))
    OpenGL.glVertexAttrib4bv(index, v)
}
fileprivate 
func _load_glVertexAttrib4bvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttrib4bvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4bvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4bvARB))
    OpenGL.glVertexAttrib4bvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexAttrib4d = unsafeBitCast(OpenGL.getfp("glVertexAttrib4d", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4d))
    OpenGL.glVertexAttrib4d(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4dARB(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexAttrib4dARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4dARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4dARB))
    OpenGL.glVertexAttrib4dARB(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4dNV(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexAttrib4dNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4dNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4dNV))
    OpenGL.glVertexAttrib4dNV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib4dv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4dv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4dv))
    OpenGL.glVertexAttrib4dv(index, v)
}
fileprivate 
func _load_glVertexAttrib4dvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib4dvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4dvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4dvARB))
    OpenGL.glVertexAttrib4dvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4dvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttrib4dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4dvNV))
    OpenGL.glVertexAttrib4dvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4f(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glVertexAttrib4f = unsafeBitCast(OpenGL.getfp("glVertexAttrib4f", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib4f))
    OpenGL.glVertexAttrib4f(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4fARB(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glVertexAttrib4fARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4fARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4fARB))
    OpenGL.glVertexAttrib4fARB(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4fNV(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glVertexAttrib4fNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4fNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4fNV))
    OpenGL.glVertexAttrib4fNV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4fv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib4fv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4fv", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttrib4fv))
    OpenGL.glVertexAttrib4fv(index, v)
}
fileprivate 
func _load_glVertexAttrib4fvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib4fvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4fvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4fvARB))
    OpenGL.glVertexAttrib4fvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4fvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttrib4fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4fvNV))
    OpenGL.glVertexAttrib4fvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4hNV(index:OpenGL.UInt, x:OpenGL.HalfNV, y:OpenGL.HalfNV, z:OpenGL.HalfNV, w:OpenGL.HalfNV)
{
    OpenGL.glVertexAttrib4hNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4hNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib4hNV))
    OpenGL.glVertexAttrib4hNV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4hvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttrib4hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttrib4hvNV))
    OpenGL.glVertexAttrib4hvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4iv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttrib4iv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4iv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4iv))
    OpenGL.glVertexAttrib4iv(index, v)
}
fileprivate 
func _load_glVertexAttrib4ivARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttrib4ivARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4ivARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4ivARB))
    OpenGL.glVertexAttrib4ivARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4s(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glVertexAttrib4s = unsafeBitCast(OpenGL.getfp("glVertexAttrib4s", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4s))
    OpenGL.glVertexAttrib4s(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4sARB(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glVertexAttrib4sARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4sARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4sARB))
    OpenGL.glVertexAttrib4sARB(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4sNV(index:OpenGL.UInt, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glVertexAttrib4sNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4sNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4sNV))
    OpenGL.glVertexAttrib4sNV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4sv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib4sv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4sv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4sv))
    OpenGL.glVertexAttrib4sv(index, v)
}
fileprivate 
func _load_glVertexAttrib4svARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib4svARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4svARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4svARB))
    OpenGL.glVertexAttrib4svARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4svNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttrib4svNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4svNV))
    OpenGL.glVertexAttrib4svNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4ubNV(index:OpenGL.UInt, x:OpenGL.UByte, y:OpenGL.UByte, z:OpenGL.UByte, w:OpenGL.UByte)
{
    OpenGL.glVertexAttrib4ubNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4ubNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4ubNV))
    OpenGL.glVertexAttrib4ubNV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttrib4ubv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttrib4ubv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4ubv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4ubv))
    OpenGL.glVertexAttrib4ubv(index, v)
}
fileprivate 
func _load_glVertexAttrib4ubvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttrib4ubvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4ubvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4ubvARB))
    OpenGL.glVertexAttrib4ubvARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4ubvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttrib4ubvNV = unsafeBitCast(OpenGL.getfp("glVertexAttrib4ubvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttrib4ubvNV))
    OpenGL.glVertexAttrib4ubvNV(index, v)
}
fileprivate 
func _load_glVertexAttrib4uiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttrib4uiv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4uiv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4uiv))
    OpenGL.glVertexAttrib4uiv(index, v)
}
fileprivate 
func _load_glVertexAttrib4uivARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttrib4uivARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4uivARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4uivARB))
    OpenGL.glVertexAttrib4uivARB(index, v)
}
fileprivate 
func _load_glVertexAttrib4usv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttrib4usv = unsafeBitCast(OpenGL.getfp("glVertexAttrib4usv", support: [OpenGL.ss352]), to: Swift.type(of: OpenGL.glVertexAttrib4usv))
    OpenGL.glVertexAttrib4usv(index, v)
}
fileprivate 
func _load_glVertexAttrib4usvARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttrib4usvARB = unsafeBitCast(OpenGL.getfp("glVertexAttrib4usvARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttrib4usvARB))
    OpenGL.glVertexAttrib4usvARB(index, v)
}
fileprivate 
func _load_glVertexAttribArrayObjectATI(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, stride:OpenGL.Size, buffer:OpenGL.UInt, offset:OpenGL.UInt)
{
    OpenGL.glVertexAttribArrayObjectATI = unsafeBitCast(OpenGL.getfp("glVertexAttribArrayObjectATI", support: [OpenGL.ss123]), to: Swift.type(of: OpenGL.glVertexAttribArrayObjectATI))
    OpenGL.glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset)
}
fileprivate 
func _load_glVertexAttribBinding(attribindex:OpenGL.UInt, bindingindex:OpenGL.UInt)
{
    OpenGL.glVertexAttribBinding = unsafeBitCast(OpenGL.getfp("glVertexAttribBinding", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss107]), to: Swift.type(of: OpenGL.glVertexAttribBinding))
    OpenGL.glVertexAttribBinding(attribindex, bindingindex)
}
fileprivate 
func _load_glVertexAttribDivisor(index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexAttribDivisor = unsafeBitCast(OpenGL.getfp("glVertexAttribDivisor", support: [OpenGL.ss357, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribDivisor))
    OpenGL.glVertexAttribDivisor(index, divisor)
}
fileprivate 
func _load_glVertexAttribDivisorANGLE(index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexAttribDivisorANGLE = unsafeBitCast(OpenGL.getfp("glVertexAttribDivisorANGLE", support: [OpenGL.ss15]), to: Swift.type(of: OpenGL.glVertexAttribDivisorANGLE))
    OpenGL.glVertexAttribDivisorANGLE(index, divisor)
}
fileprivate 
func _load_glVertexAttribDivisorARB(index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexAttribDivisorARB = unsafeBitCast(OpenGL.getfp("glVertexAttribDivisorARB", support: [OpenGL.ss61]), to: Swift.type(of: OpenGL.glVertexAttribDivisorARB))
    OpenGL.glVertexAttribDivisorARB(index, divisor)
}
fileprivate 
func _load_glVertexAttribDivisorEXT(index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexAttribDivisorEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribDivisorEXT", support: [OpenGL.ss163]), to: Swift.type(of: OpenGL.glVertexAttribDivisorEXT))
    OpenGL.glVertexAttribDivisorEXT(index, divisor)
}
fileprivate 
func _load_glVertexAttribDivisorNV(index:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexAttribDivisorNV = unsafeBitCast(OpenGL.getfp("glVertexAttribDivisorNV", support: [OpenGL.ss255]), to: Swift.type(of: OpenGL.glVertexAttribDivisorNV))
    OpenGL.glVertexAttribDivisorNV(index, divisor)
}
fileprivate 
func _load_glVertexAttribFormat(attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexAttribFormat = unsafeBitCast(OpenGL.getfp("glVertexAttribFormat", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss107]), to: Swift.type(of: OpenGL.glVertexAttribFormat))
    OpenGL.glVertexAttribFormat(attribindex, size, type, normalized, relativeoffset)
}
fileprivate 
func _load_glVertexAttribFormatNV(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, stride:OpenGL.Size)
{
    OpenGL.glVertexAttribFormatNV = unsafeBitCast(OpenGL.getfp("glVertexAttribFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glVertexAttribFormatNV))
    OpenGL.glVertexAttribFormatNV(index, size, type, normalized, stride)
}
fileprivate 
func _load_glVertexAttribI1i(index:OpenGL.UInt, x:OpenGL.Int)
{
    OpenGL.glVertexAttribI1i = unsafeBitCast(OpenGL.getfp("glVertexAttribI1i", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI1i))
    OpenGL.glVertexAttribI1i(index, x)
}
fileprivate 
func _load_glVertexAttribI1iEXT(index:OpenGL.UInt, x:OpenGL.Int)
{
    OpenGL.glVertexAttribI1iEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI1iEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI1iEXT))
    OpenGL.glVertexAttribI1iEXT(index, x)
}
fileprivate 
func _load_glVertexAttribI1iv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI1iv = unsafeBitCast(OpenGL.getfp("glVertexAttribI1iv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI1iv))
    OpenGL.glVertexAttribI1iv(index, v)
}
fileprivate 
func _load_glVertexAttribI1ivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI1ivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI1ivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI1ivEXT))
    OpenGL.glVertexAttribI1ivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI1ui(index:OpenGL.UInt, x:OpenGL.UInt)
{
    OpenGL.glVertexAttribI1ui = unsafeBitCast(OpenGL.getfp("glVertexAttribI1ui", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI1ui))
    OpenGL.glVertexAttribI1ui(index, x)
}
fileprivate 
func _load_glVertexAttribI1uiEXT(index:OpenGL.UInt, x:OpenGL.UInt)
{
    OpenGL.glVertexAttribI1uiEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI1uiEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI1uiEXT))
    OpenGL.glVertexAttribI1uiEXT(index, x)
}
fileprivate 
func _load_glVertexAttribI1uiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI1uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribI1uiv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI1uiv))
    OpenGL.glVertexAttribI1uiv(index, v)
}
fileprivate 
func _load_glVertexAttribI1uivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI1uivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI1uivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI1uivEXT))
    OpenGL.glVertexAttribI1uivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI2i(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glVertexAttribI2i = unsafeBitCast(OpenGL.getfp("glVertexAttribI2i", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI2i))
    OpenGL.glVertexAttribI2i(index, x, y)
}
fileprivate 
func _load_glVertexAttribI2iEXT(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glVertexAttribI2iEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI2iEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI2iEXT))
    OpenGL.glVertexAttribI2iEXT(index, x, y)
}
fileprivate 
func _load_glVertexAttribI2iv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI2iv = unsafeBitCast(OpenGL.getfp("glVertexAttribI2iv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI2iv))
    OpenGL.glVertexAttribI2iv(index, v)
}
fileprivate 
func _load_glVertexAttribI2ivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI2ivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI2ivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI2ivEXT))
    OpenGL.glVertexAttribI2ivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI2ui(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt)
{
    OpenGL.glVertexAttribI2ui = unsafeBitCast(OpenGL.getfp("glVertexAttribI2ui", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI2ui))
    OpenGL.glVertexAttribI2ui(index, x, y)
}
fileprivate 
func _load_glVertexAttribI2uiEXT(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt)
{
    OpenGL.glVertexAttribI2uiEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI2uiEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI2uiEXT))
    OpenGL.glVertexAttribI2uiEXT(index, x, y)
}
fileprivate 
func _load_glVertexAttribI2uiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI2uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribI2uiv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI2uiv))
    OpenGL.glVertexAttribI2uiv(index, v)
}
fileprivate 
func _load_glVertexAttribI2uivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI2uivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI2uivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI2uivEXT))
    OpenGL.glVertexAttribI2uivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI3i(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glVertexAttribI3i = unsafeBitCast(OpenGL.getfp("glVertexAttribI3i", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI3i))
    OpenGL.glVertexAttribI3i(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribI3iEXT(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glVertexAttribI3iEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI3iEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI3iEXT))
    OpenGL.glVertexAttribI3iEXT(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribI3iv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI3iv = unsafeBitCast(OpenGL.getfp("glVertexAttribI3iv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI3iv))
    OpenGL.glVertexAttribI3iv(index, v)
}
fileprivate 
func _load_glVertexAttribI3ivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI3ivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI3ivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI3ivEXT))
    OpenGL.glVertexAttribI3ivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI3ui(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt)
{
    OpenGL.glVertexAttribI3ui = unsafeBitCast(OpenGL.getfp("glVertexAttribI3ui", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI3ui))
    OpenGL.glVertexAttribI3ui(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribI3uiEXT(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt)
{
    OpenGL.glVertexAttribI3uiEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI3uiEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI3uiEXT))
    OpenGL.glVertexAttribI3uiEXT(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribI3uiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI3uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribI3uiv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI3uiv))
    OpenGL.glVertexAttribI3uiv(index, v)
}
fileprivate 
func _load_glVertexAttribI3uivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI3uivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI3uivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI3uivEXT))
    OpenGL.glVertexAttribI3uivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4bv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttribI4bv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4bv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI4bv))
    OpenGL.glVertexAttribI4bv(index, v)
}
fileprivate 
func _load_glVertexAttribI4bvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glVertexAttribI4bvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4bvEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4bvEXT))
    OpenGL.glVertexAttribI4bvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4i(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glVertexAttribI4i = unsafeBitCast(OpenGL.getfp("glVertexAttribI4i", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribI4i))
    OpenGL.glVertexAttribI4i(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribI4iEXT(index:OpenGL.UInt, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glVertexAttribI4iEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4iEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4iEXT))
    OpenGL.glVertexAttribI4iEXT(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribI4iv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI4iv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4iv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribI4iv))
    OpenGL.glVertexAttribI4iv(index, v)
}
fileprivate 
func _load_glVertexAttribI4ivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexAttribI4ivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4ivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4ivEXT))
    OpenGL.glVertexAttribI4ivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4sv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribI4sv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4sv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI4sv))
    OpenGL.glVertexAttribI4sv(index, v)
}
fileprivate 
func _load_glVertexAttribI4svEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribI4svEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4svEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4svEXT))
    OpenGL.glVertexAttribI4svEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4ubv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttribI4ubv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4ubv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI4ubv))
    OpenGL.glVertexAttribI4ubv(index, v)
}
fileprivate 
func _load_glVertexAttribI4ubvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttribI4ubvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4ubvEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4ubvEXT))
    OpenGL.glVertexAttribI4ubvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4ui(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt, w:OpenGL.UInt)
{
    OpenGL.glVertexAttribI4ui = unsafeBitCast(OpenGL.getfp("glVertexAttribI4ui", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribI4ui))
    OpenGL.glVertexAttribI4ui(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribI4uiEXT(index:OpenGL.UInt, x:OpenGL.UInt, y:OpenGL.UInt, z:OpenGL.UInt, w:OpenGL.UInt)
{
    OpenGL.glVertexAttribI4uiEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4uiEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4uiEXT))
    OpenGL.glVertexAttribI4uiEXT(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribI4uiv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI4uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4uiv", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribI4uiv))
    OpenGL.glVertexAttribI4uiv(index, v)
}
fileprivate 
func _load_glVertexAttribI4uivEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribI4uivEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4uivEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4uivEXT))
    OpenGL.glVertexAttribI4uivEXT(index, v)
}
fileprivate 
func _load_glVertexAttribI4usv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttribI4usv = unsafeBitCast(OpenGL.getfp("glVertexAttribI4usv", support: [OpenGL.ss354]), to: Swift.type(of: OpenGL.glVertexAttribI4usv))
    OpenGL.glVertexAttribI4usv(index, v)
}
fileprivate 
func _load_glVertexAttribI4usvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glVertexAttribI4usvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribI4usvEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribI4usvEXT))
    OpenGL.glVertexAttribI4usvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribIFormat(attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexAttribIFormat = unsafeBitCast(OpenGL.getfp("glVertexAttribIFormat", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss107]), to: Swift.type(of: OpenGL.glVertexAttribIFormat))
    OpenGL.glVertexAttribIFormat(attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexAttribIFormatNV(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glVertexAttribIFormatNV = unsafeBitCast(OpenGL.getfp("glVertexAttribIFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glVertexAttribIFormatNV))
    OpenGL.glVertexAttribIFormatNV(index, size, type, stride)
}
fileprivate 
func _load_glVertexAttribIPointer(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribIPointer = unsafeBitCast(OpenGL.getfp("glVertexAttribIPointer", support: [OpenGL.ss354, OpenGL.ss366]), to: Swift.type(of: OpenGL.glVertexAttribIPointer))
    OpenGL.glVertexAttribIPointer(index, size, type, stride, pointer)
}
fileprivate 
func _load_glVertexAttribIPointerEXT(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribIPointerEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribIPointerEXT", support: [OpenGL.ss280]), to: Swift.type(of: OpenGL.glVertexAttribIPointerEXT))
    OpenGL.glVertexAttribIPointerEXT(index, size, type, stride, pointer)
}
fileprivate 
func _load_glVertexAttribL1d(index:OpenGL.UInt, x:OpenGL.Double)
{
    OpenGL.glVertexAttribL1d = unsafeBitCast(OpenGL.getfp("glVertexAttribL1d", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL1d))
    OpenGL.glVertexAttribL1d(index, x)
}
fileprivate 
func _load_glVertexAttribL1dEXT(index:OpenGL.UInt, x:OpenGL.Double)
{
    OpenGL.glVertexAttribL1dEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL1dEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL1dEXT))
    OpenGL.glVertexAttribL1dEXT(index, x)
}
fileprivate 
func _load_glVertexAttribL1dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL1dv = unsafeBitCast(OpenGL.getfp("glVertexAttribL1dv", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL1dv))
    OpenGL.glVertexAttribL1dv(index, v)
}
fileprivate 
func _load_glVertexAttribL1dvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL1dvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL1dvEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL1dvEXT))
    OpenGL.glVertexAttribL1dvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribL1i64NV(index:OpenGL.UInt, x:OpenGL.Int64EXT)
{
    OpenGL.glVertexAttribL1i64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL1i64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL1i64NV))
    OpenGL.glVertexAttribL1i64NV(index, x)
}
fileprivate 
func _load_glVertexAttribL1i64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glVertexAttribL1i64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL1i64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL1i64vNV))
    OpenGL.glVertexAttribL1i64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL1ui64ARB(index:OpenGL.UInt, x:OpenGL.UInt64EXT)
{
    OpenGL.glVertexAttribL1ui64ARB = unsafeBitCast(OpenGL.getfp("glVertexAttribL1ui64ARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glVertexAttribL1ui64ARB))
    OpenGL.glVertexAttribL1ui64ARB(index, x)
}
fileprivate 
func _load_glVertexAttribL1ui64NV(index:OpenGL.UInt, x:OpenGL.UInt64EXT)
{
    OpenGL.glVertexAttribL1ui64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL1ui64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL1ui64NV))
    OpenGL.glVertexAttribL1ui64NV(index, x)
}
fileprivate 
func _load_glVertexAttribL1ui64vARB(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glVertexAttribL1ui64vARB = unsafeBitCast(OpenGL.getfp("glVertexAttribL1ui64vARB", support: [OpenGL.ss32]), to: Swift.type(of: OpenGL.glVertexAttribL1ui64vARB))
    OpenGL.glVertexAttribL1ui64vARB(index, v)
}
fileprivate 
func _load_glVertexAttribL1ui64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glVertexAttribL1ui64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL1ui64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL1ui64vNV))
    OpenGL.glVertexAttribL1ui64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL2d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexAttribL2d = unsafeBitCast(OpenGL.getfp("glVertexAttribL2d", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL2d))
    OpenGL.glVertexAttribL2d(index, x, y)
}
fileprivate 
func _load_glVertexAttribL2dEXT(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexAttribL2dEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL2dEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL2dEXT))
    OpenGL.glVertexAttribL2dEXT(index, x, y)
}
fileprivate 
func _load_glVertexAttribL2dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL2dv = unsafeBitCast(OpenGL.getfp("glVertexAttribL2dv", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL2dv))
    OpenGL.glVertexAttribL2dv(index, v)
}
fileprivate 
func _load_glVertexAttribL2dvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL2dvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL2dvEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL2dvEXT))
    OpenGL.glVertexAttribL2dvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribL2i64NV(index:OpenGL.UInt, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT)
{
    OpenGL.glVertexAttribL2i64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL2i64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL2i64NV))
    OpenGL.glVertexAttribL2i64NV(index, x, y)
}
fileprivate 
func _load_glVertexAttribL2i64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glVertexAttribL2i64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL2i64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL2i64vNV))
    OpenGL.glVertexAttribL2i64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL2ui64NV(index:OpenGL.UInt, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT)
{
    OpenGL.glVertexAttribL2ui64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL2ui64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL2ui64NV))
    OpenGL.glVertexAttribL2ui64NV(index, x, y)
}
fileprivate 
func _load_glVertexAttribL2ui64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glVertexAttribL2ui64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL2ui64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL2ui64vNV))
    OpenGL.glVertexAttribL2ui64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL3d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexAttribL3d = unsafeBitCast(OpenGL.getfp("glVertexAttribL3d", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL3d))
    OpenGL.glVertexAttribL3d(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribL3dEXT(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexAttribL3dEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL3dEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL3dEXT))
    OpenGL.glVertexAttribL3dEXT(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribL3dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL3dv = unsafeBitCast(OpenGL.getfp("glVertexAttribL3dv", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL3dv))
    OpenGL.glVertexAttribL3dv(index, v)
}
fileprivate 
func _load_glVertexAttribL3dvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL3dvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL3dvEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL3dvEXT))
    OpenGL.glVertexAttribL3dvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribL3i64NV(index:OpenGL.UInt, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT)
{
    OpenGL.glVertexAttribL3i64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL3i64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL3i64NV))
    OpenGL.glVertexAttribL3i64NV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribL3i64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glVertexAttribL3i64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL3i64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL3i64vNV))
    OpenGL.glVertexAttribL3i64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL3ui64NV(index:OpenGL.UInt, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT)
{
    OpenGL.glVertexAttribL3ui64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL3ui64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL3ui64NV))
    OpenGL.glVertexAttribL3ui64NV(index, x, y, z)
}
fileprivate 
func _load_glVertexAttribL3ui64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glVertexAttribL3ui64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL3ui64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL3ui64vNV))
    OpenGL.glVertexAttribL3ui64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL4d(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexAttribL4d = unsafeBitCast(OpenGL.getfp("glVertexAttribL4d", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL4d))
    OpenGL.glVertexAttribL4d(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribL4dEXT(index:OpenGL.UInt, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexAttribL4dEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL4dEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL4dEXT))
    OpenGL.glVertexAttribL4dEXT(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribL4dv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL4dv = unsafeBitCast(OpenGL.getfp("glVertexAttribL4dv", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribL4dv))
    OpenGL.glVertexAttribL4dv(index, v)
}
fileprivate 
func _load_glVertexAttribL4dvEXT(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribL4dvEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribL4dvEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribL4dvEXT))
    OpenGL.glVertexAttribL4dvEXT(index, v)
}
fileprivate 
func _load_glVertexAttribL4i64NV(index:OpenGL.UInt, x:OpenGL.Int64EXT, y:OpenGL.Int64EXT, z:OpenGL.Int64EXT, w:OpenGL.Int64EXT)
{
    OpenGL.glVertexAttribL4i64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL4i64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL4i64NV))
    OpenGL.glVertexAttribL4i64NV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribL4i64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Int64EXT>?)
{
    OpenGL.glVertexAttribL4i64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL4i64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL4i64vNV))
    OpenGL.glVertexAttribL4i64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribL4ui64NV(index:OpenGL.UInt, x:OpenGL.UInt64EXT, y:OpenGL.UInt64EXT, z:OpenGL.UInt64EXT, w:OpenGL.UInt64EXT)
{
    OpenGL.glVertexAttribL4ui64NV = unsafeBitCast(OpenGL.getfp("glVertexAttribL4ui64NV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL4ui64NV))
    OpenGL.glVertexAttribL4ui64NV(index, x, y, z, w)
}
fileprivate 
func _load_glVertexAttribL4ui64vNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.UInt64EXT>?)
{
    OpenGL.glVertexAttribL4ui64vNV = unsafeBitCast(OpenGL.getfp("glVertexAttribL4ui64vNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribL4ui64vNV))
    OpenGL.glVertexAttribL4ui64vNV(index, v)
}
fileprivate 
func _load_glVertexAttribLFormat(attribindex:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, relativeoffset:OpenGL.UInt)
{
    OpenGL.glVertexAttribLFormat = unsafeBitCast(OpenGL.getfp("glVertexAttribLFormat", support: [OpenGL.ss361, OpenGL.ss107]), to: Swift.type(of: OpenGL.glVertexAttribLFormat))
    OpenGL.glVertexAttribLFormat(attribindex, size, type, relativeoffset)
}
fileprivate 
func _load_glVertexAttribLFormatNV(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glVertexAttribLFormatNV = unsafeBitCast(OpenGL.getfp("glVertexAttribLFormatNV", support: [OpenGL.ss277]), to: Swift.type(of: OpenGL.glVertexAttribLFormatNV))
    OpenGL.glVertexAttribLFormatNV(index, size, type, stride)
}
fileprivate 
func _load_glVertexAttribLPointer(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribLPointer = unsafeBitCast(OpenGL.getfp("glVertexAttribLPointer", support: [OpenGL.ss359, OpenGL.ss106]), to: Swift.type(of: OpenGL.glVertexAttribLPointer))
    OpenGL.glVertexAttribLPointer(index, size, type, stride, pointer)
}
fileprivate 
func _load_glVertexAttribLPointerEXT(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribLPointerEXT = unsafeBitCast(OpenGL.getfp("glVertexAttribLPointerEXT", support: [OpenGL.ss203]), to: Swift.type(of: OpenGL.glVertexAttribLPointerEXT))
    OpenGL.glVertexAttribLPointerEXT(index, size, type, stride, pointer)
}
fileprivate 
func _load_glVertexAttribP1ui(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:OpenGL.UInt)
{
    OpenGL.glVertexAttribP1ui = unsafeBitCast(OpenGL.getfp("glVertexAttribP1ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP1ui))
    OpenGL.glVertexAttribP1ui(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP1uiv(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribP1uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribP1uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP1uiv))
    OpenGL.glVertexAttribP1uiv(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP2ui(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:OpenGL.UInt)
{
    OpenGL.glVertexAttribP2ui = unsafeBitCast(OpenGL.getfp("glVertexAttribP2ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP2ui))
    OpenGL.glVertexAttribP2ui(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP2uiv(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribP2uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribP2uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP2uiv))
    OpenGL.glVertexAttribP2uiv(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP3ui(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:OpenGL.UInt)
{
    OpenGL.glVertexAttribP3ui = unsafeBitCast(OpenGL.getfp("glVertexAttribP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP3ui))
    OpenGL.glVertexAttribP3ui(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP3uiv(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribP3uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP3uiv))
    OpenGL.glVertexAttribP3uiv(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP4ui(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:OpenGL.UInt)
{
    OpenGL.glVertexAttribP4ui = unsafeBitCast(OpenGL.getfp("glVertexAttribP4ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP4ui))
    OpenGL.glVertexAttribP4ui(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribP4uiv(index:OpenGL.UInt, type:OpenGL.Enum, normalized:OpenGL.Bool, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexAttribP4uiv = unsafeBitCast(OpenGL.getfp("glVertexAttribP4uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexAttribP4uiv))
    OpenGL.glVertexAttribP4uiv(index, type, normalized, value)
}
fileprivate 
func _load_glVertexAttribParameteriAMD(index:OpenGL.UInt, pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glVertexAttribParameteriAMD = unsafeBitCast(OpenGL.getfp("glVertexAttribParameteriAMD", support: [OpenGL.ss4]), to: Swift.type(of: OpenGL.glVertexAttribParameteriAMD))
    OpenGL.glVertexAttribParameteriAMD(index, pname, param)
}
fileprivate 
func _load_glVertexAttribPointer(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribPointer = unsafeBitCast(OpenGL.getfp("glVertexAttribPointer", support: [OpenGL.ss352, OpenGL.ss365]), to: Swift.type(of: OpenGL.glVertexAttribPointer))
    OpenGL.glVertexAttribPointer(index, size, type, normalized, stride, pointer)
}
fileprivate 
func _load_glVertexAttribPointerARB(index:OpenGL.UInt, size:OpenGL.Int, type:OpenGL.Enum, normalized:OpenGL.Bool, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribPointerARB = unsafeBitCast(OpenGL.getfp("glVertexAttribPointerARB", support: [OpenGL.ss110, OpenGL.ss111]), to: Swift.type(of: OpenGL.glVertexAttribPointerARB))
    OpenGL.glVertexAttribPointerARB(index, size, type, normalized, stride, pointer)
}
fileprivate 
func _load_glVertexAttribPointerNV(index:OpenGL.UInt, fsize:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexAttribPointerNV = unsafeBitCast(OpenGL.getfp("glVertexAttribPointerNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribPointerNV))
    OpenGL.glVertexAttribPointerNV(index, fsize, type, stride, pointer)
}
fileprivate 
func _load_glVertexAttribs1dvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribs1dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs1dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs1dvNV))
    OpenGL.glVertexAttribs1dvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs1fvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttribs1fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs1fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs1fvNV))
    OpenGL.glVertexAttribs1fvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs1hvNV(index:OpenGL.UInt, n:OpenGL.Size, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttribs1hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs1hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttribs1hvNV))
    OpenGL.glVertexAttribs1hvNV(index, n, v)
}
fileprivate 
func _load_glVertexAttribs1svNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribs1svNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs1svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs1svNV))
    OpenGL.glVertexAttribs1svNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs2dvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribs2dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs2dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs2dvNV))
    OpenGL.glVertexAttribs2dvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs2fvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttribs2fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs2fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs2fvNV))
    OpenGL.glVertexAttribs2fvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs2hvNV(index:OpenGL.UInt, n:OpenGL.Size, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttribs2hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs2hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttribs2hvNV))
    OpenGL.glVertexAttribs2hvNV(index, n, v)
}
fileprivate 
func _load_glVertexAttribs2svNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribs2svNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs2svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs2svNV))
    OpenGL.glVertexAttribs2svNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs3dvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribs3dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs3dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs3dvNV))
    OpenGL.glVertexAttribs3dvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs3fvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttribs3fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs3fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs3fvNV))
    OpenGL.glVertexAttribs3fvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs3hvNV(index:OpenGL.UInt, n:OpenGL.Size, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttribs3hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs3hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttribs3hvNV))
    OpenGL.glVertexAttribs3hvNV(index, n, v)
}
fileprivate 
func _load_glVertexAttribs3svNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribs3svNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs3svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs3svNV))
    OpenGL.glVertexAttribs3svNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs4dvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexAttribs4dvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs4dvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs4dvNV))
    OpenGL.glVertexAttribs4dvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs4fvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexAttribs4fvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs4fvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs4fvNV))
    OpenGL.glVertexAttribs4fvNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs4hvNV(index:OpenGL.UInt, n:OpenGL.Size, v:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexAttribs4hvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs4hvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexAttribs4hvNV))
    OpenGL.glVertexAttribs4hvNV(index, n, v)
}
fileprivate 
func _load_glVertexAttribs4svNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexAttribs4svNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs4svNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs4svNV))
    OpenGL.glVertexAttribs4svNV(index, count, v)
}
fileprivate 
func _load_glVertexAttribs4ubvNV(index:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glVertexAttribs4ubvNV = unsafeBitCast(OpenGL.getfp("glVertexAttribs4ubvNV", support: [OpenGL.ss279]), to: Swift.type(of: OpenGL.glVertexAttribs4ubvNV))
    OpenGL.glVertexAttribs4ubvNV(index, count, v)
}
fileprivate 
func _load_glVertexBindingDivisor(bindingindex:OpenGL.UInt, divisor:OpenGL.UInt)
{
    OpenGL.glVertexBindingDivisor = unsafeBitCast(OpenGL.getfp("glVertexBindingDivisor", support: [OpenGL.ss361, OpenGL.ss367, OpenGL.ss107]), to: Swift.type(of: OpenGL.glVertexBindingDivisor))
    OpenGL.glVertexBindingDivisor(bindingindex, divisor)
}
fileprivate 
func _load_glVertexBlendARB(count:OpenGL.Int)
{
    OpenGL.glVertexBlendARB = unsafeBitCast(OpenGL.getfp("glVertexBlendARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glVertexBlendARB))
    OpenGL.glVertexBlendARB(count)
}
fileprivate 
func _load_glVertexBlendEnvfATI(pname:OpenGL.Enum, param:OpenGL.Float)
{
    OpenGL.glVertexBlendEnvfATI = unsafeBitCast(OpenGL.getfp("glVertexBlendEnvfATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexBlendEnvfATI))
    OpenGL.glVertexBlendEnvfATI(pname, param)
}
fileprivate 
func _load_glVertexBlendEnviATI(pname:OpenGL.Enum, param:OpenGL.Int)
{
    OpenGL.glVertexBlendEnviATI = unsafeBitCast(OpenGL.getfp("glVertexBlendEnviATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexBlendEnviATI))
    OpenGL.glVertexBlendEnviATI(pname, param)
}
fileprivate 
func _load_glVertexFormatNV(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size)
{
    OpenGL.glVertexFormatNV = unsafeBitCast(OpenGL.getfp("glVertexFormatNV", support: [OpenGL.ss278]), to: Swift.type(of: OpenGL.glVertexFormatNV))
    OpenGL.glVertexFormatNV(size, type, stride)
}
fileprivate 
func _load_glVertexP2ui(type:OpenGL.Enum, value:OpenGL.UInt)
{
    OpenGL.glVertexP2ui = unsafeBitCast(OpenGL.getfp("glVertexP2ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP2ui))
    OpenGL.glVertexP2ui(type, value)
}
fileprivate 
func _load_glVertexP2uiv(type:OpenGL.Enum, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexP2uiv = unsafeBitCast(OpenGL.getfp("glVertexP2uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP2uiv))
    OpenGL.glVertexP2uiv(type, value)
}
fileprivate 
func _load_glVertexP3ui(type:OpenGL.Enum, value:OpenGL.UInt)
{
    OpenGL.glVertexP3ui = unsafeBitCast(OpenGL.getfp("glVertexP3ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP3ui))
    OpenGL.glVertexP3ui(type, value)
}
fileprivate 
func _load_glVertexP3uiv(type:OpenGL.Enum, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexP3uiv = unsafeBitCast(OpenGL.getfp("glVertexP3uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP3uiv))
    OpenGL.glVertexP3uiv(type, value)
}
fileprivate 
func _load_glVertexP4ui(type:OpenGL.Enum, value:OpenGL.UInt)
{
    OpenGL.glVertexP4ui = unsafeBitCast(OpenGL.getfp("glVertexP4ui", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP4ui))
    OpenGL.glVertexP4ui(type, value)
}
fileprivate 
func _load_glVertexP4uiv(type:OpenGL.Enum, value:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glVertexP4uiv = unsafeBitCast(OpenGL.getfp("glVertexP4uiv", support: [OpenGL.ss357, OpenGL.ss112]), to: Swift.type(of: OpenGL.glVertexP4uiv))
    OpenGL.glVertexP4uiv(type, value)
}
fileprivate 
func _load_glVertexPointer(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexPointer = unsafeBitCast(OpenGL.getfp("glVertexPointer", support: [OpenGL.ss347, OpenGL.ss369, OpenGL.ss364]), to: Swift.type(of: OpenGL.glVertexPointer))
    OpenGL.glVertexPointer(size, type, stride, pointer)
}
fileprivate 
func _load_glVertexPointerEXT(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, count:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexPointerEXT = unsafeBitCast(OpenGL.getfp("glVertexPointerEXT", support: [OpenGL.ss202]), to: Swift.type(of: OpenGL.glVertexPointerEXT))
    OpenGL.glVertexPointerEXT(size, type, stride, count, pointer)
}
fileprivate 
func _load_glVertexPointerListIBM(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:OpenGL.Int)
{
    OpenGL.glVertexPointerListIBM = unsafeBitCast(OpenGL.getfp("glVertexPointerListIBM", support: [OpenGL.ss212]), to: Swift.type(of: OpenGL.glVertexPointerListIBM))
    OpenGL.glVertexPointerListIBM(size, type, stride, pointer, ptrstride)
}
fileprivate 
func _load_glVertexPointervINTEL(size:OpenGL.Int, type:OpenGL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    OpenGL.glVertexPointervINTEL = unsafeBitCast(OpenGL.getfp("glVertexPointervINTEL", support: [OpenGL.ss218]), to: Swift.type(of: OpenGL.glVertexPointervINTEL))
    OpenGL.glVertexPointervINTEL(size, type, pointer)
}
fileprivate 
func _load_glVertexStream1dATI(stream:OpenGL.Enum, x:OpenGL.Double)
{
    OpenGL.glVertexStream1dATI = unsafeBitCast(OpenGL.getfp("glVertexStream1dATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1dATI))
    OpenGL.glVertexStream1dATI(stream, x)
}
fileprivate 
func _load_glVertexStream1dvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexStream1dvATI = unsafeBitCast(OpenGL.getfp("glVertexStream1dvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1dvATI))
    OpenGL.glVertexStream1dvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream1fATI(stream:OpenGL.Enum, x:OpenGL.Float)
{
    OpenGL.glVertexStream1fATI = unsafeBitCast(OpenGL.getfp("glVertexStream1fATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1fATI))
    OpenGL.glVertexStream1fATI(stream, x)
}
fileprivate 
func _load_glVertexStream1fvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexStream1fvATI = unsafeBitCast(OpenGL.getfp("glVertexStream1fvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1fvATI))
    OpenGL.glVertexStream1fvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream1iATI(stream:OpenGL.Enum, x:OpenGL.Int)
{
    OpenGL.glVertexStream1iATI = unsafeBitCast(OpenGL.getfp("glVertexStream1iATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1iATI))
    OpenGL.glVertexStream1iATI(stream, x)
}
fileprivate 
func _load_glVertexStream1ivATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexStream1ivATI = unsafeBitCast(OpenGL.getfp("glVertexStream1ivATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1ivATI))
    OpenGL.glVertexStream1ivATI(stream, coords)
}
fileprivate 
func _load_glVertexStream1sATI(stream:OpenGL.Enum, x:OpenGL.Short)
{
    OpenGL.glVertexStream1sATI = unsafeBitCast(OpenGL.getfp("glVertexStream1sATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1sATI))
    OpenGL.glVertexStream1sATI(stream, x)
}
fileprivate 
func _load_glVertexStream1svATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexStream1svATI = unsafeBitCast(OpenGL.getfp("glVertexStream1svATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream1svATI))
    OpenGL.glVertexStream1svATI(stream, coords)
}
fileprivate 
func _load_glVertexStream2dATI(stream:OpenGL.Enum, x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glVertexStream2dATI = unsafeBitCast(OpenGL.getfp("glVertexStream2dATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2dATI))
    OpenGL.glVertexStream2dATI(stream, x, y)
}
fileprivate 
func _load_glVertexStream2dvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexStream2dvATI = unsafeBitCast(OpenGL.getfp("glVertexStream2dvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2dvATI))
    OpenGL.glVertexStream2dvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream2fATI(stream:OpenGL.Enum, x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glVertexStream2fATI = unsafeBitCast(OpenGL.getfp("glVertexStream2fATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2fATI))
    OpenGL.glVertexStream2fATI(stream, x, y)
}
fileprivate 
func _load_glVertexStream2fvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexStream2fvATI = unsafeBitCast(OpenGL.getfp("glVertexStream2fvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2fvATI))
    OpenGL.glVertexStream2fvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream2iATI(stream:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glVertexStream2iATI = unsafeBitCast(OpenGL.getfp("glVertexStream2iATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2iATI))
    OpenGL.glVertexStream2iATI(stream, x, y)
}
fileprivate 
func _load_glVertexStream2ivATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexStream2ivATI = unsafeBitCast(OpenGL.getfp("glVertexStream2ivATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2ivATI))
    OpenGL.glVertexStream2ivATI(stream, coords)
}
fileprivate 
func _load_glVertexStream2sATI(stream:OpenGL.Enum, x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glVertexStream2sATI = unsafeBitCast(OpenGL.getfp("glVertexStream2sATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2sATI))
    OpenGL.glVertexStream2sATI(stream, x, y)
}
fileprivate 
func _load_glVertexStream2svATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexStream2svATI = unsafeBitCast(OpenGL.getfp("glVertexStream2svATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream2svATI))
    OpenGL.glVertexStream2svATI(stream, coords)
}
fileprivate 
func _load_glVertexStream3dATI(stream:OpenGL.Enum, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glVertexStream3dATI = unsafeBitCast(OpenGL.getfp("glVertexStream3dATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3dATI))
    OpenGL.glVertexStream3dATI(stream, x, y, z)
}
fileprivate 
func _load_glVertexStream3dvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexStream3dvATI = unsafeBitCast(OpenGL.getfp("glVertexStream3dvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3dvATI))
    OpenGL.glVertexStream3dvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream3fATI(stream:OpenGL.Enum, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glVertexStream3fATI = unsafeBitCast(OpenGL.getfp("glVertexStream3fATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3fATI))
    OpenGL.glVertexStream3fATI(stream, x, y, z)
}
fileprivate 
func _load_glVertexStream3fvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexStream3fvATI = unsafeBitCast(OpenGL.getfp("glVertexStream3fvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3fvATI))
    OpenGL.glVertexStream3fvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream3iATI(stream:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glVertexStream3iATI = unsafeBitCast(OpenGL.getfp("glVertexStream3iATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3iATI))
    OpenGL.glVertexStream3iATI(stream, x, y, z)
}
fileprivate 
func _load_glVertexStream3ivATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexStream3ivATI = unsafeBitCast(OpenGL.getfp("glVertexStream3ivATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3ivATI))
    OpenGL.glVertexStream3ivATI(stream, coords)
}
fileprivate 
func _load_glVertexStream3sATI(stream:OpenGL.Enum, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glVertexStream3sATI = unsafeBitCast(OpenGL.getfp("glVertexStream3sATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3sATI))
    OpenGL.glVertexStream3sATI(stream, x, y, z)
}
fileprivate 
func _load_glVertexStream3svATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexStream3svATI = unsafeBitCast(OpenGL.getfp("glVertexStream3svATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream3svATI))
    OpenGL.glVertexStream3svATI(stream, coords)
}
fileprivate 
func _load_glVertexStream4dATI(stream:OpenGL.Enum, x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glVertexStream4dATI = unsafeBitCast(OpenGL.getfp("glVertexStream4dATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4dATI))
    OpenGL.glVertexStream4dATI(stream, x, y, z, w)
}
fileprivate 
func _load_glVertexStream4dvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVertexStream4dvATI = unsafeBitCast(OpenGL.getfp("glVertexStream4dvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4dvATI))
    OpenGL.glVertexStream4dvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream4fATI(stream:OpenGL.Enum, x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glVertexStream4fATI = unsafeBitCast(OpenGL.getfp("glVertexStream4fATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4fATI))
    OpenGL.glVertexStream4fATI(stream, x, y, z, w)
}
fileprivate 
func _load_glVertexStream4fvATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexStream4fvATI = unsafeBitCast(OpenGL.getfp("glVertexStream4fvATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4fvATI))
    OpenGL.glVertexStream4fvATI(stream, coords)
}
fileprivate 
func _load_glVertexStream4iATI(stream:OpenGL.Enum, x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glVertexStream4iATI = unsafeBitCast(OpenGL.getfp("glVertexStream4iATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4iATI))
    OpenGL.glVertexStream4iATI(stream, x, y, z, w)
}
fileprivate 
func _load_glVertexStream4ivATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVertexStream4ivATI = unsafeBitCast(OpenGL.getfp("glVertexStream4ivATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4ivATI))
    OpenGL.glVertexStream4ivATI(stream, coords)
}
fileprivate 
func _load_glVertexStream4sATI(stream:OpenGL.Enum, x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glVertexStream4sATI = unsafeBitCast(OpenGL.getfp("glVertexStream4sATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4sATI))
    OpenGL.glVertexStream4sATI(stream, x, y, z, w)
}
fileprivate 
func _load_glVertexStream4svATI(stream:OpenGL.Enum, coords:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glVertexStream4svATI = unsafeBitCast(OpenGL.getfp("glVertexStream4svATI", support: [OpenGL.ss124]), to: Swift.type(of: OpenGL.glVertexStream4svATI))
    OpenGL.glVertexStream4svATI(stream, coords)
}
fileprivate 
func _load_glVertexWeightPointerEXT(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glVertexWeightPointerEXT = unsafeBitCast(OpenGL.getfp("glVertexWeightPointerEXT", support: [OpenGL.ss205]), to: Swift.type(of: OpenGL.glVertexWeightPointerEXT))
    OpenGL.glVertexWeightPointerEXT(size, type, stride, pointer)
}
fileprivate 
func _load_glVertexWeightfEXT(weight:OpenGL.Float)
{
    OpenGL.glVertexWeightfEXT = unsafeBitCast(OpenGL.getfp("glVertexWeightfEXT", support: [OpenGL.ss205]), to: Swift.type(of: OpenGL.glVertexWeightfEXT))
    OpenGL.glVertexWeightfEXT(weight)
}
fileprivate 
func _load_glVertexWeightfvEXT(weight:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVertexWeightfvEXT = unsafeBitCast(OpenGL.getfp("glVertexWeightfvEXT", support: [OpenGL.ss205]), to: Swift.type(of: OpenGL.glVertexWeightfvEXT))
    OpenGL.glVertexWeightfvEXT(weight)
}
fileprivate 
func _load_glVertexWeighthNV(weight:OpenGL.HalfNV)
{
    OpenGL.glVertexWeighthNV = unsafeBitCast(OpenGL.getfp("glVertexWeighthNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexWeighthNV))
    OpenGL.glVertexWeighthNV(weight)
}
fileprivate 
func _load_glVertexWeighthvNV(weight:UnsafePointer<OpenGL.HalfNV>?)
{
    OpenGL.glVertexWeighthvNV = unsafeBitCast(OpenGL.getfp("glVertexWeighthvNV", support: [OpenGL.ss254]), to: Swift.type(of: OpenGL.glVertexWeighthvNV))
    OpenGL.glVertexWeighthvNV(weight)
}
fileprivate 
func _load_glVideoCaptureNV(video_capture_slot:OpenGL.UInt, sequence_num:UnsafeMutablePointer<OpenGL.UInt>?, capture_time:UnsafeMutablePointer<OpenGL.UInt64EXT>?) -> OpenGL.Enum
{
    OpenGL.glVideoCaptureNV = unsafeBitCast(OpenGL.getfp("glVideoCaptureNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glVideoCaptureNV))
    return OpenGL.glVideoCaptureNV(video_capture_slot, sequence_num, capture_time)
}
fileprivate 
func _load_glVideoCaptureStreamParameterdvNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glVideoCaptureStreamParameterdvNV = unsafeBitCast(OpenGL.getfp("glVideoCaptureStreamParameterdvNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glVideoCaptureStreamParameterdvNV))
    OpenGL.glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glVideoCaptureStreamParameterfvNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glVideoCaptureStreamParameterfvNV = unsafeBitCast(OpenGL.getfp("glVideoCaptureStreamParameterfvNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glVideoCaptureStreamParameterfvNV))
    OpenGL.glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glVideoCaptureStreamParameterivNV(video_capture_slot:OpenGL.UInt, stream:OpenGL.UInt, pname:OpenGL.Enum, params:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glVideoCaptureStreamParameterivNV = unsafeBitCast(OpenGL.getfp("glVideoCaptureStreamParameterivNV", support: [OpenGL.ss281]), to: Swift.type(of: OpenGL.glVideoCaptureStreamParameterivNV))
    OpenGL.glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params)
}
fileprivate 
func _load_glViewport(x:OpenGL.Int, y:OpenGL.Int, width:OpenGL.Size, height:OpenGL.Size)
{
    OpenGL.glViewport = unsafeBitCast(OpenGL.getfp("glViewport", support: [OpenGL.ss346, OpenGL.ss365]), to: Swift.type(of: OpenGL.glViewport))
    OpenGL.glViewport(x, y, width, height)
}
fileprivate 
func _load_glViewportArrayv(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glViewportArrayv = unsafeBitCast(OpenGL.getfp("glViewportArrayv", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glViewportArrayv))
    OpenGL.glViewportArrayv(first, count, v)
}
fileprivate 
func _load_glViewportArrayvNV(first:OpenGL.UInt, count:OpenGL.Size, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glViewportArrayvNV = unsafeBitCast(OpenGL.getfp("glViewportArrayvNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glViewportArrayvNV))
    OpenGL.glViewportArrayvNV(first, count, v)
}
fileprivate 
func _load_glViewportIndexedf(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, w:OpenGL.Float, h:OpenGL.Float)
{
    OpenGL.glViewportIndexedf = unsafeBitCast(OpenGL.getfp("glViewportIndexedf", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glViewportIndexedf))
    OpenGL.glViewportIndexedf(index, x, y, w, h)
}
fileprivate 
func _load_glViewportIndexedfNV(index:OpenGL.UInt, x:OpenGL.Float, y:OpenGL.Float, w:OpenGL.Float, h:OpenGL.Float)
{
    OpenGL.glViewportIndexedfNV = unsafeBitCast(OpenGL.getfp("glViewportIndexedfNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glViewportIndexedfNV))
    OpenGL.glViewportIndexedfNV(index, x, y, w, h)
}
fileprivate 
func _load_glViewportIndexedfv(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glViewportIndexedfv = unsafeBitCast(OpenGL.getfp("glViewportIndexedfv", support: [OpenGL.ss359, OpenGL.ss113]), to: Swift.type(of: OpenGL.glViewportIndexedfv))
    OpenGL.glViewportIndexedfv(index, v)
}
fileprivate 
func _load_glViewportIndexedfvNV(index:OpenGL.UInt, v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glViewportIndexedfvNV = unsafeBitCast(OpenGL.getfp("glViewportIndexedfvNV", support: [OpenGL.ss282]), to: Swift.type(of: OpenGL.glViewportIndexedfvNV))
    OpenGL.glViewportIndexedfvNV(index, v)
}
fileprivate 
func _load_glWaitSync(sync:OpenGL.Sync, flags:OpenGL.Bitfield, timeout:OpenGL.UInt64)
{
    OpenGL.glWaitSync = unsafeBitCast(OpenGL.getfp("glWaitSync", support: [OpenGL.ss356, OpenGL.ss366, OpenGL.ss89]), to: Swift.type(of: OpenGL.glWaitSync))
    OpenGL.glWaitSync(sync, flags, timeout)
}
fileprivate 
func _load_glWaitSyncAPPLE(sync:OpenGL.Sync, flags:OpenGL.Bitfield, timeout:OpenGL.UInt64)
{
    OpenGL.glWaitSyncAPPLE = unsafeBitCast(OpenGL.getfp("glWaitSyncAPPLE", support: [OpenGL.ss23]), to: Swift.type(of: OpenGL.glWaitSyncAPPLE))
    OpenGL.glWaitSyncAPPLE(sync, flags, timeout)
}
fileprivate 
func _load_glWeightPathsNV(resultPath:OpenGL.UInt, numPaths:OpenGL.Size, paths:UnsafePointer<OpenGL.UInt>?, weights:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWeightPathsNV = unsafeBitCast(OpenGL.getfp("glWeightPathsNV", support: [OpenGL.ss260]), to: Swift.type(of: OpenGL.glWeightPathsNV))
    OpenGL.glWeightPathsNV(resultPath, numPaths, paths, weights)
}
fileprivate 
func _load_glWeightPointerARB(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glWeightPointerARB = unsafeBitCast(OpenGL.getfp("glWeightPointerARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightPointerARB))
    OpenGL.glWeightPointerARB(size, type, stride, pointer)
}
fileprivate 
func _load_glWeightPointerOES(size:OpenGL.Int, type:OpenGL.Enum, stride:OpenGL.Size, pointer:UnsafeRawPointer?)
{
    OpenGL.glWeightPointerOES = unsafeBitCast(OpenGL.getfp("glWeightPointerOES", support: [OpenGL.ss297]), to: Swift.type(of: OpenGL.glWeightPointerOES))
    OpenGL.glWeightPointerOES(size, type, stride, pointer)
}
fileprivate 
func _load_glWeightbvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.Byte>?)
{
    OpenGL.glWeightbvARB = unsafeBitCast(OpenGL.getfp("glWeightbvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightbvARB))
    OpenGL.glWeightbvARB(size, weights)
}
fileprivate 
func _load_glWeightdvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWeightdvARB = unsafeBitCast(OpenGL.getfp("glWeightdvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightdvARB))
    OpenGL.glWeightdvARB(size, weights)
}
fileprivate 
func _load_glWeightfvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWeightfvARB = unsafeBitCast(OpenGL.getfp("glWeightfvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightfvARB))
    OpenGL.glWeightfvARB(size, weights)
}
fileprivate 
func _load_glWeightivARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWeightivARB = unsafeBitCast(OpenGL.getfp("glWeightivARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightivARB))
    OpenGL.glWeightivARB(size, weights)
}
fileprivate 
func _load_glWeightsvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWeightsvARB = unsafeBitCast(OpenGL.getfp("glWeightsvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightsvARB))
    OpenGL.glWeightsvARB(size, weights)
}
fileprivate 
func _load_glWeightubvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.UByte>?)
{
    OpenGL.glWeightubvARB = unsafeBitCast(OpenGL.getfp("glWeightubvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightubvARB))
    OpenGL.glWeightubvARB(size, weights)
}
fileprivate 
func _load_glWeightuivARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.UInt>?)
{
    OpenGL.glWeightuivARB = unsafeBitCast(OpenGL.getfp("glWeightuivARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightuivARB))
    OpenGL.glWeightuivARB(size, weights)
}
fileprivate 
func _load_glWeightusvARB(size:OpenGL.Int, weights:UnsafePointer<OpenGL.UShort>?)
{
    OpenGL.glWeightusvARB = unsafeBitCast(OpenGL.getfp("glWeightusvARB", support: [OpenGL.ss108]), to: Swift.type(of: OpenGL.glWeightusvARB))
    OpenGL.glWeightusvARB(size, weights)
}
fileprivate 
func _load_glWindowPos2d(x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glWindowPos2d = unsafeBitCast(OpenGL.getfp("glWindowPos2d", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2d))
    OpenGL.glWindowPos2d(x, y)
}
fileprivate 
func _load_glWindowPos2dARB(x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glWindowPos2dARB = unsafeBitCast(OpenGL.getfp("glWindowPos2dARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2dARB))
    OpenGL.glWindowPos2dARB(x, y)
}
fileprivate 
func _load_glWindowPos2dMESA(x:OpenGL.Double, y:OpenGL.Double)
{
    OpenGL.glWindowPos2dMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2dMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2dMESA))
    OpenGL.glWindowPos2dMESA(x, y)
}
fileprivate 
func _load_glWindowPos2dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos2dv = unsafeBitCast(OpenGL.getfp("glWindowPos2dv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2dv))
    OpenGL.glWindowPos2dv(v)
}
fileprivate 
func _load_glWindowPos2dvARB(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos2dvARB = unsafeBitCast(OpenGL.getfp("glWindowPos2dvARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2dvARB))
    OpenGL.glWindowPos2dvARB(v)
}
fileprivate 
func _load_glWindowPos2dvMESA(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos2dvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2dvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2dvMESA))
    OpenGL.glWindowPos2dvMESA(v)
}
fileprivate 
func _load_glWindowPos2f(x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glWindowPos2f = unsafeBitCast(OpenGL.getfp("glWindowPos2f", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2f))
    OpenGL.glWindowPos2f(x, y)
}
fileprivate 
func _load_glWindowPos2fARB(x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glWindowPos2fARB = unsafeBitCast(OpenGL.getfp("glWindowPos2fARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2fARB))
    OpenGL.glWindowPos2fARB(x, y)
}
fileprivate 
func _load_glWindowPos2fMESA(x:OpenGL.Float, y:OpenGL.Float)
{
    OpenGL.glWindowPos2fMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2fMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2fMESA))
    OpenGL.glWindowPos2fMESA(x, y)
}
fileprivate 
func _load_glWindowPos2fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos2fv = unsafeBitCast(OpenGL.getfp("glWindowPos2fv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2fv))
    OpenGL.glWindowPos2fv(v)
}
fileprivate 
func _load_glWindowPos2fvARB(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos2fvARB = unsafeBitCast(OpenGL.getfp("glWindowPos2fvARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2fvARB))
    OpenGL.glWindowPos2fvARB(v)
}
fileprivate 
func _load_glWindowPos2fvMESA(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos2fvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2fvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2fvMESA))
    OpenGL.glWindowPos2fvMESA(v)
}
fileprivate 
func _load_glWindowPos2i(x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glWindowPos2i = unsafeBitCast(OpenGL.getfp("glWindowPos2i", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2i))
    OpenGL.glWindowPos2i(x, y)
}
fileprivate 
func _load_glWindowPos2iARB(x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glWindowPos2iARB = unsafeBitCast(OpenGL.getfp("glWindowPos2iARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2iARB))
    OpenGL.glWindowPos2iARB(x, y)
}
fileprivate 
func _load_glWindowPos2iMESA(x:OpenGL.Int, y:OpenGL.Int)
{
    OpenGL.glWindowPos2iMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2iMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2iMESA))
    OpenGL.glWindowPos2iMESA(x, y)
}
fileprivate 
func _load_glWindowPos2iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos2iv = unsafeBitCast(OpenGL.getfp("glWindowPos2iv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2iv))
    OpenGL.glWindowPos2iv(v)
}
fileprivate 
func _load_glWindowPos2ivARB(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos2ivARB = unsafeBitCast(OpenGL.getfp("glWindowPos2ivARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2ivARB))
    OpenGL.glWindowPos2ivARB(v)
}
fileprivate 
func _load_glWindowPos2ivMESA(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos2ivMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2ivMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2ivMESA))
    OpenGL.glWindowPos2ivMESA(v)
}
fileprivate 
func _load_glWindowPos2s(x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glWindowPos2s = unsafeBitCast(OpenGL.getfp("glWindowPos2s", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2s))
    OpenGL.glWindowPos2s(x, y)
}
fileprivate 
func _load_glWindowPos2sARB(x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glWindowPos2sARB = unsafeBitCast(OpenGL.getfp("glWindowPos2sARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2sARB))
    OpenGL.glWindowPos2sARB(x, y)
}
fileprivate 
func _load_glWindowPos2sMESA(x:OpenGL.Short, y:OpenGL.Short)
{
    OpenGL.glWindowPos2sMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2sMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2sMESA))
    OpenGL.glWindowPos2sMESA(x, y)
}
fileprivate 
func _load_glWindowPos2sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos2sv = unsafeBitCast(OpenGL.getfp("glWindowPos2sv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos2sv))
    OpenGL.glWindowPos2sv(v)
}
fileprivate 
func _load_glWindowPos2svARB(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos2svARB = unsafeBitCast(OpenGL.getfp("glWindowPos2svARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos2svARB))
    OpenGL.glWindowPos2svARB(v)
}
fileprivate 
func _load_glWindowPos2svMESA(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos2svMESA = unsafeBitCast(OpenGL.getfp("glWindowPos2svMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos2svMESA))
    OpenGL.glWindowPos2svMESA(v)
}
fileprivate 
func _load_glWindowPos3d(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glWindowPos3d = unsafeBitCast(OpenGL.getfp("glWindowPos3d", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3d))
    OpenGL.glWindowPos3d(x, y, z)
}
fileprivate 
func _load_glWindowPos3dARB(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glWindowPos3dARB = unsafeBitCast(OpenGL.getfp("glWindowPos3dARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3dARB))
    OpenGL.glWindowPos3dARB(x, y, z)
}
fileprivate 
func _load_glWindowPos3dMESA(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double)
{
    OpenGL.glWindowPos3dMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3dMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3dMESA))
    OpenGL.glWindowPos3dMESA(x, y, z)
}
fileprivate 
func _load_glWindowPos3dv(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos3dv = unsafeBitCast(OpenGL.getfp("glWindowPos3dv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3dv))
    OpenGL.glWindowPos3dv(v)
}
fileprivate 
func _load_glWindowPos3dvARB(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos3dvARB = unsafeBitCast(OpenGL.getfp("glWindowPos3dvARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3dvARB))
    OpenGL.glWindowPos3dvARB(v)
}
fileprivate 
func _load_glWindowPos3dvMESA(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos3dvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3dvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3dvMESA))
    OpenGL.glWindowPos3dvMESA(v)
}
fileprivate 
func _load_glWindowPos3f(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glWindowPos3f = unsafeBitCast(OpenGL.getfp("glWindowPos3f", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3f))
    OpenGL.glWindowPos3f(x, y, z)
}
fileprivate 
func _load_glWindowPos3fARB(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glWindowPos3fARB = unsafeBitCast(OpenGL.getfp("glWindowPos3fARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3fARB))
    OpenGL.glWindowPos3fARB(x, y, z)
}
fileprivate 
func _load_glWindowPos3fMESA(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float)
{
    OpenGL.glWindowPos3fMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3fMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3fMESA))
    OpenGL.glWindowPos3fMESA(x, y, z)
}
fileprivate 
func _load_glWindowPos3fv(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos3fv = unsafeBitCast(OpenGL.getfp("glWindowPos3fv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3fv))
    OpenGL.glWindowPos3fv(v)
}
fileprivate 
func _load_glWindowPos3fvARB(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos3fvARB = unsafeBitCast(OpenGL.getfp("glWindowPos3fvARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3fvARB))
    OpenGL.glWindowPos3fvARB(v)
}
fileprivate 
func _load_glWindowPos3fvMESA(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos3fvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3fvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3fvMESA))
    OpenGL.glWindowPos3fvMESA(v)
}
fileprivate 
func _load_glWindowPos3i(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glWindowPos3i = unsafeBitCast(OpenGL.getfp("glWindowPos3i", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3i))
    OpenGL.glWindowPos3i(x, y, z)
}
fileprivate 
func _load_glWindowPos3iARB(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glWindowPos3iARB = unsafeBitCast(OpenGL.getfp("glWindowPos3iARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3iARB))
    OpenGL.glWindowPos3iARB(x, y, z)
}
fileprivate 
func _load_glWindowPos3iMESA(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int)
{
    OpenGL.glWindowPos3iMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3iMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3iMESA))
    OpenGL.glWindowPos3iMESA(x, y, z)
}
fileprivate 
func _load_glWindowPos3iv(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos3iv = unsafeBitCast(OpenGL.getfp("glWindowPos3iv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3iv))
    OpenGL.glWindowPos3iv(v)
}
fileprivate 
func _load_glWindowPos3ivARB(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos3ivARB = unsafeBitCast(OpenGL.getfp("glWindowPos3ivARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3ivARB))
    OpenGL.glWindowPos3ivARB(v)
}
fileprivate 
func _load_glWindowPos3ivMESA(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos3ivMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3ivMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3ivMESA))
    OpenGL.glWindowPos3ivMESA(v)
}
fileprivate 
func _load_glWindowPos3s(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glWindowPos3s = unsafeBitCast(OpenGL.getfp("glWindowPos3s", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3s))
    OpenGL.glWindowPos3s(x, y, z)
}
fileprivate 
func _load_glWindowPos3sARB(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glWindowPos3sARB = unsafeBitCast(OpenGL.getfp("glWindowPos3sARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3sARB))
    OpenGL.glWindowPos3sARB(x, y, z)
}
fileprivate 
func _load_glWindowPos3sMESA(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short)
{
    OpenGL.glWindowPos3sMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3sMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3sMESA))
    OpenGL.glWindowPos3sMESA(x, y, z)
}
fileprivate 
func _load_glWindowPos3sv(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos3sv = unsafeBitCast(OpenGL.getfp("glWindowPos3sv", support: [OpenGL.ss350, OpenGL.ss369]), to: Swift.type(of: OpenGL.glWindowPos3sv))
    OpenGL.glWindowPos3sv(v)
}
fileprivate 
func _load_glWindowPos3svARB(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos3svARB = unsafeBitCast(OpenGL.getfp("glWindowPos3svARB", support: [OpenGL.ss114]), to: Swift.type(of: OpenGL.glWindowPos3svARB))
    OpenGL.glWindowPos3svARB(v)
}
fileprivate 
func _load_glWindowPos3svMESA(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos3svMESA = unsafeBitCast(OpenGL.getfp("glWindowPos3svMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos3svMESA))
    OpenGL.glWindowPos3svMESA(v)
}
fileprivate 
func _load_glWindowPos4dMESA(x:OpenGL.Double, y:OpenGL.Double, z:OpenGL.Double, w:OpenGL.Double)
{
    OpenGL.glWindowPos4dMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4dMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4dMESA))
    OpenGL.glWindowPos4dMESA(x, y, z, w)
}
fileprivate 
func _load_glWindowPos4dvMESA(v:UnsafePointer<OpenGL.Double>?)
{
    OpenGL.glWindowPos4dvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4dvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4dvMESA))
    OpenGL.glWindowPos4dvMESA(v)
}
fileprivate 
func _load_glWindowPos4fMESA(x:OpenGL.Float, y:OpenGL.Float, z:OpenGL.Float, w:OpenGL.Float)
{
    OpenGL.glWindowPos4fMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4fMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4fMESA))
    OpenGL.glWindowPos4fMESA(x, y, z, w)
}
fileprivate 
func _load_glWindowPos4fvMESA(v:UnsafePointer<OpenGL.Float>?)
{
    OpenGL.glWindowPos4fvMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4fvMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4fvMESA))
    OpenGL.glWindowPos4fvMESA(v)
}
fileprivate 
func _load_glWindowPos4iMESA(x:OpenGL.Int, y:OpenGL.Int, z:OpenGL.Int, w:OpenGL.Int)
{
    OpenGL.glWindowPos4iMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4iMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4iMESA))
    OpenGL.glWindowPos4iMESA(x, y, z, w)
}
fileprivate 
func _load_glWindowPos4ivMESA(v:UnsafePointer<OpenGL.Int>?)
{
    OpenGL.glWindowPos4ivMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4ivMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4ivMESA))
    OpenGL.glWindowPos4ivMESA(v)
}
fileprivate 
func _load_glWindowPos4sMESA(x:OpenGL.Short, y:OpenGL.Short, z:OpenGL.Short, w:OpenGL.Short)
{
    OpenGL.glWindowPos4sMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4sMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4sMESA))
    OpenGL.glWindowPos4sMESA(x, y, z, w)
}
fileprivate 
func _load_glWindowPos4svMESA(v:UnsafePointer<OpenGL.Short>?)
{
    OpenGL.glWindowPos4svMESA = unsafeBitCast(OpenGL.getfp("glWindowPos4svMESA", support: [OpenGL.ss224]), to: Swift.type(of: OpenGL.glWindowPos4svMESA))
    OpenGL.glWindowPos4svMESA(v)
}
fileprivate 
func _load_glWriteMaskEXT(res:OpenGL.UInt, input:OpenGL.UInt, outX:OpenGL.Enum, outY:OpenGL.Enum, outZ:OpenGL.Enum, outW:OpenGL.Enum)
{
    OpenGL.glWriteMaskEXT = unsafeBitCast(OpenGL.getfp("glWriteMaskEXT", support: [OpenGL.ss204]), to: Swift.type(of: OpenGL.glWriteMaskEXT))
    OpenGL.glWriteMaskEXT(res, input, outX, outY, outZ, outW)
}
